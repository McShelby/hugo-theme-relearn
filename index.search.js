var relearn_search_index = [
  {
    "breadcrumb": "",
    "content": "Discover what this Hugo theme is all about and the core-concepts behind it.",
    "description": "Discover what this Hugo theme is all about and the core-concepts behind it.",
    "tags": [],
    "title": "Basics",
    "uri": "/hugo-theme-relearn/basics/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children",
    "content": "This is a plain demo child page.",
    "description": "This is a plain page test, and the beginning of a YAML multiline description...",
    "tags": [
      "Children"
    ],
    "title": "page X",
    "uri": "/hugo-theme-relearn/shortcodes/children/test/index.html"
  },
  {
    "breadcrumb": "Content",
    "content": "In Hugo, pages are the core of your site. Once it is configured, pages are definitely the added value to your documentation site.\nFolders Organize your site like any other Hugo project. Typically, you will have a content folder with all your pages.\ncontent ├── level-one │ ├── level-two │ │ ├── level-three │ │ │ ├── level-four │ │ │ │ ├── _index.md \u003c-- /level-one/level-two/level-three/level-four │ │ │ │ ├── page-4-a.md \u003c-- /level-one/level-two/level-three/level-four/page-4-a │ │ │ │ ├── page-4-b.md \u003c-- /level-one/level-two/level-three/level-four/page-4-b │ │ │ │ └── page-4-c.md \u003c-- /level-one/level-two/level-three/level-four/page-4-c │ │ │ ├── _index.md \u003c-- /level-one/level-two/level-three │ │ │ ├── page-3-a.md \u003c-- /level-one/level-two/level-three/page-3-a │ │ │ ├── page-3-b.md \u003c-- /level-one/level-two/level-three/page-3-b │ │ │ └── page-3-c.md \u003c-- /level-one/level-two/level-three/page-3-c │ │ ├── _index.md \u003c-- /level-one/level-two │ │ ├── page-2-a.md \u003c-- /level-one/level-two/page-2-a │ │ ├── page-2-b.md \u003c-- /level-one/level-two/page-2-b │ │ └── page-2-c.md \u003c-- /level-one/level-two/page-2-c │ ├── _index.md \u003c-- /level-one │ ├── page-1-a.md \u003c-- /level-one/page-1-a │ ├── page-1-b.md \u003c-- /level-one/page-1-b │ └── page-1-c.md \u003c-- /level-one/page-1-c ├── _index.md \u003c-- / └── page-top.md \u003c-- /page-top Note _index.md is required in each folder, it’s your “folder home page”\nCreate your project The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you to train by following great documentation for beginners.\nHugo provides a new command to create a new website.\nhugo new site \u003cnew_project\u003e The Relearn theme provides archetypes to help you create this kind of pages.",
    "description": "In Hugo, pages are the core of your site. Once it is configured, pages are definitely the added value to your documentation site.",
    "tags": [],
    "title": "Pages organization",
    "uri": "/hugo-theme-relearn/cont/pages/index.html"
  },
  {
    "breadcrumb": "",
    "content": "Find out how to create and organize your content quickly and intuitively.",
    "description": "Find out how to create and organize your content quickly and intuitively.",
    "tags": [],
    "title": "Content",
    "uri": "/hugo-theme-relearn/cont/index.html"
  },
  {
    "breadcrumb": "Content",
    "content": "Each Hugo page has to define a frontmatter.\nAll Frontmatter Options The values reflect example options. The defaults can be taken from the annotated example below.\n​ toml yaml json +++ LastModifierDisplayName = '' LastModifierEmail = '' alwaysopen = '' collapsibleMenu = true customMathJaxURL = '' customMermaidURL = '' customOpenapiURL = '' description = '' disableBreadcrumb = false disableMathJax = true disableMermaid = true disableNextPrev = false disableOpenapi = true disableToc = false editURL = '' headingPost = '' headingPre = '' hidden = false highlightWrap = true images = ['images/hero.png'] mathJaxInitialize = '{}' menuPost = '' menuPre = '' mermaidInitialize = '{ \"securityLevel\": \"loose\" }' mermaidZoom = true ordersectionsby = 'weight' title = 'Example Page' [image] errorlevel = '' [imageEffects] border = true lazy = true lightbox = true shadow = false [include] errorlevel = '' [link] errorlevel = '' [openapi] errorlevel = '' +++ --- LastModifierDisplayName: \"\" LastModifierEmail: \"\" alwaysopen: \"\" collapsibleMenu: true customMathJaxURL: \"\" customMermaidURL: \"\" customOpenapiURL: \"\" description: \"\" disableBreadcrumb: false disableMathJax: true disableMermaid: true disableNextPrev: false disableOpenapi: true disableToc: false editURL: \"\" headingPost: \"\" headingPre: \"\" hidden: false highlightWrap: true image: errorlevel: \"\" imageEffects: border: true lazy: true lightbox: true shadow: false images: - images/hero.png include: errorlevel: \"\" link: errorlevel: \"\" mathJaxInitialize: '{}' menuPost: \"\" menuPre: \"\" mermaidInitialize: '{ \"securityLevel\": \"loose\" }' mermaidZoom: true openapi: errorlevel: \"\" ordersectionsby: weight title: Example Page --- { \"LastModifierDisplayName\": \"\", \"LastModifierEmail\": \"\", \"alwaysopen\": \"\", \"collapsibleMenu\": true, \"customMathJaxURL\": \"\", \"customMermaidURL\": \"\", \"customOpenapiURL\": \"\", \"description\": \"\", \"disableBreadcrumb\": false, \"disableMathJax\": true, \"disableMermaid\": true, \"disableNextPrev\": false, \"disableOpenapi\": true, \"disableToc\": false, \"editURL\": \"\", \"headingPost\": \"\", \"headingPre\": \"\", \"hidden\": false, \"highlightWrap\": true, \"image\": { \"errorlevel\": \"\" }, \"imageEffects\": { \"border\": true, \"lazy\": true, \"lightbox\": true, \"shadow\": false }, \"images\": [ \"images/hero.png\" ], \"include\": { \"errorlevel\": \"\" }, \"link\": { \"errorlevel\": \"\" }, \"mathJaxInitialize\": \"{}\", \"menuPost\": \"\", \"menuPre\": \"\", \"mermaidInitialize\": \"{ \\\"securityLevel\\\": \\\"loose\\\" }\", \"mermaidZoom\": true, \"openapi\": { \"errorlevel\": \"\" }, \"ordersectionsby\": \"weight\", \"title\": \"Example Page\" } Annotated Frontmatter Options ​ toml +++ # If an option value is said to be not set, you can achieve the same behavior # by giving it an empty string value. ############################################################################### # Hugo # These options usually apply to other themes as well. # The social media image of your page. # Default: not set # This is used for generating social media meta information for the opengraph # protocol and twitter cards. # If not set, the set value of your site's hugo.toml is used. images = [ \"images/hero.png\" ] # The title of your page. # Default: not set # A page without a title is treated as a hidden page. title = \"Example Page\" # The description of your page. # Default: not set # This is used for generating HTML meta tags, social media meta information # for the opengraph protocol and twitter cards. # If not set, the set value of your site's hugo.toml is used for the html # meta tag, social media meta information for the opengraph protocol and # twitter cards. description = \"\" ############################################################################### # Relearn Theme # These options are specific to the Relearn theme. #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Topbar # These options modify the topbar appearance. # Hide the table of contents button. # Default: false # If the TOC button is hidden, also the keyboard shortcut is disabled. # If not set, the set value of your site's hugo.toml is used. disableToc = false # Hide the breadcrumbs. # Default: false # If the breadcrumbs are hidden, the title of the displayed page will still be # shown in the topbar. disableBreadcrumb = false # Hide Next and Previous navigation buttons. # Default: false # If the navigation buttons are hidden, also the keyboard shortcuts are # disabled. disableNextPrev = false # The URL prefix to edit a page. # Default: not set # If set, an edit button will be shown in the topbar. If the button is hidden, # also the keyboard shortcuts are disabled. The value can contain the macro # `${FilePath}` which will be replaced by the file path of your displayed page. # If not set, the set value of your site's hugo.toml is used. If the global # parameter is given but you want to hide the button for the displayed page, # you can set the value to an empty string. If instead of hiding you want to have # an disabled button, you can set the value to a string containing just spaces. # This is useful if you want to give the opportunity for people to create merge # request for your content. editURL = \"\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Menu # These options modify the menu appearance. # Prefix for the title in main menu. # Default: not set # The title of the page in the menu will be prefixed by this HTML content. menuPre = \"\" # Suffix for the title in main menu. # Default: not set # The title of the page in the menu will be suffixed by this HTML content. menuPost = \"\" # The order of main menu submenus. # Default: \"weight\" # Submenus can be ordered by \"weight\", \"title\", \"linktitle\", \"modifieddate\", # \"expirydate\", \"publishdate\", \"date\", \"length\" or \"default\" (adhering to # Hugo's default sort order). # If not set, the value of the parent menu entry is used. ordersectionsby = \"weight\" # The initial expand state of submenus. # Default: not set # This controls whether submenus will be expanded (true), or collapsed (false) # in the menu. If not set, the first menu level is set to false, all others # levels are set to true. If not set, the value of the parent menu entry is used. # If the displayed page has submenus, they will always been displayed expanded # regardless of this option. alwaysopen = \"\" # Shows expander for submenus. # Default: false # If set to true, a submenu in the sidebar will be displayed in a collapsible # tree view and a clickable expander is set in front of the entry. # If not set, the set value of your site's hugo.toml is used. collapsibleMenu = true #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Hidden pages # These options configure how hidden pages are treated. # A page flagged as hidden, is only removed from the main menu if you are # currently not on this page or the hidden page is not part of current page's # ancestors. For all other functionality in Hugo a hidden page behaves like any # other page if not otherwise configured. # Hide a page's menu entry. # Default: false # If this value is true, the page is hidden from the menu. hidden = false #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Content # These options modify how your content is displayed. # Prefix for the title in the content area. # Default: not set # The title of the page heading will be prefixed by this HTML content. headingPre = \"\" # Suffix for the title in the content area. # Default: not set # The title of the page heading will be suffixed by this HTML content. headingPost = \"\" # Display name of the page's last editor. # Default: not set # If set, it will be displayed in the default footer. LastModifierDisplayName = \"\" # Email address of the page's last editor. # Default: not set # If set together with LastModifierDisplayName, it will be displayed in the # default footer. LastModifierEmail = \"\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Highlight # These options configure how code is displayed. # Wrap for code blocks. # Default: true # By default lines of code blocks wrap around if the line is too long to be # displayed on screen. If you dislike this behavior, you can reconfigure it # here. # Note that lines always wrap in print mode regardless of this option. # If not set, the set value of your site's hugo.toml is used or given as a # parameter to individual code blocks. highlightWrap = true #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Include # These options configure how the include shortcode works. # What to do when path is not resolved. # Default: \"\" # You can control what should happen if a path can not be resolved to as # a resource or via the file system. If not set, no output will be written # for the unresolved path. If set to `warning` the same happens and an additional # warning is printed. If set to `error` an error message is printed and the build # is aborted. # If not set, the set value of your site's hugo.toml is used. include.errorlevel = \"\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Images # These options configure how images are displayed. # What to do when local image link is not resolved. # Default: \"\" # You can control what should happen if a local image can not be resolved to as # a resource. If not set, the unresolved link is written as given into the resulting # output. If set to `warning` the same happens and an additional warning is # printed. If set to `error` an error message is printed and the build is # aborted. # Please note that this can not resolve files inside of your `static` directory. # If not set, the set value of your site's hugo.toml is used. image.errorlevel = \"\" # Image effects. # See the documentation for how you can even add your own arbitrary effects to # the list. # All effect values default to the values of your site's hugo.toml and can be # overridden through URL parameter given to the image. See the documentation for # details. # Default: false imageEffects.border = true # Default: true imageEffects.lazy = true # Default: true imageEffects.lightbox = true # Default: false imageEffects.shadow = false #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Links # These options configure how links are displayed. # What to do when local page link is not resolved. # Default: \"\" # You can control what should happen if a local link can not be resolved to a # page. If not set, the unresolved link is written as given into the resulting # output. If set to `warning` the same happens and an additional warning is # printed. If set to `error` an error message is printed and the build is # aborted. # Please note that with Hugo \u003c 0.123.0 + `uglyURLs=true` this can lead to false # negatives. # If not set, the set value of your site's hugo.toml is used. link.errorlevel = \"\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # MathJax # These options configure how math formulae are displayed. # Initialization options for MathJax. # Default: not set # A JSON value. See the MathJaxdocumentation for possible parameter. # If not set, the set value of your site's hugo.toml is used. mathJaxInitialize = \"{}\" # Only load MathJax if needed. # Default: true # If a Math shortcode is found, the option will be ignored and # MathJax will be loaded regardlessly. The option is still useful in case you # are using scripting to set up your graph. In this case no shortcode or # Markdown codefence is involved and the library is not loaded by default. In this case # you can set `disableMathJax=false` in your frontmatter to force the library to # be loaded. # If not set, the set value of your site's hugo.toml is used. disableMathJax = true # URL for external MathJax library. # Default: not set # Specifies the remote location of the MathJax library. By default the shipped # version will be used. # If not set, the set value of your site's hugo.toml is used. customMathJaxURL = \"\" # \"https://unpkg.com/mathjax/es5/tex-mml-chtml.js\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Mermaid # These options configure how Mermaid graphs are displayed. # Make graphs panable and zoomable # Default: false # For huge graphs it can be helpful to make them zoomable. Zoomable graphs come # with a reset button for the zoom. # If not set, the set value of your site's hugo.toml is used or given as a # parameter to individual graphs. mermaidZoom = true # Initialization options for Mermaid. # Default: not set # A JSON value. See the Mermaid documentation for possible parameter. # If not set, the set value of your site's hugo.toml is used. mermaidInitialize = \"{ \\\"securityLevel\\\": \\\"loose\\\" }\" # Only load Mermaid if needed. # Default: true # If a Mermaid shortcode or Markdown codefence is found, the option will be ignored and # Mermaid will be loaded regardlessly. The option is still useful in case you # are using scripting to set up your graph. In this case no shortcode or # Markdown codefence is involved and the library is not loaded by default. In this case # you can set `disableMermaid=false` in your frontmatter to force the library to # be loaded. # If not set, the set value of your site's hugo.toml is used. disableMermaid = true # URL for external Mermaid library. # Default: not set # Specifies the remote location of the Mermaid library. By default the shipped # version will be used. # If not set, the set value of your site's hugo.toml is used. customMermaidURL = \"\" # \"https://unpkg.com/mermaid/dist/mermaid.min.js\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # OpenApi # These options configure how OpenAPI specifications are displayed. # Only load OpenAPI if needed. # Default: true # If a OpenAPI shortcode is found, the option will be ignored and # OpenAPI will be loaded regardlessly. The option is still useful in case you # are using scripting to set up your graph. In this case no shortcode or # Markdown codefence is involved and the library is not loaded by default. In this case # you can set `disableOpenapi=false` in your frontmatter to force the library to # be loaded. # If not set, the set value of your site's hugo.toml is used. disableOpenapi = true # URL for external OpenAPI library. # Default: not set # Specifies the remote location of the OpenAPI library. By default the shipped # version will be used. # If not set, the set value of your site's hugo.toml is used. customOpenapiURL = \"\" # \"https://unpkg.com/swagger-ui-dist/swagger-ui-bundle.js\" # What to do when a local OpenAPI spec link is not resolved. # Default: \"\" # You can control what should happen if a local OpenAPI spec link can not be resolved # to a resource. If not set, the unresolved link is written as given into the resulting # output. If set to `warning` the same happens and an additional warning is # printed. If set to `error` an error message is printed and the build is # aborted. # Please note that this can not resolve files inside of your `static` directory. # If not set, the set value of your site's hugo.toml is used. openapi.errorlevel = \"\" +++ Some Detailed Examples Add Icon to a Menu Entry In the page frontmatter, add a menuPre param to insert any HTML code before the menu label. The example below uses the GitHub icon.\n​ toml yaml json +++ menuPre = \"\u003ci class='fab fa-github'\u003e\u003c/i\u003e \" title = 'GitHub repo' +++ --- menuPre: '\u003ci class=''fab fa-github''\u003e\u003c/i\u003e ' title: GitHub repo --- { \"menuPre\": \"\\u003ci class='fab fa-github'\\u003e\\u003c/i\\u003e \", \"title\": \"GitHub repo\" } Ordering Sibling Menu/Page Entries Hugo provides a flexible way to handle order for your pages.\nThe simplest way is to set weight parameter to a number.\n​ toml yaml json +++ title = 'My page' weight = 5 +++ --- title: My page weight: 5 --- { \"title\": \"My page\", \"weight\": 5 } Using a Custom Title for Menu Entries By default, the Relearn theme will use a page’s title attribute for the menu item.\nBut a page’s title has to be descriptive on its own while the menu is a hierarchy. Hugo adds the linkTitle parameter for that purpose:\nFor example (for a page named content/install/linux.md):\n​ toml yaml json +++ linkTitle = 'Linux' title = 'Install on Linux' +++ --- linkTitle: Linux title: Install on Linux --- { \"linkTitle\": \"Linux\", \"title\": \"Install on Linux\" } Override Expand State Rules for Menu Entries You can change how the theme expands menu entries on the side of the content with the alwaysopen setting on a per page basis. If alwaysopen=false for any given entry, its children will not be shown in the menu as long as it is not necessary for the sake of navigation.\nThe theme generates the menu based on the following rules:\nall parent entries of the active page including their siblings are shown regardless of any settings immediate children entries of the active page are shown regardless of any settings if not overridden, all other first level entries behave like they would have been given alwaysopen=false if not overridden, all other entries of levels besides the first behave like they would have been given alwaysopen=true all visible entries show their immediate children entries if alwaysopen=true; this proceeds recursively all remaining entries are not shown You can see this feature in action on the example page for children shortcode and its children pages.\nDisable Section Pages You may want to structure your pages in a hierarchical way but don’t want to generate pages for those sections? The theme got you covered.\nTo stay with the initial example: Suppose you want level-one appear in the sidebar but don’t want to generate a page for it. So the entry in the sidebar should not be clickable but should show an expander.\nFor this, open content/level-one/_index.md and add the following frontmatter\n​ toml yaml json +++ collapsibleMenu = true [_build] render = 'never' +++ --- _build: render: never collapsibleMenu: true --- { \"_build\": { \"render\": \"never\" }, \"collapsibleMenu\": true }",
    "description": "Each Hugo page has to define a frontmatter.\nAll Frontmatter Options The values reflect example options. The defaults can be taken from the annotated example below.",
    "tags": [],
    "title": "Frontmatter",
    "uri": "/hugo-theme-relearn/cont/frontmatter/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "This document shows you what’s new in the latest release and flags it with one of the following badges. For a detailed list of changes, see the history page.\n0.121.0 The minimum required Hugo version.\nBreaking A change that requires action by you after upgrading to assure the site is still functional.\nChange A change in default behavior that may requires action by you if you want to revert it.\nNew Marks new behavior you might find interesting or comes configurable.\n6.4.0.beta (XXXX-XX-XX) Change If you now display a single code block in a notice box, its margin and border will be removed so only the colored notice border is visible.\nNew It is now possible to have user-defined styles for all shortcodes that accept the style parameter. See the notice shortcode for configuration.\nNew The resources shortcode has a new parameter expanded to make the resource list collapsible.\n6.3.0 (2024-09-03) Change The expand shortcode changed the naming of the open parameter to expanded. You don’t need to change anything yet but may get deprecation warnings.\nChange If the content for the notice shortcode is empty, now only the title bar will be displayed. Previously an empty content box was displayed.\nNew The notice shortcode has a new parameter expanded to make the content collapsible.\nNew If you are running Hugo 0.134.0 or later, the theme now supports Obsidian styled alerts.\nNew The theme has updated its Mermaid dependency to 11.1.0. This adds support for packet and architecture diagrams.\n6.2.0 (2024-08-26) Change The heading anchor links are extended in functionality.\nIf you now click on it, not only is the link copied to the clipboard (previous behavior) but also the heading scrolls to the top of the page.\nIf you dislike the new behavior, you can deactivate it by setting disableAnchorScrolling=true in your hugo.toml. See the docs for further options.\nNew If you are running Hugo 0.132.0 or later, the theme is now capable to print GitHub styled alerts.\nNew To support new severity levels for GitHub styled alerts, all shortcodes that support severity levels with their style parameter were expanded with the new severities caution and important and the color parameter was expanded with cyan and magenta. Please note, that coloring and icons of severities may defer from the display you see on GitHub.\nNew To support new severity levels for GitHub styled alerts, the new severities and their according colors are also available as CSS variables BOX-MAGENTA-color, BOX-MAGENTA-TEXT-color, BOX-CAUTION-color, BOX-CAUTION-TEXT-color, BOX-CYAN-color, BOX-CYAN-TEXT-color, BOX-IMPORTANT-color, BOX-IMPORTANT-TEXT-color. You don’t need to change anything in your custom color stylesheet as appropriate default colors will be used.\n6.1.0 (2024-08-02) Change The include shortcode is now able to resolve links to pages as well as resources or files in the file system (the old behavior).\nChange To make the asset buster mechanism more robust, some internally used stylesheets where restructured. This generally should not affect your page in any negative way.\nNew The openapi shortcode is now able to resolve links to resources as well as to files in the file system (the old behavior). You can configure to generate warnings or errors during build by setting openapi.errorlevel to either warning or error in your hugo.toml if a path can not be resolved.\nNew Shortcodes supporting an errorlevel configuration can now have overridden values in the frontmatter section of each individual page.\nNew The theme now comes with its own overridden version of the relref shortcode.\nWhile the usage of relref is obsolete and discouraged by Hugo for a while, existing installations may use it. In configurations using a baseURL with a subdirectory, and having relativeURLs=false (the default) Hugo’s standard relref implementation was failing.\nThe shortcode is deactivated by default and can be activated by setting\nhugo. toml yaml json [params] disableDefaultRelref = true params: disableDefaultRelref: true { \"params\": { \"disableDefaultRelref\": true } } in your hugo.toml. Only do this if your site fulfills all of the above assumptions.\n6.0.0 (2024-04-27) Breaking This release requires you to move your self-defined variant (theme-*.css) and chroma stylesheets (chroma-*.css) from static/css to assets/css.\nThis was necessary to avoid permission errors on build if running in certain Unix configurations.\nIn addition it is not allowed anymore to @import your chroma stylesheet from inside of your variant stylesheet.\nSay, your chroma stylesheet is named chroma-monokai.css, you have to add the following inside your variant stylesheet:\n--CODE-theme: monokai; Breaking The parameter description in your hugo.toml will now be ignored.\nWith the newly introduced unified handling of descriptions throughout the theme, the only place the old parameter would have been used was your home page.\nFor migration, move the description parameter of your hugo.toml into the frontmatter section of your home page.\nBreaking Search support for the json outputformat deprecated in 5.4.0 was removed.\nChange it to search for the homepage in your hugo.toml. See the docs for detailed configuration.\nBreaking The frontmatter option menuTitle deprecated in 5.24.0 was removed in favor for Hugo’s own linkTitle.\nAdditionally, if set, linkTitle will now be used instead of title to generate the breadcrumb.\nBreaking The swagger shortcode deprecated in 5.13.0 was removed in favor for the openapi shortcode with the same set of parameter.\nBreaking Support for Internet Explorer 11 was finally dropped.\nChange With the removal of support for Internet Explorer 11, Font Awesome was upgraded to version 6.5.2.\nYou may experience slight changes for some icons. In addition you have additional ~1700 icons to chose from.\nChange The children shortcode was fixed to adhere to its documentation, generating the description based on this rule: When no description or summary exists for the page, the first 70 words of the content is taken.\nPreviously, the summary erroneously was ignored which now can lead to different output if you set description=true as a parameter.\nNew The include shortcode is now able to resolve links to resources as well as to files in the file system (the old behavior). You can configure to generate warnings or errors during build by setting include.errorlevel to either warning or error in your hugo.toml if a path can not be resolved.\nNew Math is now usable without enclosing it in a shortcode or Markdown codefence by using Hugo’s passthrough configuration.\nNew Translation into Romanian.\n5.27.0 (2024-04-07) 0.121.0 This release requires a newer Hugo version.\nChange If the theme is configured to generate warnings or errors during build by setting image.errorlevel to either warning or error in your hugo.toml, it will now also generate output if a link fragment is not found in the target page.\nChange The dependency loader was made more versatile.\nThe configuration in your hugo.toml does not require the location parameter anymore. If you still use it, the theme will work as before but will generate a warning. So you don’t need to change anything, yet.\nWith the new mechanism, your dependency loader now receives an additional location parameter instead that you can query to inject your dependencies in the desired location.\nBy that you can now call the dependency mechanism in your own overriden partials by giving it a distinct location parameter. In addition your injected files can now be spread to multiple locations which wasn’t previously possible.\nNew Additional styling was added for the native HTML elements \u003cmark\u003e and \u003ckbd\u003e. To use them you must allow the usage of HTML in your hugo.toml. The Markdown documentation was enhanced for this.\nNew You now can scroll forward and backward through all headings of a page by using ALT 🡑 and ALT 🡓. This also works for the PRINT output format.\nNew The breadcrumbs used in the topbar, search results and the taxonomy term lists are now using the pages frontmatter linktitle instead of title if set.\n5.26.0 (2024-03-18) New The lazy loading of images is now configurable by using the new lazy image effect. The default value hasn’t changed in comparison to older versions, you don’t need to change anything.\nNew It is now possible to adjust the max width of the main area, eg. in case you want to use the full page width for your content.\nNew Images and Markdown codefences are now respecting Hugo’s Markdown attributes.\nNew The theme has updated its Mermaid dependency to 10.6.0. This adds support for block diagrams.\nNew This release fixes a long outstanding bug where the page wasn’t repositioning correctly when going forward or backward in your browser history.\n5.25.0 (2024-02-29) Change This release deprecates the attachments shortcode in favor of the new the resources shortcode.\nIf you are using Hugo below 0.123.0, you don’t need to change anything as the old shortcode still works (but may generate warnings).\nAnyways, users are strongly advised to migrate as the attachments shortcode will not receive support anymore. Migration instructions are listed on the attachments shortcode page.\nChange If you run Hugo with GitInfo configured, the default page footer now prints out name, email address and date of the last commit. If you want to turn this off you either have to run Hugo without GitInfo (which is the default) or overwrite the content-footer.html partial.\n5.24.0 (2024-02-28) 0.112.4 This release requires a newer Hugo version.\nChange The topbar button received a way to add text next to the icon. For this, the original title option was renamed to hint while the new title option is now displayed next to the icon.\nChange The frontmatter option menuTitle is now deprecated in favor for Hugo’s own linkTitle. You don’t need to change anything as the old menuTitle option is still supported.\nChange The light themes have a bit more contrast for content text and headings. Also the syntaxhighlighting was changed to the more colorful MonokaiLight. This brings the syntaxhighlighting in sync with the corresponding dark theme variants, which are using Monokai. If you dislike this, you can create your own color variant file as described here.\nNew If the theme can not resolve a link to a page or image, you can now generate warnings or errors during build by setting link.errorlevel or image.errorlevel to either warning or error in your hugo.toml respectively. By default this condition is silently ignored and the link is written as-is.\nPlease note that a page link will generate false negatives if uglyURLs=true and it references an ordinary page before 0.123.0.\nPlease note that an image link will generate false negatives if the file resides in your static directory.\nNew You now can configure additional options for every theme variant in your hugo.toml. This allows for optional advanced functionality. You don’t need to change anything as the old configuration options will still work (but may generate warnings now).\nThe advanced functionality allows you to set an explicit name for a theme variant and now allows for multiple auto mode variants that adjust to the light/dark preference of your OS settings.\nNew New partial for defining the heading. See documentation for further reading.\nNew Support for Hugo’s built-in figure shortcode.\nNew On taxonomy and term pages you can now use prev/next navigation as within the normal page structure.\nNew In additiion to the existing menu width customization, it is now also possible to set the width of the menu flyout for small screen sizes with the --MENU-WIDTH-S CSS property.\nNew Improvements for accessibility when tabbing through the page for images, links and tab handles.\nNew The editURL config parameter is now overwritable in your pages frontmatter. In addition it received more versatility by letting you control where to put the file path into the URL. This is achieved by replacing the variable ${FilePath} in your URL by the pages file path. You don’t need to change anything in your existing configuration as the old way without the replacement variable still works.\nNew The themes config and frontmatter options received a comprehensive documentation update. In addition the theme switched from config.toml to hugo.toml.\nNew Restored compatibility with Hugo versions 0.121.0 or higher for the highlight shortcode. This does not change the minimum required Hugo version.\nNew Restored compatibility with Hugo versions 0.123.0 or higher for theme specific output formats and handling of taxonomy and term titles. This does not change the minimum required Hugo version.\n5.23.0 (2023-11-03) Change With 0.120.0 the author settings move into the [params] array in your hugo.toml. Because this collides with the previous way, the theme expected author information, it now adheres to Hugo standards and prints out a warning during built if something is wrong.\nChange your previous setting from\nhugo. toml yaml json [params] author = 'Hugo' params: author: Hugo { \"params\": { \"author\": \"Hugo\" } } to\nhugo. toml yaml json [params] [params.author] name = 'Hugo' params: author: name: Hugo { \"params\": { \"author\": { \"name\": \"Hugo\" } } } Change Taxonomy term pages now add the breadcrumb for each listed page. If this gets too crowded for you, you can turn the breadcrumbs off in your hugo.toml by adding disableTermBreadcrumbs=true.\nNew Taxonomy and term pages are now allowed to contain content. This is added inbetween the title and the page list.\nNew It is now possible to print custom taxonomies anywhere in your page. See the docs.\nNew It is now possible to adjust the menu width for your whole site. See the docs.\nNew This release adds social media meta tags for the Open Graph protocol and Twitter Cards to your site. See the docs.\nNew This release comes with additional sort options for the menu and the children shortcode. Both will now accept the following values: weight, title, linktitle, modifieddate, expirydate, publishdate, date, length or default (adhering to Hugo’s default sort order).\nNew The theme now provides a mechanism to load further JavaScript dependencies defined by you only if it is needed. This comes in handy if you want to add own shortcodes that depend on additional JavaScript code to be loaded. See the docs.\nNew The theme has updated its Mermaid dependency to 10.6.0. This adds support for the xychart type.\nNew This release adds portable Markdown links.\nPreviously it was not possible to use pure Markdown links in a configuration independent way to link to pages inside of your project. It always required you to know how your uglyURLs setting is, wheather you link to a page or page bundle and in case of relative links if your current page is a page or page bundle. (eg. [generator](generator/index.html) vs. [generator](generator.html)). This is a hassle as you have to change these links manually once you change your uglyURLs setting or change the type of a page.\nYou could work around this by using the relref shortcode (eg [generator]({{% relref \"../generator\" %}})) which works but results in non-portable Markdown.\nNow it’s possible to use the same path of a call to relref in a plain Markdown link (eg [generator](../generator)). This is independent of any configuration settings or the page types involved in linking. Note, that this requires your links to be given without any extension, so [generator](generator/index.html) will work as before.\nThe following types of linking are supported:\nlink description [generator](en/basics/generator) absolute from your project root (multilang) [generator](/en/basics/generator) absolute from your project root (multilang) [generator](basics/generator) absolute from your current language root [generator](/basics/generator) absolute from your current language root [generator](./../generator) relative from the current page [generator](../generator) relative from the current page 5.22.0 (2023-10-02) Change This release fixes an issue where in unfortunate conditions DOM ids generated by Hugo may collide with DOM ids set by the theme. To avoid this, all theme DOM ids are now prefixed with R-.\nIf you haven’t modified anything, everything is fine. Otherwise you have to check your custom CSS rules and JavaScript code.\nChange You can now have structural sections in the hierarchical menu without generating a page for it.\nThis can come in handy, if content for such a section page doesn’t make much sense to you. See the documentation for how to do this.\nThis feature may require you to make changes to your existing installation if you are already using shortcuts to pages inside of your project with a headless branch parent.\nIn this case it is advised to remove the title from the headless branch parent’s frontmatter, as it will otherwise appear in your breadcrumbs.\nNew It is now possible to overwrite the setting for collapsibleMenu of your hugo.toml inside of a page’s frontmatter.\nNew If a Mermaid graph is zoomable a button to reset the view is now added to the upper right corner. The button is only shown once the mouse is moved over the graph.\nNew It is now possible to remove the root breadcrumb by setting disableRootBreadcrumb=true in your hugo.toml.\nNew The output of the dedicated search page now displays the result’s breadcrumb.\nNew Table rows now change their background color on every even row.\nNew Translation into Swahili. This language is not supported for search.\n5.21.0 (2023-09-18) Change We made changes to the menu footer to improve alignment with the menu items in most cases. Care was taken not to break your existing overwritten footer. Anyways, if you have your menu-footer.html partial overridden, you may want to review the styling (eg. margins/paddings) of your partial.\nNew This release comes with an awesome new feature, that allows you to customize your topbar buttons, change behavior, reorder them or define entirely new ones, unique to your installation. See the documentation for further details.\nNew The theme has updated its Swagger dependency to 5.7.2 for the openapi shortcode. This brings support for OpenAPI Specification 3.1.\n5.20.0 (2023-08-26) Change The theme has updated its Swagger dependency to 5.4.1 for the openapi shortcode.\nWith this comes a change in the light theme variants of Relearn Bright, Relearn Light and Zen Light by switching the syntaxhighlighting inside of openapi to a light scheme. This brings it more in sync with the code style used by the theme variants itself.\nAdditionally, the syntaxhighlighting inside of openapi for printing was switched to a light scheme for all theme variants.\nIf you dislike this change, you can revert this in your theme variants CSS by adding\n--OPENAPI-CODE-theme: obsidian; --PRINT-OPENAPI-CODE-theme: obsidian; Change For consistency reasons, we renamed the CSS variable --MENU-SECTION-HR-color to --MENU-SECTION-SEPARATOR-color. You don’t need to change anything in your custom color stylesheet as the old name will be used as a fallback.\nNew The theme variants Zen Light and Zen Dark now add more contrast between menu, topbar and content by adding thin borders.\nThose borders are now configurable by using the CSS variables --MAIN-TOPBAR-BORDER-color, --MENU-BORDER-color, --MENU-TOPBAR-BORDER-color, --MENU-TOPBAR-SEPARATOR-color, --MENU-HEADER-SEPARATOR-color and --MENU-SECTION-ACTIVE-CATEGORY-BORDER-color.\nFor existing variants nothing has changed visually.\nNew The default values for the image effects are now configurable for your whole site via hugo.toml or for each page through frontmatter.\nNew This release fixes a long outstanding bug where Mermaid graphs could not be displayed if they were initially hidden - like in collapsed expand or inactive tabs.\nNew Restored compatibility with Hugo versions lower than 0.111.0 for the highlight shortcode. This does not change the minimum required Hugo version.\n5.19.0 (2023-08-12) New The highlight shortcode now accepts the new parameter title. This displays the code like a single tab. This is also available using Markdown codefences and makes it much easier to write nicer code samples.\nNew The theme has added two new color variants zen-light and zen-dark. Check it out!\nNew The theme now dispatches the custom event themeVariantLoaded on the document when the variant is fully loaded either initially or by switching the variant manually with the variant selector.\nNew The theme has updated its Mermaid dependency to 10.3.1. This adds support for the sankey diagram type and now comes with full support for YAML inside Mermaid graphs (previously, the theme ignored explicit Mermaid theme settings in YAML).\nNew Translation into Hungarian.\n5.18.0 (2023-07-27) Change The theme adds additional warnings for deprecated or now unsupported features.\nChange There are visual improvements in displaying text links in your content as well as to some other clickable areas in the theme. If you’ve overwritten some theme styles in your own CSS, keep this in mind.\nNew Restored compatibility with Hugo 0.95.0 or higher. This does not change the minimum required Hugo version.\nNew The siteparam shortcode is now capable in displaying nested params as well as supporting text formatting.\n5.17.0 (2023-06-22) Change The default behavior for the copy-to-clipboard feature for code blocks has changed.\nThe copy-to-clipboard button for code blocks will now only be displayed if the reader hovers the code block.\nIf you dislike this new behavior you can turn it off and revert to the old behavior by adding [params] disableHoverBlockCopyToClipBoard=true to your hugo.toml.\nNew Restored compatibility with Hugo 0.114.0 or higher. This does not change the minimum required Hugo version.\nNew The new highlight shortcode replaces Hugo’s default implementation and is fully compatible. So you don’t need to change anything.\nIn addition it offers some extensions. Currently only the wrap extension option is provided to control whether a code block should be wrapped or scrolled if to long to fit.\n5.16.0 (2023-06-10) Change The theme now provides warnings for deprecated or now unsupported features. The warnings include hints how to fix them and an additional link to the documentation.\nDEPRECATION warnings mark features that still work but may be removed in the future.\nUNSUPPORTED warnings mark features that will not work anymore.\nChange The 404 error page was revamped. Hopefully you will not see this very often.\nNew The tabs shortcode and the tab shortcode received some love and now align with their style, color, title and icon parameter to the other shortcodes.\nThe visuals are now slightly different compared to previous versions. Most noteable, if you now display a single code block in a tab, its default styling will adapt to that of a code block but with a tab handle at the top.\nAdditionally the name parameter was renamed to title but you don’t need to change anything yet as the old name will be used as a fallback. Nevertheless you will get deprecation warnings while executing Hugo.\nNew The theme now optionally supports separate favicons for light \u0026 dark mode.\n5.15.0 (2023-05-29) Change Restored compatibility with Hugo 0.112.0 or higher. This does not change the minimum required Hugo version.\nThe attachments shortcode has compatibility issues with newer Hugo versions. You must switch to leaf bundles or are locked to Hugo \u003c 0.112.0 for now.\nIt is planned to refactor the attchments shortcode in the future. This will make it possible to use the shortcode in branch bundles again but not in simple pages anymore. This will most likely come with a breaking change.\nChange The tabs shortcode has changed behavior if you haven’t set the groupid parameter.\nFormerly all tab views without a groupid were treated as so they belong to the same group. Now, each tab view is treated as it was given a unique id.\nNew The already known tabshas a new friend the tab shortcode to make it easier to create a tab view in case you only need one single tab. Really handy if you want to flag your code examples with a language identifier.\nAdditionally for such a use case, the whitespace between a tab outline and the code is removed if only a single code block is contained.\nNew Besides the tag taxonomy the theme now also provides the category taxonomy out of the box and shows them in the content footer of each page.\n5.14.0 (2023-05-20) New The taxonomy pages received some love in this release, making them better leverage available screen space and adding translation support for the taxonomy names.\nHugo’s default taxonmies tags and categories are already contained in the theme’s i18n files. If you have self-defined taxonomies, you can add translations by adding them to your own i18n files. If you don’t provide translations, the singualar and plural forms are taken as configured in your hugo.toml.\nNew To give you more flexibility in customizing your article layout a new partial content-header.html is introduced.\nThis came out of the requirement to customize the position of article tags, which by default are displayed above the title. A second requirement was to also show additional taxonomies not supported by the theme natively. While Hugo supports tags and categories by default, the theme only displays tags.\nSo how to adjust the position of tags starting from the theme’s default where tags are only shown above the title?\nHide tags above title: Overwrite content-header.html with an empty file. Show tags between title and content: Overwrite heading-post.html and add {{ partial \"tags.html\" . }} to it. Show tags below content: Overwrite content-footer.html and add {{ partial \"tags.html\" . }} to it. New The new parameter breadcrumbSeparator is now available in your hugo.toml to change the - well - separator of the breadcrumb items. An appropriate default is in place if you do not configure anything.\n5.13.0 (2023-05-17) Change The swagger shortcode was deprecated in favor for the openapi shortcode. You don’t need to change anything yet as the old name will be used as a fallback. It is planned to remove the swagger shortcode in the next major release.\nAdditionally, the implemantion of this shortcode was switched from RapiDoc to SwaggerUI.\n5.12.0 (2023-05-04) Change In the effort to comply with WCAG standards, the implementation of the collapsible menu was changed (again). While Internet Explorer 11 has issues in displaying it, the functionality still works.\nNew Support for the great VSCode Front Matter extension which provides on-premise CMS capabilties to Hugo.\nThe theme provides Front Matter snippets for its shortcodes. Currently only English and German is supported. Put a reference into your frontmatter.json like this\n​ frontmatter.json { ... \"frontMatter.extends\": [ \"./vscode-frontmatter/snippets.en.json\" ] ... } New Support for languages that are written right to left (like Arabic) is now complete and extended to the menu, the top navigation bar and print. You can experience this in the pirate translation. This feature is not available in Internet Explorer 11.\nNew The scrollbars are now colored according to their variant color scheme to better fit into the visuals.\n5.11.0 (2023-02-07) Change The theme removed the popular jQuery library from its distribution.\nIn case you made changes to the theme that are depending on this library you can place a copy of jQuery into your static/js directory and load it from your own layouts/partials/custom-header.html like this:\n​ layouts/partials/custom-header.html \u003cscript src=\"{{\"js/jquery.min.js\"| relURL}}\" defer\u003e\u003c/script\u003e Change Mermaid diagrams can now be configured for pan and zoom on site-, page-level or individually for each graph.\nThe default setting of on, in effect since 1.1.0, changed back to off as there was interference with scrolling on mobile and big pages.\nChange The theme is now capable to visually adapt to your OS’s light/dark mode setting.\nThis is also the new default setting if you haven’t configured themeVariant in your hugo.toml.\nAdditionally you can configure the variants to be taken for light/dark mode with the new themeVariantAuto parameter.\nThis is not supported for Internet Explorer 11, which still displays in the relearn-light variant.\nChange The JavaScript code for handling image lightboxes (provided by Featherlight) was replaced by a CSS-only solution.\nThis also changed the lightbox effects parameter from featherlight=false to lightbox=false. Nevertheless you don’t need to change anything as the old name will be used as a fallback.\nChange In the effort to comply with WCAG standards, the implementation of the expand shortcode was changed. While Internet Explorer 11 has issues in displaying it, the functionality still works.\nNew Translation into Czech. This language is not supported for search.\nNew GitHub releases are also now tagged for the main version (eg. 1.2.x), major version (eg. 1.x) and the latest (just x) release making it easier for you to pin the theme to a certain version.\n5.10.0 (2023-01-25) New The attachments, badge, button and notice shortcodes have a new parameter color to set arbitrary CSS color values.\nAdditionally the --ACCENT-color brand color introduced in version 5.8.0 is now supported with these shortcodes.\n5.9.0 (2022-12-23) Breaking With this version it is now possible to not only have sections on the first menu level but also pages.\nIt was later discovered, that this causes pages only meant to be displayed in the More section of the menu and stored directly inside your content directory to now show up in the menu as well.\nTo get rid of this undesired behavior you have two choices:\nMake the page file a headless branch bundle (contained in its own subdirectory and called _index.md) and add the following frontmatter configuration to the file (see exampleSite’s content/showcase/_index.en.md). This causes its content to not be ontained in the sitemap.\n​ toml yaml json +++ title = 'Showcase' [_build] list = 'never' publishResources = true render = 'always' +++ --- _build: list: never publishResources: true render: always title: Showcase --- { \"_build\": { \"list\": \"never\", \"publishResources\": true, \"render\": \"always\" }, \"title\": \"Showcase\" } Store the page file for below a parent headless branch bundle and add the following frontmatter to he parent (see exampleSite’s content/more/_index.en.md). Don’t give this page a title as this will cause it to be shown in the breadcrumbs - a thing you most likely don’t want.\n​ toml yaml json +++ [_build] list = 'never' publishResources = false render = 'never' +++ --- _build: list: never publishResources: false render: never --- { \"_build\": { \"list\": \"never\", \"publishResources\": false, \"render\": \"never\" } } In this case, the file itself can be a branch bundle, leaf bundle or simple page (see exampleSite’s content/more/credits.en.md). This causes its content to be contained in the sitemap.\n​ toml yaml json +++ title = 'Credits' +++ --- title: Credits --- { \"title\": \"Credits\" } Change The required folder name for the attachments shortcode was changed for leaf bundles.\nPreviously, the attachments for leaf bundles in non-multilang setups were required to be in a files subdirectory. For page bundles and leaf bundles in multilang setups they were always required to be in a _index.\u003cLANGCODE\u003e.files or index.\u003cLANGCODE\u003e.files subdirectory accordingly.\nThis added unnecessary complexity. So attachments for leaf bundles in non-multilang setups can now also reside in a index.files directory. Although the old files directory is now deprecated, if both directories are present, only the old files directory will be used for compatibility.\nChange Absolute links prefixed with http:// or https:// are now opened in a separate browser tab.\nYou can revert back to the old behavior by defining externalLinkTarget=\"_self\" in the params section of your hugo.toml.\nNew The theme now supports Hugo’s module system.\n5.8.0 (2022-12-08) New The new badge shortcode is now available to add highly configurable markers to your content as you can see it on this page.\nNew The new icon shortcode simplyfies the usage of icons. This can even be combined with also new badge shortcode.\nNew The theme now supports some of GFM (GitHub Flavored Markdown) syntax and Hugo Markdown extensions, namely task lists, defintion lists and footnotes.\nNew A new color --ACCENT-color was introduced which is used for highlighting search results on the page. In case you simply don’t care, you don’t need to change anything in your variant stylesheet as the old yellow color is still used as default.\n5.7.0 (2022-11-29) Change The Korean language translation for this theme is now available with the language code ko. Formerly the country code kr was used instead.\nNew The button shortcode can now also be used as a real button inside of HTML forms - although this is a pretty rare use case. The documentation was updated accordingly.\nNew The search now supports the Korean language.\n5.6.0 (2022-11-18) New This release introduces an additional dedicated search page. On this page, displayed search results have more space making it easier scanning through large number of results.\nTo activate this feature, you need to configure it in your hugo.toml as a new outputformat searchpage for the home page. If you don’t configure it, no dedicated search page will be accessible and the theme works as before.\nYou can access the search page by either clicking on the magnifier glass or pressing enter inside of the search box.\nNew Keyboard handling for the TOC and search was improved.\nPressing CTRL+ALT+t now will not only toggle the TOC overlay but also places the focus to the first heading on opening. Subsequently this makes it possible to easily select headings by using the TAB key.\nThe search received its own brand new keyboard shortcut CTRL+ALT+f. This will focus the cursor inside of the search box so you can immediately start your search by typing.\nNew You are now able to turn off the generation of generator meta tags in your HTML head to hide the used versions of Hugo and this theme.\nTo configure this in your hugo.toml make sure to set Hugo’s disableHugoGeneratorInject=true and also [params] disableGeneratorVersion=true, otherwise Hugo will generate a meta tag into your home page automagically.\nNew Creation of your project gets a little bit faster with this release.\nThis addresses increased build time with the 5.x releases. The theme now heavily caches partial results leading to improved performance. To further increase performance, unnecessary parts of the page are now skipped for creation of the print output (eg. menus, navigation bar, etc.).\n5.5.0 (2022-11-06) Change The way images are processed has changed. Now images are lazy loaded by default which speeds up page load on slow networks and/or big pages and also the print preview.\nFor that the JavaScript code to handle the lightbox and image effects on the client side was removed in favour for static generation of those effects on the server.\nIf you have used HTML directly in your Markdown files, this now has the downside that it doesn’t respect the effect query parameter anymore. In this case you have to migrate all your HTML img URLs manually to the respective HTML attributes.\nOld New \u003cimg src=\"pic.png?width=20vw\u0026classes=shadow,border\"\u003e \u003cimg src=\"pic.png\" style=\"width:20vw;\" class=\"shadow border\"\u003e 5.4.0 (2022-11-01) Change With the proper settings in your hugo.toml your page is now servable from the local file system using file:// URLs.\nPlease note that the searchbox will only work for this if you reconfigure your outputformat for the homepage in your hugo.toml from json to search. The now deprecated json outputformat still works as before, so there is no need to reconfigure your installation if it is only served from http:// or https://.\nChange The button shortcode has a new parameter target to set the destination frame/window for the URL to open. If not given, it defaults to a new window/tab for external URLs or is not set at all for internal URLs. Previously even internal URLs where opened in a new window/tab.\nNew The math shortcode and mermaid shortcode now also support the align parameter if Markdown codefences are used.\nNew Support for languages that are written right to left (like Arabic). This is only implemented for the content area but not the navigation sidebar. This feature is not available in Internet Explorer 11.\nNew Translation into Finnish (Suomi).\n5.3.0 (2022-10-07) Change In the effort to comply with WCAG standards, the implementation of the collapsible menu was changed. The functionality of the new implementation does not work with old browsers (Internet Explorer 11).\nNew Image formatting has two new classes to align images to the left or right. Additionally, the already existing inline option is now documented.\nNew Printing for the swagger shortcode was optimized to expand sections that are usually closed in interactive mode. This requires print support to be configured.\n5.2.0 (2022-08-03) Change If you’ve set collapsibleMenu = true in your hugo.toml, the menu will be expanded if a search term is found in a collapsed submenu. The menu will return to its initial collapse state once the search term does not match any submenus. 5.1.0 (2022-07-15) 0.95.0 This release requires a newer Hugo version.\nChange Because the print preview URLs were non deterministic for normal pages in comparison to page bundles, this is now changed. Each print preview is now accessible by adding a index.print.html to the default URL.\nYou can revert this behavior by overwriting the print output format setting in your hugo.tomlto:\nhugo. toml yaml json [outputFormats] [outputFormats.print] baseName = 'index' isHTML = true mediaType = 'text/html' name = 'print' path = '_print' permalinkable = false outputFormats: print: baseName: index isHTML: true mediaType: text/html name: print path: _print permalinkable: false { \"outputFormats\": { \"print\": { \"baseName\": \"index\", \"isHTML\": true, \"mediaType\": \"text/html\", \"name\": \"print\", \"path\": \"_print\", \"permalinkable\": false } } } 5.0.0 (2022-07-05) Breaking The theme changed how JavaScript and CSS dependencies are loaded to provide a better performance. In case you’ve added own JavaScript code that depends on the themes jQuery implementation, you have to put it into a separate *.js file (if not already) and add the defer keyword to the script element. Eg.\n\u003cscript defer src=\"myscript.js\"\u003e\u003c/script\u003e Change The way archetypes are used to generate output has changed. The new systems allows you, to redefine existing archetypes or even generate your own ones.\nYour existing markdown files will still work like before and therefore you don’t need to change anything after the upgrade. Nevertheless, it is recommended to adapt your existing markdown files to the new way as follows:\nfor your home page, add the frontmatter parameter archetype = \"home\" and remove the leading heading\nfor all files containing the deprecated frontmatter parameter chapter = true, replace it with archetype = \"chapter\" and remove the leading headings\nChange The frontmatter options pre / post were renamed to menuPre / menuPost. The old options will still be used if the new options aren’t set. Therefore you don’t need to change anything after the upgrade.\nNew Adding new partials heading-pre.html / heading-post.html and according frontmatter options headingPre / headingPost to modify the way your page`s main heading gets styled.\nNew The new shortcode math is available to add beautiful math and chemical formulae. See the documentation for available features. This feature will not work with Internet Explorer 11.\n4.2.0 (2022-06-23) Breaking The second parameter for the include shortcode was switched in meaning and was renamed from showfirstheading to hidefirstheading. If you haven’t used this parameter in your shortcode, the default behavior hasn’t changed and you don’t need to change anything.\nIf you’ve used the second boolean parameter, you have to rename it and invert its value to achieve the same behavior.\nChange Previously, if the tabs shortcode could not find a tab item because, the tabs ended up empty. Now the first tab is selected instead.\nChange The landingPageURL was removed from hugo.toml. You can safely remove this as well from your configuration as it is not used anymore. The theme will detect the landing page URL automatically and will point to the project’s homepage. If you want to support a different link, overwrite the logo.html partial.\nNew All shortcodes can now be also called from your partials. Examples for this are added to the documentation of each shortcode.\n4.1.0 (2022-06-12) New While fixing issues with the search functionality for non Latin languages, you can now configure to have multiple languages on a single page. 4.0.0 (2022-06-05) Breaking The custom_css config parameter was removed from the configuration. If used in an existing installation, it can be achieved by overriding the custom-header.html template in a much more generic manner.\nBreaking Because anchor hover color was not configurable without introducing more complexity to the variant stylesheets, we decided to remove --MAIN-ANCHOR-color instead. You don’t need to change anything in your custom color stylesheet as the anchors now get their colors from --MAIN-LINK-color and --MAIN-ANCHOR-HOVER-color respectively.\nNew All shortcodes now support named parameter. The positional parameter are still supported but will not be enhanced with new features, so you don’t need to change anything in your installation.\nThis applies to expand, include, notice and siteparam.\nNew The button shortcode received some love and now has a parameter for the color style similar to other shortcodes.\nNew New colors --PRIMARY-color and --SECONDARY-color were added to provide easier modification of your custom style. Shortcodes with a color style can now have primary or secondary as additional values.\nThese two colors are the default for other, more specific color variables. You don’t need to change anything in your existing custom color stylesheets as those variables get reasonable default values.\nNew Translation into Polish. This language is not supported for search.\nNew The documentation for all shortcodes were revised.\n3.4.0 (2022-04-03) Breaking If you had previously overwritten the custom-footer.html partial to add visual elements below the content of your page, you have to move this content to the new partial content-footer.html. custom-footer.html was never meant to contain HTML other than additional styles and JavaScript.\nNew If you prefer expandable/collapsible menu items, you can now set collapsibleMenu=true in your hugo.toml. This will add arrows to all menu items that contain sub menus. The menu will expand/collapse without navigation if you click on an arrow.\nNew You can activate print support in your hugo.toml to add the capability to print whole chapters or even the complete site.\nNew Translation into Traditional Chinese.\n3.3.0 (2022-03-28) New Introduction of new CSS variables to set the font. The theme distinguishes between --MAIN-font for all content text and --CODE-font for inline or block code. There are additional overrides for all headings. See the theme variant generator of the exampleSite for all available variables.\nNew The new shortcode swagger is available to include a UI for REST OpenAPI specifications. See the documentation for available features. This feature will not work with Internet Explorer 11.\n3.2.0 (2022-03-19) 0.93.0 This release requires a newer Hugo version.\nChange In this release the Mermaid JavaScript library will only be loaded on demand if the page contains a Mermaid shortcode or is using Markdown codefences. This changes the behavior of disableMermaid config option as follows: If a Mermaid shortcode or Markdown codefence is found, the option will be ignored and Mermaid will be loaded regardlessly.\nThe option is still useful in case you are using scripting to set up your graph. In this case no shortcode or Markdown codefence is involved and the library is not loaded by default. In this case you can set disableMermaid=false in your frontmatter to force the library to be loaded. See the theme variant generator of the exampleSite for an example.\nNew Additional color variant variable --MERMAID-theme to set the variant’s Mermaid theme. This causes the Mermaid theme to switch with the color variant if it defers from the setting of the formerly selected color variant.\n3.1.0 (2022-03-15) New attachment and notice shortcodes have a new parameter to override the default icon. Allowed values are all Font Awesome 5 Free icons. 3.0.0 (2022-02-22) Breaking We made changes to the menu footer. If you have your menu-footer.html partial overridden, you may have to review the styling (eg. margins/paddings) in your partial. For a reference take a look into the menu-footer.html partial that is coming with the exampleSite.\nThis change was made to allow your own menu footer to be placed right after the so called prefooter that comes with the theme (containing the language switch and Clear history functionality).\nBreaking We have changed the default colors from the original Learn theme (the purple menu header) to the Relearn defaults (the light green menu header) as used in the official documentation.\nThis change will only affect your installation if you’ve not set the themeVariant parameter in your hugo.toml. If you still want to use the Learn color variant, you have to explicitly set themeVariant=\"learn\" in your hugo.toml.\nNote, that this will also affect your site if viewed with Internet Explorer 11 but in this case it can not be reconfigured as Internet Explorer does not support CSS variables.\nChange Due to a bug, that we couldn’t fix in a general manner for color variants, we decided to remove --MENU-SEARCH-BOX-ICONS-color and introduced --MENU-SEARCH-color instead. You don’t need to change anything in your custom color stylesheet as the old name will be used as a fallback.\nChange For consistency reasons, we renamed --MENU-SEARCH-BOX-color to --MENU-SEARCH-BORDER-color. You don’t need to change anything in your custom color stylesheet as the old name will be used as a fallback.\nNew With this release you are now capable to define your own dark mode variants.\nTo make this possible, we have introduced a lot more color variables you can use in your color variants. Your old variants will still work and don’t need to be changed as appropriate fallback values are used by the theme. Nevertheless, the new colors allow for much more customization.\nTo see what’s now possible, see the new variants relearn-dark and neon that are coming with this release.\nNew To make the creation of new variants easier for you, we’ve added a new interactive theme variant generator. This feature will not work with Internet Explorer 11.\nNew You can now configure multiple color variants in your hugo.toml. In this case, the first variant is the default chosen on first view and a variant selector will be shown in the menu footer. See the documentation for configuration.\nNote, that the new variant selector will not work with Internet Explorer 11 as it does not support CSS variables. Therefore, the variant selector will not be displayed with Internet Explorer 11.\n2.9.0 (2021-11-19) Breaking This release removes the themes implementation of ref/relref in favor for Hugo’s standard implementation. This is because of inconsistencies with the themes implementation. In advantage, your project becomes standard compliant and exchanging this theme in your project to some other theme will be effortless.\nIn a standard compliant form you must not link to the *.md file but to its logical name. You’ll see, referencing other pages becomes much easier. All three types result in the same reference:\nType Non-Standard Standard Branch bundle basics/configuration/_index.md basics/configuration Leaf bundle basics/configuration/index.md basics/configuration Page basics/configuration.md basics/configuration If you’ve linked from a page of one language to a page of another language, conversion is a bit more difficult but Hugo got you covered as well.\nAlso, the old themes implementation allowed refs to non-existing content. This will cause Hugo’s implementation to show the error below and abort the generation. If your project relies on this old behavior, you can reconfigure the error handling of Hugo’s implementation.\nIn the best case your usage of the old implementation is already standard compliant and you don’t need to change anything. You’ll notice this very easily once you’ve started hugo server after an upgrade and no errors are written to the console.\nYou may see errors on the console after the update in the form:\nERROR 2021/11/19 22:29:10 [en] REF_NOT_FOUND: Ref \"basics/configuration/_index.md\": \"hugo-theme-relearn\\exampleSite\\content\\_index.en.md:19:22\": page not found In this case, you must apply one of two options:\nStart up a text editor with regular expression support for search and replace. Search for (ref\\s+\"[^\"]*?)(?:/_index|/index)?(?:\\.md)?(#[^\"]*?)?\" and replace it by $1$2\" in all *.md files. This is the recommended choice.\nCopy the old implementation files theme/hugo-theme-relearn/layouts/shortcode/ref.html and theme/hugo-theme-relearn/layouts/shortcode/relref.html to your own projects layouts/shortcode/ref.html and layouts/shortcode/relref.html respectively. This is not recommended as your project will still rely on non-standard behavior afterwards.\n2.8.0 (2021-11-03) Change Although never officially documented, this release removes the font Novacento/Novecento. If you use it in an overwritten CSS please replace it with Work Sans. This change was necessary as Novacento did not provide all Latin special characters and lead to mixed styled character text eg. for Czech.\nNew The theme now supports favicons served from static/images/ named as favicon or logo in SVG, PNG or ICO format out of the box. An overridden partial layouts/partials/favicon.html may not be necessary anymore in most cases.\nNew You can hide the table of contents menu for the whole site by setting the disableToc option in your hugo.toml. For an example see the example configuration.\n2.7.0 (2021-10-24) New Optional second parameter for notice shortcode to set title in box header. 2.6.0 (2021-10-21) New Your site can now be served from a subfolder if you set baseURL in your hugo.toml. See the documentation for a detailed example. 2.5.0 (2021-10-08) Change New colors --CODE-BLOCK-color and --CODE-BLOCK-BG-color were added to provide a fallback for Hugo’s syntax highlighting in case no language was given or the language is unsupported. Ideally the colors are set to the same values as the ones from your chosen chroma style. 2.4.0 (2021-10-07) Change Creation of customized stylesheets was simplified down to only contain the CSS variables. Everything else can and should be deleted from your custom stylesheet to assure everything works fine. For the predefined stylesheet variants, this change is already included.\nNew Hidden pages are displayed by default in their according tags page. You can now turn off this behavior by setting disableTagHiddenPages=true in your hugo.toml.\nNew You can define the expansion state of your menus for the whole site by setting the alwaysopen option in your hugo.toml. Please see further documentation for possible values and default behavior.\nNew New frontmatter ordersectionsby option to change immediate children sorting in menu and children shortcode. Possible values are title or weight.\nNew Alternate content of a page is now advertised in the HTML meta tags. See Hugo documentation.\n2.3.0 (2021-09-13) 0.81.0 This release requires a newer Hugo version.\nNew Showcase multilanguage features by providing a documentation translation “fer us pirrrates”. There will be no other translations besides the original English one and the Pirates one due to maintenance constraints.\n2.2.0 (2021-09-09) New Hidden pages are displayed by default in the sitemap generated by Hugo and are therefore visible for search engine indexing. You can now turn off this behavior by setting disableSeoHiddenPages=true in your hugo.toml. 2.1.0 (2021-09-07) 0.69.0 This release requires a newer Hugo version.\nChange In case the site’s structure contains additional *.md files not part of the site (eg files that are meant to be included by site pages - see CHANGELOG.md in the exampleSite), they will now be ignored by the search.\nNew Hidden pages are indexed for the site search by default. You can now turn off this behavior by setting disableSearchHiddenPages=true in your hugo.toml.\nNew If a search term is found in an expand shortcode, the expand will be opened.\nNew The menu will scroll the active item into view on load.\n2.0.0 (2021-08-28) Change Syntax highlighting was switched to the built in Hugo mechanism. You may need to configure a new stylesheet or decide to roll you own as described on in the Hugo documentation\nChange In the predefined stylesheets there was a typo and --MENU-HOME-LINK-HOVERED-color must be changed to --MENU-HOME-LINK-HOVER-color. You don’t need to change anything in your custom color stylesheet as the old name will be used as a fallback.\nChange --MENU-HOME-LINK-color and --MENU-HOME-LINK-HOVER-color were missing in the documentation. You should add them to your custom stylesheets if you want to override the defaults.\nChange Arrow navigation and children shortcode were ignoring setting for ordersectionsby. This is now changed and may result in different sorting order of your sub pages.\nChange If hidden pages are accessed directly by typing their URL, they will be exposed in the menu.\nChange A page without a title will be treated as hidden=true.\nNew You can define the expansion state of your menus in the frontmatter. Please see further documentation for possible values and default behavior.\nNew New partials for defining pre/post content for menu items and the content. See documentation for further reading.\nNew Shortcode children with new parameter containerstyle.\nNew New shortcode include to include arbitrary file content into a page.\n1.2.0 (2021-07-26) New Shortcode expand with new parameter to open on page load. 1.1.0 (2021-07-02) Breaking Mermaid diagrams can now be panned and zoomed. This isn’t configurable yet.\nNew Mermaid config options can be set in hugo.toml.\n1.0.0 (2021-07-01) 0.65.0 The requirement for the Hugo version of this theme is the same as for the Learn theme version 2.5.0 on 2021-07-01.\nNew Initial fork of the Learn theme based on Learn 2.5.0 on 2021-07-01. This introduces no new features besides a global rename to Relearn and a new logo. For the reasons behind forking the Learn theme, see this comment in the Learn issues.",
    "description": "This document shows you what’s new in the latest release and flags it with one of the following badges. For a detailed list of changes, see the history page.",
    "tags": [],
    "title": "What's New",
    "uri": "/hugo-theme-relearn/basics/migration/index.html"
  },
  {
    "breadcrumb": "Content",
    "content": "Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more: archetypes. These are preconfigured skeleton pages with default frontmatter.\nThe Relearn theme defines some few archetypes of pages but you are free to define new ones to your liking. All can be used at any level of the documentation, the only difference being the layout of the content.\nPredefined Archetypes Home A Home page is the starting page of your project. It’s best to have only one page of this kind in your project.\nTo create a home page, run the following command\nhugo new --kind home _index.md This leads to a file with the following content\n​ _index.md +++ archetype = \"home\" title = \"{{ replace .Name \"-\" \" \" | title }}\" +++ Lorem Ipsum. Chapter A Chapter displays a page meant to be used as introduction for a set of child pages. Commonly, it contains a simple title and a catch line to define content that can be found below it.\nTo create a chapter page, run the following command\nhugo new --kind chapter \u003cname\u003e/_index.md This leads to a file with the following content\n​ _index.md +++ archetype = \"chapter\" title = \"{{ replace .Name \"-\" \" \" | title }}\" weight = 1 +++ Lorem Ipsum. The weight number will be used to generate the subtitle of the chapter page, set the number to a consecutive value starting at 1 for each new chapter level.\nDefault A Default page is any other content page. If you set an unknown archetype in your frontmatter, this archetype will be used to generate the page.\nTo create a default page, run either one of the following commands\nhugo new \u003cchapter\u003e/\u003cname\u003e/_index.md or\nhugo new \u003cchapter\u003e/\u003cname\u003e.md This leads to a file with the following content\n​ *.md +++ title = \"{{ replace .Name \"-\" \" \" | title }}\" +++ Lorem Ipsum. Self defined Archetypes If you are in need of further archetypes you can define your own or even redefine existing ones.\nTemplate Define a template file in your project at archetypes/\u003ckind\u003e.md and make sure it has at least the frontmatter parameter for that archetype like\n​ \u003ckind\u003e.md +++ archetype = \"\u003ckind\u003e\" +++ Afterwards you can generate new content files of that kind with the following command\nhugo new --kind \u003ckind\u003e \u003cname\u003e/_index.md Partials To define how your archetypes are rendered, define corresponding partial files in your projects directory layouts/partials/archetypes/\u003ckind\u003e.\nIf you use an unknown archetype in your frontmatter, the default archetype will be used to generate the page.\nRelated to each archetype, several hook partial files in the form of \u003chook\u003e.html can be given inside each archetype directory. If a partial for a specific hook is missing, no output is generated for this hook.\nThe following hooks are used:\nName Notes styleclass Defines a set of CSS classes to be added to the HTML’s \u003cmain\u003e element. You can use these classes to define own CSS rules in your custom-header.html article Defines the HTML how to render your content Take a look at the existing archetypes of this theme to get an idea how to utilize it.\nOutput formats Each hook file can be overridden of a specific output format. Eg. if you define a new output format PLAINTEXT in your hugo.toml, you can add a file layouts/partials/archetypes/default.plaintext.html to change the way how normal content is written for that output format.",
    "description": "Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more: archetypes. These are preconfigured skeleton pages with default frontmatter.",
    "tags": [],
    "title": "Archetypes",
    "uri": "/hugo-theme-relearn/cont/archetypes/index.html"
  },
  {
    "breadcrumb": "",
    "content": "Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.\nBut this happens to be a bad idea. Everyone uses Markdown because it’s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible.\nTo avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet inside a page.\nThe Relearn theme provides multiple shortcodes on top of existing ones.\nBadgeMarker badges to display in your text\nButtonClickable buttons\nChildrenList the child pages of a page\nExpandExpandable/collapsible sections of text\nHighlightRender code with a syntax highlighter\nIconNice icons for your page\nIncludeDisplays content from other files\nMathBeautiful math and chemical formulae\nMermaidGenerate diagrams and flowcharts from text\nNoticeDisclaimers to help you structure your page\nOpenAPIUI for your OpenAPI / Swagger specifications\nResourcesList resources contained in a page bundle\nSiteParamGet value of site params\nTabShow content in a single tab\nTabsShow content in tabbed views",
    "description": "Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.",
    "tags": [],
    "title": "Shortcodes",
    "uri": "/hugo-theme-relearn/shortcodes/index.html"
  },
  {
    "breadcrumb": "",
    "content": "This chapter contains information only needed for development and maintaining the theme.\nContributingWhat to know if you want to contribute\nMaintainingWhat to know as a maintainer\nScreenshotsRecipe to create various documentation screenshots",
    "description": "This chapter contains information only needed for development and maintaining the theme.",
    "tags": [],
    "title": "Development",
    "uri": "/hugo-theme-relearn/dev/index.html"
  },
  {
    "breadcrumb": "Content",
    "content": "Let’s face it: Writing content for the web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.\nMarkdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.\nSome of the key benefits are:\nMarkdown is simple to learn, with minimal extra characters so it’s also quicker to write content. Less chance of errors when writing in Markdown. Produces valid HTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use! John Gruber, the author of Markdown, puts it like this:\nThe overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. John Gruber\nTip Bookmark this page for easy future reference!\nStandard and Extensions If not otherwise noted, the shown examples adhere to the Commonmark standard. In addition the theme supports the following extensions that can be activated in your hugo.toml or are built into the theme:\nGFM Extension on top of standard Markdown adhering to GitHub Flavored Markdown.\nPHP Extension on top of standard Markdown adhering to PHP Markdown.\nPants Extension by John Gruber adhering to SmartyPants.\nHugo Hugo Extra Extension supported by Hugo.\nObsidian Extension implemented by Obsidian.\nHTML If the usage of HTML is allowed, the theme supports styling for further HTML elements.\nRelearn Extension specific to this theme.\nParagraphs In Markdown your content usually spans the whole available document width. This is called a block. Blocks are always separated by whitespace to their adjacent blocks in the resulting document.\nAny text not starting with a special sign is written as normal, plain text paragraph block and must be separated to its adjacent blocks by empty lines.\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. Result Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus.\nEt legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\nHeadings A good idea is to structure your content using headings and subheadings. HTML-headings from h1 through h6 are constructed with a # for each level.\nIn Hugo you usually don’t use h1 as this is generated by your theme and you should only have one such element in a document.\n# h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading Result h1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading Horizontal Rules To further structure your content you can add horizontal rules. They create a “thematic break” between paragraph blocks. In Markdown, you can create it with three consecutive dashes ---.\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. --- Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. Result Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus.\nEt legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\nBlockquotes Quotations For quoting blocks of content from another source within your document add \u003e before any text you want to quote.\nBlockquotes can also be nested.\n\u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue, aliquam non hendrerit ac, commodo vel nisi. \u003e \u003e \u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. \u003e \u003e Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus. Result Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue, aliquam non hendrerit ac, commodo vel nisi.\nSed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\nMauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus.\nGitHub Styled Alerts GFM Since Hugo 0.132.0 GitHub styled alerts are also supported. Please note, that coloring and icons of severities may defer between GitHub and this theme.\nIf you are in need of more advanced options to style your alerts, use the notice shortcode.\n\u003e [!CAUTION] \u003e Advises about risks or negative outcomes of certain actions. \u003e [!IMPORTANT] \u003e Key information users need to know to achieve their goal. \u003e [!INFO] \u003e Information that users \u003cins\u003e_might_\u003c/ins\u003e find interesting. \u003e [!NOTE] \u003e Useful information that users should know, even when skimming content. \u003e [!TIP] \u003e Helpful advice for doing things better or more easily. \u003e [!WARNING] \u003e Urgent info that needs immediate user attention to avoid problems. Result Caution Advises about risks or negative outcomes of certain actions.\nImportant Key information users need to know to achieve their goal.\nInfo Information that users might find interesting.\nNote Useful information that users should know, even when skimming content.\nTip Helpful advice for doing things better or more easily.\nWarning Urgent info that needs immediate user attention to avoid problems.\nObsidian Styled Alerts Obsidian Since Hugo 0.134.0 Obsidian styled alerts are also supported. Which enables configurable title text and expand/collapse.\n\u003e [!tip] Callouts can have custom titles \u003e Like this one. \u003e [!tip] Title-only callout \u003e [!note]- Are callouts foldable? \u003e Yes! In a foldable callout, the contents are hidden when the callout is collapsed \u003e [!note]+ Are callouts foldable? \u003e Yes! In a foldable callout, the contents are hidden when the callout is collapsed Result Callouts can have custom titles Like this one.\nTitle-only callout Are callouts foldable? Yes! In a foldable callout, the contents are hidden when the callout is collapsed\nAre callouts foldable? Yes! In a foldable callout, the contents are hidden when the callout is collapsed\nText Markers Bold You can show importance of a snippet of text with a heavier font-weight by enclosing it with two asterisks **.\nI am rendered with **bold text** Result I am rendered with bold text\nItalics You can emphasize a snippet of text with italics by enclosing it with underscores _.\nI am rendered with _italicized text_ Result I am rendered with italicized text\nMarked Text You can mark text in the predefined accent color of your stylesheet.\nHugo Since Hugo 0.126.0, you can activate this through the Hugo Extra Extension in your hugo.toml\n==Parts== of this text ==are marked!== HTML You can also use it by configuring Hugo for usage of HTML.\n\u003cmark\u003eParts\u003c/mark\u003e of this text \u003cmark\u003eare marked!\u003c/mark\u003e Result Parts of this text are marked!\nInserted Text You can mark text additions to existing text.\nHugo Since Hugo 0.126.0, you can activate this through the Hugo Extra Extension in your hugo.toml\nThe ++hot, new++ stuff HTML You can also use it by configuring Hugo for usage of HTML.\nThe \u003cins\u003ehot, new\u003c/ins\u003e stuff Result The hot, new stuff\nDeleted Text GFM You can do strikethroughs by enclosing text with two tildes ~~. See Hugo’s documentation remarks if you want to use this together with the subscript syntax.\n~~Strike through~~ this text Result Strike through this text\nSpecial Typesetting Text Substitution Pants You can combine multiple punctuation characters to single typographic entities. This will only be applied to text outside of code blocks or inline code.\nDouble quotes `\"` and single quotes `'` of enclosed text are replaced by **\"double curly quotes\"** and **'single curly quotes'**. Double dashes `--` and triple dashes `---` are replaced by en-dash **--** and em-dash **---** entities. Double arrows pointing left `\u003c\u003c` or right `\u003e\u003e` are replaced by arrow **\u003c\u003c** and **\u003e\u003e** entities. Three consecutive dots `...` are replaced by an ellipsis **...** entity. Result Double quotes \" and single quotes ' of enclosed text are replaced by “double curly quotes” and ‘single curly quotes’.\nDouble dashes -- and triple dashes --- are replaced by en-dash – and em-dash — entities.\nDouble arrows pointing left \u003c\u003c or right \u003e\u003e are replaced by arrow « and » entities.\nThree consecutive dots ... are replaced by an ellipsis … entity.\nSubscript and Superscript You can also use subscript and superscript text. For more complex stuff, you can use the math shortcode.\nHugo Since Hugo 0.126.0, you can activate this through the Hugo Extra Extension in your hugo.toml\nHow many liters H~2~O fit into 1dm^3^? HTML You can also use it by configuring Hugo for usage of HTML.\nHow many liters H\u003csub\u003e2\u003c/sub\u003eO fit into 1dm\u003csup\u003e3\u003c/sup\u003e? Result How many liters H2O fit into 1dm3?\nKeyboard Shortcuts HTML You can use the \u003ckbd\u003e element to style keyboard shortcuts.\nPress \u003ckbd\u003eSTRG\u003c/kbd\u003e \u003ckbd\u003eALT\u003c/kbd\u003e \u003ckbd\u003eDEL\u003c/kbd\u003e to end your shift early. Result Press STRG ALT DEL to end your shift early.\nLists Unordered You can write a list of items in which the order of the items does not explicitly matter.\nIt is possible to nest lists by indenting an item for the next sublevel.\nYou may use any of -, * or + to denote bullets for each list item but should not switch between those symbols inside one whole list.\n- Lorem ipsum dolor sit amet - Consectetur adipiscing elit - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at - Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Faucibus porta lacus fringilla vel Result Lorem ipsum dolor sit amet Consectetur adipiscing elit Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Faucibus porta lacus fringilla vel Ordered You can create a list of items in which the order of items does explicitly matter.\nIt is possible to nest lists by indenting an item for the next sublevel.\nMarkdown will automatically number each of your items consecutively. This means, the order number you are providing is irrelevant.\n1. Lorem ipsum dolor sit amet 3. Consectetur adipiscing elit 1. Integer molestie lorem at massa 7. Facilisis in pretium nisl aliquet 99. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 17. Eget porttitor lorem Result Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Tasks GFM You can add task lists resulting in checked or unchecked non-clickable items\n- [x] Basic Test - [ ] More Tests - [x] View - [x] Hear - [ ] Smell Result Basic Test More Tests View Hear Smell Definitions PHP Definition lists are made of terms and definitions of these terms, much like in a dictionary.\nA definition list in Markdown Extra is made of a single-line term followed by a colon and the definition for that term. You can also associate more than one term to a definition.\nIf you add empty lines around the definition terms, additional vertical space will be generated. Also multiple paragraphs are possible\nApple : Pomaceous fruit of plants of the genus Malus in the family Rosaceae. : An American computer company. Orange : The fruit of an evergreen tree of the genus Citrus. You can make juice out of it. : A telecommunication company. You can't make juice out of it. Result Apple Pomaceous fruit of plants of the genus Malus in the family Rosaceae. An American computer company. Orange The fruit of an evergreen tree of the genus Citrus. You can make juice out of it.\nA telecommunication company. You can’t make juice out of it.\nCode Inline Code Inline snippets of code can be wrapped with backticks `.\nIn this example, `\u003cdiv\u003e\u003c/div\u003e` is marked as code. Result In this example, \u003cdiv\u003e\u003c/div\u003e is marked as code.\nIndented Code Block A simple code block can be generated by indenting several lines of code by at least two spaces.\nBe impressed by my advanced code: // Some comments line 1 of code line 2 of code line 3 of code Result Be impressed by my advanced code:\n// Some comments line 1 of code line 2 of code line 3 of code Fenced Code Block If you want to gain more control of your code block you can enclose your code by at least three backticks ``` a so called fence.\nGFM You can also add a language specifier directly after the opening fence, ```js, and syntax highlighting will automatically be applied according to the selected language in the rendered HTML.\nSee Code Highlighting for additional documentation.\n```js { name: \"Claus\", surname: \"Santa\", profession: \"courier\", age: 666, address: { city: \"North Pole\", postalCode: 1, country: \"Arctic\" }, friends: [ \"Dasher\", \"Dancer\", \"Prancer\", \"Vixen\", \"Comet\", \"Cupid\", \"Donder\", \"Blitzen\", \"Rudolph\" ] }; ``` Result { name: \"Claus\", surname: \"Santa\", profession: \"courier\", age: 666, address: { city: \"North Pole\", postalCode: 1, country: \"Arctic\" }, friends: [ \"Dasher\", \"Dancer\", \"Prancer\", \"Vixen\", \"Comet\", \"Cupid\", \"Donder\", \"Blitzen\", \"Rudolph\" ] }; Tables GFM You can create tables by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned.\n| Option | Description | |--------|-------------| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Result Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. Aligned Columns Adding a colon on the left and/or right side of the dashes below any heading will align the text for that column accordingly.\n| Option | Number | Description | |-------:|:------:|:------------| | data | 1 | path to data files to supply the data that will be passed into templates. | | engine | 2 | engine to be used for processing templates. Handlebars is the default. | | ext | 3 | extension to be used for dest files. | Result Option Number Description data 1 path to data files to supply the data that will be passed into templates. engine 2 engine to be used for processing templates. Handlebars is the default. ext 3 extension to be used for dest files. Links Autolink GFM Absolute URLs will automatically be converted into a link.\nThis is a link to https://example.com. Result This is a link to https://example.com.\nBasic Link You can explicitly define links in case you want to use non-absolute URLs or want to give different text.\n[Assemble](http://assemble.io) Result Assemble\nLink with Tooltip For even further information, you can add an additional text, displayed in a tooltip on hovering over the link.\n[Upstage](https://github.com/upstage/ \"Visit Upstage!\") Result Upstage\nLink References Links can be simplyfied for recurring reuse by using a reference ID to later define the URL location. This simplyfies writing if you want to use a link more than once in a document.\n[Example][somelinkID] [somelinkID]: https://example.com \"Go to example domain\" Result Example\nFootnotes PHP Footnotes work mostly like reference-style links. A footnote is made of two things, a marker in the text that will become a superscript number and a footnote definition that will be placed in a list of footnotes.\nUsually the list of footnotes will be shown at the end of your document. If we use a footnote in a notice box it will instead be listed at the end of its box.\nFootnotes can contain block elements, which means that you can put multiple paragraphs, lists, blockquotes and so on in a footnote. It works the same as for list items, just indent the following paragraphs by four spaces in the footnote definition.\nThat's some text with a footnote[^1] [^1]: And that's the footnote. That's some more text with a footnote.[^someid] [^someid]: Anything of interest goes here. Blue light glows blue. Result That’s some text with a footnote1\nThat’s some more text with a footnote.2\nAnd that’s the footnote. ↩︎\nAnything of interest goes here.\nBlue light glows blue. ↩︎\nImages Basic Images Images have a similar syntax to links but include a preceding exclamation mark.\n![Spock](https://octodex.github.com/images/spocktocat.png) Result Image with Tooltip Like links, images can also be given a tooltip.\n![Picard](https://octodex.github.com/images/jean-luc-picat.jpg \"Jean Luc Picard\") Result Image References Images can also be linked by reference ID to later define the URL location. This simplyfies writing if you want to use an image more than once in a document.\n![La Forge][laforge] [laforge]: https://octodex.github.com/images/trekkie.jpg \"Geordi La Forge\" Result Image Effects Relearn This theme allows additional non-standard formatting by setting query parameter at the end of the image URL. The default behavior is configurable through your hugo.toml or frontmatter parameter.\nResizing Add query parameter width and/or height to the link image to resize the image. Values are CSS values (default is auto).\n![Minion](https://octodex.github.com/images/minion.png?width=20vw) Result ![Minion](https://octodex.github.com/images/minion.png?height=50px) Result ![Minion](https://octodex.github.com/images/minion.png?height=50px\u0026width=40vw) Result CSS Classes Add a query parameter classes to the link image to add CSS classes. Add some of the predefined values or even define your own in your CSS.\nShadow ![Spidertocat](https://octodex.github.com/images/spidertocat.png?classes=shadow) Result Border ![DrOctocat](https://octodex.github.com/images/droctocat.png?classes=border) Result Left ![Supertocat](https://octodex.github.com/images/okal-eltocat.jpg?classes=left) Result Right ![Riddlocat](https://octodex.github.com/images/riddlocat.jpg?classes=right) Result Inline ![Spidertocat](https://octodex.github.com/images/spidertocat.png?classes=inline) ![DrOctocat](https://octodex.github.com/images/droctocat.png?classes=inline) ![Supertocat](https://octodex.github.com/images/okal-eltocat.jpg?classes=inline) ![Riddlocat](https://octodex.github.com/images/riddlocat.jpg?classes=inline) Result Combination ![X-tocat](https://octodex.github.com/images/xtocat.jpg?classes=shadow,border,left) Result Lightbox Add the query parameter lightbox=false to the image link to disable the lightbox.\n![Homercat](https://octodex.github.com/images/homercat.png?lightbox=false) Result Note If you want to wrap an image in a link and lightbox=true is your default setting, you have to explicitly disable the lightbox to avoid it to hijacking your link like:\n[![Homercat](https://octodex.github.com/images/homercat.png?lightbox=false)](https://octodex.github.com/#homercat)",
    "description": "Let’s face it: Writing content for the web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.",
    "tags": [
      "Content"
    ],
    "title": "Markdown Syntax",
    "uri": "/hugo-theme-relearn/cont/markdown/index.html"
  },
  {
    "breadcrumb": "Content",
    "content": "The theme supports non-standard image effects.\nName Description border Draws a light thin border around the image lazy Lets the image be lazy loaded lightbox The image will be clickable to show it enlarged shadow Draws a shadow around the image to make it appear hovered/glowing As described, you can add this to the URL query parameter, but this may be cumbersome to be done consistently for the whole page.\nInstead, you can configure the defaults in your hugo.toml as well as overriding these default in the pages frontmatter.\nExplicitly set URL query parameter will override the defaults in effect for a page.\nWithout any settings in your hugo.toml this defaults to\nhugo. toml yaml json [params] [params.imageEffects] border = false lazy = true lightbox = true shadow = false params: imageEffects: border: false lazy: true lightbox: true shadow: false { \"params\": { \"imageEffects\": { \"border\": false, \"lazy\": true, \"lightbox\": true, \"shadow\": false } } } This can be overridden in a pages frontmatter by eg.\n​ toml yaml json +++ [imageEffects] border = true +++ --- imageEffects: border: true --- { \"imageEffects\": { \"border\": true } } Or by explicitly override settings by URL query parameter\n​ URL ![Minion](https://octodex.github.com/images/minion.png?lightbox=false\u0026bg-white=true) The settings applied to the above image would be\n​ toml yaml json bg-white = true border = true lazy = true lightbox = false shadow = false bg-white: true border: true lazy: true lightbox: false shadow: false { \"bg-white\": true, \"border\": true, \"lazy\": true, \"lightbox\": false, \"shadow\": false } This ends up in the following HTML where the parameter are converted to CSS classes.\n​ HTML \u003cimg src=\"https://octodex.github.com/images/minion.png?lightbox=false\u0026bg-white=true\" loading=\"lazy\" alt=\"Minion\" class=\"bg-white border lazy nolightbox noshadow\"\u003e Extending As you can see in the above example, the bg-white parameter is not initially supported in the themes default settings. Nevertheless you are free to define arbitrary parameter by just adding them to the URL query parameter or set them in your hugo.toml or pages frontmatter.\nNote If no extended parameter like bg-white in the example is set on the URL, a class=\"nobg-white\" in the HTML will only be generated if a default value was set in the hugo.toml or pages frontmatter.",
    "description": "The theme supports non-standard image effects.\nName Description border Draws a light thin border around the image lazy Lets the image be lazy loaded lightbox The image will be clickable to show it enlarged shadow Draws a shadow around the image to make it appear hovered/glowing As described, you can add this to the URL query parameter, but this may be cumbersome to be done consistently for the whole page.",
    "tags": [],
    "title": "Image Effects",
    "uri": "/hugo-theme-relearn/cont/imageeffects/index.html"
  },
  {
    "breadcrumb": "Content",
    "content": "You can define additional menu entries or shortcuts in the navigation menu without any link to content.\nBasic configuration Edit the website configuration hugo.toml and add a [[menu.shortcuts]] entry for each link your want to add.\nExample from the current website:\nhugo. toml yaml json [menu] [[menu.shortcuts]] identifier = 'ds' name = \"\u003ci class='fa-fw fab fa-github'\u003e\u003c/i\u003e GitHub repo\" url = 'https://github.com/McShelby/hugo-theme-relearn' weight = 10 [[menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-camera'\u003e\u003c/i\u003e Showcases\" url = 'showcase/' weight = 11 [[menu.shortcuts]] identifier = 'hugodoc' name = \"\u003ci class='fa-fw fas fa-bookmark'\u003e\u003c/i\u003e Hugo Documentation\" url = 'https://gohugo.io/' weight = 20 [[menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-bullhorn'\u003e\u003c/i\u003e Credits\" url = 'more/credits/' weight = 30 [[menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-tags'\u003e\u003c/i\u003e Tags\" url = 'tags/' weight = 40 menu: shortcuts: - identifier: ds name: \u003ci class='fa-fw fab fa-github'\u003e\u003c/i\u003e GitHub repo url: https://github.com/McShelby/hugo-theme-relearn weight: 10 - name: \u003ci class='fa-fw fas fa-camera'\u003e\u003c/i\u003e Showcases url: showcase/ weight: 11 - identifier: hugodoc name: \u003ci class='fa-fw fas fa-bookmark'\u003e\u003c/i\u003e Hugo Documentation url: https://gohugo.io/ weight: 20 - name: \u003ci class='fa-fw fas fa-bullhorn'\u003e\u003c/i\u003e Credits url: more/credits/ weight: 30 - name: \u003ci class='fa-fw fas fa-tags'\u003e\u003c/i\u003e Tags url: tags/ weight: 40 { \"menu\": { \"shortcuts\": [ { \"identifier\": \"ds\", \"name\": \"\\u003ci class='fa-fw fab fa-github'\\u003e\\u003c/i\\u003e GitHub repo\", \"url\": \"https://github.com/McShelby/hugo-theme-relearn\", \"weight\": 10 }, { \"name\": \"\\u003ci class='fa-fw fas fa-camera'\\u003e\\u003c/i\\u003e Showcases\", \"url\": \"showcase/\", \"weight\": 11 }, { \"identifier\": \"hugodoc\", \"name\": \"\\u003ci class='fa-fw fas fa-bookmark'\\u003e\\u003c/i\\u003e Hugo Documentation\", \"url\": \"https://gohugo.io/\", \"weight\": 20 }, { \"name\": \"\\u003ci class='fa-fw fas fa-bullhorn'\\u003e\\u003c/i\\u003e Credits\", \"url\": \"more/credits/\", \"weight\": 30 }, { \"name\": \"\\u003ci class='fa-fw fas fa-tags'\\u003e\\u003c/i\\u003e Tags\", \"url\": \"tags/\", \"weight\": 40 } ] } } By default, shortcuts are preceded by a title. This title can be disabled by setting disableShortcutsTitle=true. However, if you want to keep the title but change its value, it can be overridden by changing your local i18n translation string configuration.\nFor example, in your local i18n/en.toml file, add the following content\n​ en.toml [Shortcuts-Title] other = \"\u003cYour value\u003e\" Read more about hugo menu and hugo i18n translation strings\nConfiguration for Multilingual mode When using a multilingual website, you can set different menus for each language. In the hugo.toml file, prefix your menu configuration by Languages.\u003clanguage-id\u003e.\nExample from the current website:\nhugo. toml yaml json [languages] [languages.en] languageName = 'English' title = 'Hugo Relearn Theme' weight = 1 [languages.en.menu] [[languages.en.menu.shortcuts]] identifier = 'ds' name = \"\u003ci class='fa-fw fab fa-github'\u003e\u003c/i\u003e GitHub repo\" url = 'https://github.com/McShelby/hugo-theme-relearn' weight = 10 [[languages.en.menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-camera'\u003e\u003c/i\u003e Showcases\" pageRef = 'showcase/' weight = 11 [[languages.en.menu.shortcuts]] identifier = 'hugodoc' name = \"\u003ci class='fa-fw fas fa-bookmark'\u003e\u003c/i\u003e Hugo Documentation\" url = 'https://gohugo.io/' weight = 20 [[languages.en.menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-bullhorn'\u003e\u003c/i\u003e Credits\" pageRef = 'more/credits/' weight = 30 [[languages.en.menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-tags'\u003e\u003c/i\u003e Tags\" pageRef = 'tags/' weight = 40 [languages.en.params] landingPageName = \"\u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Home\" [languages.pir] languageName = 'Arrr! Pirrrates' title = \"Cap'n Hugo Relearrrn Theme\" weight = 1 [languages.pir.menu] [[languages.pir.menu.shortcuts]] identifier = 'ds' name = \"\u003ci class='fa-fw fab fa-github'\u003e\u003c/i\u003e GitHub repo\" url = 'https://github.com/McShelby/hugo-theme-relearn' weight = 10 [[languages.pir.menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-camera'\u003e\u003c/i\u003e Showcases\" pageRef = 'showcase/' weight = 11 [[languages.pir.menu.shortcuts]] identifier = 'hugodoc' name = \"\u003ci class='fa-fw fas fa-bookmark'\u003e\u003c/i\u003e Cap'n Hugo Documentat'n\" url = 'https://gohugo.io/' weight = 20 [[languages.pir.menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-bullhorn'\u003e\u003c/i\u003e Crrredits\" pageRef = 'more/credits/' weight = 30 [[languages.pir.menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-tags'\u003e\u003c/i\u003e Arrr! Tags\" pageRef = 'tags/' weight = 40 [languages.pir.params] landingPageName = \"\u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Arrr! Home\" languages: en: languageName: English menu: shortcuts: - identifier: ds name: \u003ci class='fa-fw fab fa-github'\u003e\u003c/i\u003e GitHub repo url: https://github.com/McShelby/hugo-theme-relearn weight: 10 - name: \u003ci class='fa-fw fas fa-camera'\u003e\u003c/i\u003e Showcases pageRef: showcase/ weight: 11 - identifier: hugodoc name: \u003ci class='fa-fw fas fa-bookmark'\u003e\u003c/i\u003e Hugo Documentation url: https://gohugo.io/ weight: 20 - name: \u003ci class='fa-fw fas fa-bullhorn'\u003e\u003c/i\u003e Credits pageRef: more/credits/ weight: 30 - name: \u003ci class='fa-fw fas fa-tags'\u003e\u003c/i\u003e Tags pageRef: tags/ weight: 40 params: landingPageName: \u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Home title: Hugo Relearn Theme weight: 1 pir: languageName: Arrr! Pirrrates menu: shortcuts: - identifier: ds name: \u003ci class='fa-fw fab fa-github'\u003e\u003c/i\u003e GitHub repo url: https://github.com/McShelby/hugo-theme-relearn weight: 10 - name: \u003ci class='fa-fw fas fa-camera'\u003e\u003c/i\u003e Showcases pageRef: showcase/ weight: 11 - identifier: hugodoc name: \u003ci class='fa-fw fas fa-bookmark'\u003e\u003c/i\u003e Cap'n Hugo Documentat'n url: https://gohugo.io/ weight: 20 - name: \u003ci class='fa-fw fas fa-bullhorn'\u003e\u003c/i\u003e Crrredits pageRef: more/credits/ weight: 30 - name: \u003ci class='fa-fw fas fa-tags'\u003e\u003c/i\u003e Arrr! Tags pageRef: tags/ weight: 40 params: landingPageName: \u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Arrr! Home title: Cap'n Hugo Relearrrn Theme weight: 1 { \"languages\": { \"en\": { \"languageName\": \"English\", \"menu\": { \"shortcuts\": [ { \"identifier\": \"ds\", \"name\": \"\\u003ci class='fa-fw fab fa-github'\\u003e\\u003c/i\\u003e GitHub repo\", \"url\": \"https://github.com/McShelby/hugo-theme-relearn\", \"weight\": 10 }, { \"name\": \"\\u003ci class='fa-fw fas fa-camera'\\u003e\\u003c/i\\u003e Showcases\", \"pageRef\": \"showcase/\", \"weight\": 11 }, { \"identifier\": \"hugodoc\", \"name\": \"\\u003ci class='fa-fw fas fa-bookmark'\\u003e\\u003c/i\\u003e Hugo Documentation\", \"url\": \"https://gohugo.io/\", \"weight\": 20 }, { \"name\": \"\\u003ci class='fa-fw fas fa-bullhorn'\\u003e\\u003c/i\\u003e Credits\", \"pageRef\": \"more/credits/\", \"weight\": 30 }, { \"name\": \"\\u003ci class='fa-fw fas fa-tags'\\u003e\\u003c/i\\u003e Tags\", \"pageRef\": \"tags/\", \"weight\": 40 } ] }, \"params\": { \"landingPageName\": \"\\u003ci class='fa-fw fas fa-home'\\u003e\\u003c/i\\u003e Home\" }, \"title\": \"Hugo Relearn Theme\", \"weight\": 1 }, \"pir\": { \"languageName\": \"Arrr! Pirrrates\", \"menu\": { \"shortcuts\": [ { \"identifier\": \"ds\", \"name\": \"\\u003ci class='fa-fw fab fa-github'\\u003e\\u003c/i\\u003e GitHub repo\", \"url\": \"https://github.com/McShelby/hugo-theme-relearn\", \"weight\": 10 }, { \"name\": \"\\u003ci class='fa-fw fas fa-camera'\\u003e\\u003c/i\\u003e Showcases\", \"pageRef\": \"showcase/\", \"weight\": 11 }, { \"identifier\": \"hugodoc\", \"name\": \"\\u003ci class='fa-fw fas fa-bookmark'\\u003e\\u003c/i\\u003e Cap'n Hugo Documentat'n\", \"url\": \"https://gohugo.io/\", \"weight\": 20 }, { \"name\": \"\\u003ci class='fa-fw fas fa-bullhorn'\\u003e\\u003c/i\\u003e Crrredits\", \"pageRef\": \"more/credits/\", \"weight\": 30 }, { \"name\": \"\\u003ci class='fa-fw fas fa-tags'\\u003e\\u003c/i\\u003e Arrr! Tags\", \"pageRef\": \"tags/\", \"weight\": 40 } ] }, \"params\": { \"landingPageName\": \"\\u003ci class='fa-fw fas fa-home'\\u003e\\u003c/i\\u003e Arrr! Home\" }, \"title\": \"Cap'n Hugo Relearrrn Theme\", \"weight\": 1 } } } Read more about hugo menu and hugo multilingual menus\nShortcuts to pages inside of your project If you have shortcuts to pages inside of your project and you don’t want them to show up in page menu section, you have two choices:\nMake the page file for the shortcut a headless branch bundle (contained in its own subdirectory and called _index.md) and add the following frontmatter configuration to the file (see exampleSite’s content/showcase/_index.en.md). This causes its content to not be ontained in the sitemap.\n​ toml yaml json +++ title = 'Showcase' [_build] list = 'never' publishResources = true render = 'always' +++ --- _build: list: never publishResources: true render: always title: Showcase --- { \"_build\": { \"list\": \"never\", \"publishResources\": true, \"render\": \"always\" }, \"title\": \"Showcase\" } Store the page file for the shortcut below a parent headless branch bundle and add the following frontmatter to he parent (see exampleSite’s content/more/_index.en.md). Don’t give this page a title as this will cause it to be shown in the breadcrumbs - a thing you most likely don’t want.\n​ toml yaml json +++ [_build] list = 'never' publishResources = false render = 'never' +++ --- _build: list: never publishResources: false render: never --- { \"_build\": { \"list\": \"never\", \"publishResources\": false, \"render\": \"never\" } } In this case, the file itself can be a branch bundle, leaf bundle or simple page (see exampleSite’s content/more/credits.en.md). This causes its content to be contained in the sitemap.\n​ toml yaml json +++ title = 'Credits' +++ --- title: Credits --- { \"title\": \"Credits\" }",
    "description": "You can define additional menu entries or shortcuts in the navigation menu without any link to content.",
    "tags": [],
    "title": "Menu extra shortcuts",
    "uri": "/hugo-theme-relearn/cont/menushortcuts/index.html"
  },
  {
    "breadcrumb": "Content",
    "content": "The Relearn theme is fully compatible with Hugo multilingual mode.\nAvailable languages: Arabic, Simplified Chinese, Traditional Chinese, Czech, Dutch, English, Finnish, French, German, Hindi, Hungarian, Indonesian, Italian, Japanese, Korean, Polish, Portuguese, Romanian, Russian, Spanish, Swahili, Turkish, Vietnamese. Feel free to contribute! Full support for languages written right to left Automatic menu generation from multilingual content In-browser language switching Basic configuration After learning how Hugo handle multilingual websites, define your languages in your hugo.toml file.\nFor example with current English and Piratized English website.\nNote Make sure your default language is defined as the first one in the [languages] array, as the theme needs to make assumptions on it\nhugo. toml yaml json defaultContentLanguage = 'en' [languages] [languages.en] languageName = 'English' title = 'Hugo Relearn Theme' weight = 1 [languages.pir] languageName = 'Arrr! Pirrrates' title = \"Cap'n Hugo Relearrrn Theme\" weight = 2 defaultContentLanguage: en languages: en: languageName: English title: Hugo Relearn Theme weight: 1 pir: languageName: Arrr! Pirrrates title: Cap'n Hugo Relearrrn Theme weight: 2 { \"defaultContentLanguage\": \"en\", \"languages\": { \"en\": { \"languageName\": \"English\", \"title\": \"Hugo Relearn Theme\", \"weight\": 1 }, \"pir\": { \"languageName\": \"Arrr! Pirrrates\", \"title\": \"Cap'n Hugo Relearrrn Theme\", \"weight\": 2 } } } Then, for each new page, append the id of the language to the file.\nSingle file my-page.md is split in two files: in English: my-page.md in Piratized English: my-page.pir.md Single file _index.md is split in two files: in English: _index.md in Piratized English: _index.pir.md Info Be aware that only translated pages are displayed in menu. It’s not replaced with default language content.\nTip Use slug frontmatter parameter to translate urls too.\nSearch In case each page’s content is written in one single language only, the above configuration will already configure the site’s search functionality correctly.\nWarning Although the theme supports a wide variety of supported languages, the site’s search via the Lunr search library does not. You’ll see error reports in your browsers console log for each unsupported language. Currently unsupported are:\nCzech Indonesian Polish Swahili Search with mixed language support In case your page’s content contains text in multiple languages (e.g. you are writing a Russian documentation for your english API), you can add those languages to your hugo.toml to broaden search.\nhugo. toml yaml json [params] additionalContentLanguage = ['en'] params: additionalContentLanguage: - en { \"params\": { \"additionalContentLanguage\": [ \"en\" ] } } As this is an array, you can add multiple additional languages.\nNote Keep in mind that the language code required here, is the base language code. E.g. if you have additional content in zh-CN, you have to add just zh to this parameter.\nOverwrite translation strings Translations strings are used for common default values used in the theme (Edit button, Search placeholder and so on). Translations are available in English and Piratized English but you may use another language or want to override default values.\nTo override these values, create a new file in your local i18n folder i18n/\u003cidlanguage\u003e.toml and inspire yourself from the theme themes/hugo-theme-relearn/i18n/en.toml\nDisable language switching Switching the language in the browser is a great feature, but for some reasons you may want to disable it.\nJust set disableLanguageSwitchingButton=true in your hugo.toml\nhugo. toml yaml json [params] disableLanguageSwitchingButton = true params: disableLanguageSwitchingButton: true { \"params\": { \"disableLanguageSwitchingButton\": true } }",
    "description": "The Relearn theme is fully compatible with Hugo multilingual mode.",
    "tags": [],
    "title": "Multilingual and i18n",
    "uri": "/hugo-theme-relearn/cont/i18n/index.html"
  },
  {
    "breadcrumb": "Content",
    "content": "The Relearn theme supports Hugo’s default taxonomies tag and category out of the box.\nConfiguration Just add tags and/or categories to any page. They can be given as a single string or an array of strings.\n​ toml yaml json +++ categories = ['taxonomy', 'content'] tags = 'tutorial' title = 'Taxonomy' +++ --- categories: - taxonomy - content tags: tutorial title: Taxonomy --- { \"categories\": [ \"taxonomy\", \"content\" ], \"tags\": \"tutorial\", \"title\": \"Taxonomy\" } Behavior The tags are displayed at the top of the page in alphabetical order.\nThe categories are displayed at the bottom of the page in alphabetical order in the default implementation of the theme but can be customized by providing your own content-footer.html partial.\nEach item is a link to a taxonomy page displaying all the articles with the given term.\nList all the tags In the hugo.toml file you can add a shortcut to display all the tags and categories\nhugo. toml yaml json [menu] [[menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-tags'\u003e\u003c/i\u003e Tags\" url = '/tags' [[menu.shortcuts]] name = \"\u003ci class='fa-fw fas fa-layer-group'\u003e\u003c/i\u003e Categories\" url = '/categories' menu: shortcuts: - name: \u003ci class='fa-fw fas fa-tags'\u003e\u003c/i\u003e Tags url: /tags - name: \u003ci class='fa-fw fas fa-layer-group'\u003e\u003c/i\u003e Categories url: /categories { \"menu\": { \"shortcuts\": [ { \"name\": \"\\u003ci class='fa-fw fas fa-tags'\\u003e\\u003c/i\\u003e Tags\", \"url\": \"/tags\" }, { \"name\": \"\\u003ci class='fa-fw fas fa-layer-group'\\u003e\\u003c/i\\u003e Categories\", \"url\": \"/categories\" } ] } } Customization If you define custom taxonomies and want to display a list of them somewhere on your page (often in the layouts/partials/content-footer.html) you can call a partial that does the job for you:\n{{ partial \"term-list.html\" (dict \"page\" . \"taxonomy\" \"categories\" \"icon\" \"layer-group\" ) }} Parameter Name Default Notes page \u003cempty\u003e Mandatory reference to the page. taxonomy \u003cempty\u003e The plural name of the taxonomy to display as used in your frontmatter. class \u003cempty\u003e Additional CSS classes set on the outermost generated HTML element.\nIf set to tags you will get the visuals for displaying the tags taxonomy, otherwise it will be a simple list of links as for the categories taxonomy. style primary The style scheme used if class is tags.\n- by severity: caution, important, info, note, tip, warning\n- by brand color: primary, secondary, accent\n- by color: blue, cyan, green, grey, magenta, orange, red\n- by special color: default, transparent, code color see notes The CSS color value to be used if class is tags. If not set, the chosen color depends on the style. Any given value will overwrite the default.\n- for severity styles: a nice matching color for the severity\n- for all other styles: the corresponding color icon \u003cempty\u003e An optional Font Awesome icon name set to the left of the list.",
    "description": "The Relearn theme supports Hugo’s default taxonomies tag and category out of the box.",
    "tags": [
      "Tutorial"
    ],
    "title": "Taxonomy",
    "uri": "/hugo-theme-relearn/cont/taxonomy/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children",
    "content": "This is a demo child page.\nSubpages of this page page 1-1",
    "description": "This is a demo child page",
    "tags": [
      "Children",
      "Non-Hidden"
    ],
    "title": "page 1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "Thanks to the simplicity of Hugo, this page is as empty as this theme needs requirements.\nJust download at least version 0.121.0 of the Hugo binary for your OS (Windows, Linux, Mac).\nIt’s a kind of magic",
    "description": "Thanks to the simplicity of Hugo, this page is as empty as this theme needs requirements.",
    "tags": [],
    "title": "Requirements",
    "uri": "/hugo-theme-relearn/basics/requirements/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.\nTip The following tutorial leads you through the steps of creating a first, minimal new site.\nYou don’t need to edit any files besides your hugo.toml and only need to execute the commands in the given order.\nCreate your Project Hugo provides the new command to create a new website:\nhugo new site my-new-site After that change into the directory:\ncd my-new-site Every upcoming command will be executed from inside your new site’s root.\nInstall the Theme Downloading as Archive You can download the theme as .zip archive and extract its content into them themes/hugo-theme-relearn directory.\nAfterwards add this at the end of your hugo.toml.\nhugo. toml yaml json theme = 'hugo-theme-relearn' theme: hugo-theme-relearn { \"theme\": \"hugo-theme-relearn\" } Using Hugo’s Module System You can install the Relearn theme by following the standard documentation using Hugo’s module system:\nhugo mod init example.com Afterwards add this at the end of your hugo.toml.\nhugo. toml yaml json [module] [[module.imports]] path = 'github.com/McShelby/hugo-theme-relearn' module: imports: - path: github.com/McShelby/hugo-theme-relearn { \"module\": { \"imports\": [ { \"path\": \"github.com/McShelby/hugo-theme-relearn\" } ] } } Using Git Submodules If you plan to store your project in a git repository you can create one with:\ngit init Now add the theme as a submodule by:\ngit submodule add --depth 1 https://github.com/McShelby/hugo-theme-relearn.git themes/hugo-theme-relearn Afterwards add this at the end of your hugo.toml.\nhugo. toml yaml json theme = 'hugo-theme-relearn' theme: hugo-theme-relearn { \"theme\": \"hugo-theme-relearn\" } Create your Home Page If you don’t create a home page, yet, the theme will generate a placeholder text with instructions on how to proceed.\nStart your journey by creating a home page:\nhugo new --kind home _index.md The newly created home page content/_index.md is empty and you obviously should add some meaningful content.\nCreate your First Chapter Page Chapters are meant to be top level pages that contain other child pages. They have a special layout style and often just contain the title and a brief abstract of the section.\nNow create your first chapter page with the following command:\nhugo new --kind chapter basics/_index.md When opening the newly created file content/basics/_index.md, you should see the weight frontmatter with a number. This will be used to generate the subtitle of the chapter page, and should be set to a consecutive value starting at 1 for each chapter level.\nCreate your First Content Pages Then create content pages inside the previously created chapter. Here are three ways to create content in the chapter:\nhugo new basics/first-content/_index.md hugo new basics/second-content/index.md hugo new basics/third-content.md Feel free to edit those files by adding some sample content and replacing the title value in the beginning of the files.\nNote Please note that Hugo overrides the default archetype template coming with this theme when using hugo new site my-new-site. To actually see your page later, you have to remove the draft=true from the page’s frontmatter.\nTesting your Website Locally Launch your new web site by using the following command:\nhugo serve Go to http://localhost:1313 in your browser.\nYou should notice a few things:\nThe home page contains your provided text. You have the menu Basics in the sidebar. Clicking on it reveals three submenus with names equal to the title properties in the previously created content pages. While you are running hugo serve your page refreshes automatically when you change a content page. Neat! Build and Deploy your Website When your site is ready to be deployed, run the following command:\nhugo A public directory will be generated, containing all content and assets for your web site.\nIt now can be deployed to any web server by simply uploading its contents or you can check out one of Hugo’s many other deployment options.\nNote If you are storing your web site in git, commit all but the public directory.",
    "description": "The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.",
    "tags": [
      "Documentation"
    ],
    "title": "Installation",
    "uri": "/hugo-theme-relearn/basics/installation/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "On top of Hugo’s global configuration options, the Relearn theme lets you define further options unique to the theme in your hugo.toml.\nNote that some of these options are explained in detail in other sections of this documentation.\nAll config options The values reflect the options active in this documentation. The defaults can be taken from the annotated example below.\nhugo. toml yaml json [params] additionalContentLanguage = ['en'] alwaysopen = '' breadcrumbSeparator = '\u003e' collapsibleMenu = true customMathJaxURL = '' customMermaidURL = '' customOpenapiURL = '' disableAnchorCopy = false disableAnchorScrolling = false disableAssetsBusting = false disableBreadcrumb = false disableDefaultRelref = false disableExplicitIndexURLs = false disableGeneratorVersion = false disableHoverBlockCopyToClipBoard = false disableInlineCopyToClipBoard = true disableLandingPageButton = true disableLanguageSwitchingButton = false disableMathJax = true disableMermaid = true disableNextPrev = false disableOpenapi = true disableRandomIds = false disableRootBreadcrumb = true disableSearch = false disableSearchHiddenPages = false disableSeoHiddenPages = true disableShortcutsTitle = false disableTagHiddenPages = false disableTermBreadcrumbs = false disableToc = false editURL = 'https://github.com/McShelby/hugo-theme-relearn/edit/main/exampleSite/content/${FilePath}' externalLinkTarget = '_self' highlightWrap = true images = ['images/hero.png'] mathJaxInitialize = '{}' mermaidInitialize = '{ \"securityLevel\": \"loose\" }' mermaidZoom = true ordersectionsby = 'weight' showVisitedLinks = true titleSeparator = '::' [params.author] name = 'Sören Weber' [[params.boxStyle]] color = 'gold' i18n = '' icon = 'rainbow' identifier = 'magic' title = 'Magic' [params.image] errorlevel = 'error' [params.imageEffects] border = true lazy = true lightbox = true shadow = false [params.include] errorlevel = 'error' [params.link] errorlevel = 'error' [params.openapi] errorlevel = 'error' [params.social] facebook_admin = '' twitter = '' [[params.themeVariant]] auto = [] identifier = 'relearn-auto' name = 'Relearn Light/Dark' [[params.themeVariant]] identifier = 'relearn-light' [[params.themeVariant]] identifier = 'relearn-dark' [[params.themeVariant]] identifier = 'relearn-bright' [[params.themeVariant]] auto = ['zen-light', 'zen-dark'] identifier = 'zen-auto' name = 'Zen Light/Dark' [[params.themeVariant]] identifier = 'zen-light' [[params.themeVariant]] identifier = 'zen-dark' [[params.themeVariant]] auto = ['learn', 'neon'] identifier = 'retro-auto' name = 'Retro Learn/Neon' [[params.themeVariant]] identifier = 'neon' [[params.themeVariant]] identifier = 'learn' [[params.themeVariant]] identifier = 'blue' [[params.themeVariant]] identifier = 'green' [[params.themeVariant]] identifier = 'red' params: additionalContentLanguage: - en alwaysopen: \"\" author: name: Sören Weber boxStyle: - color: gold i18n: \"\" icon: rainbow identifier: magic title: Magic breadcrumbSeparator: '\u003e' collapsibleMenu: true customMathJaxURL: \"\" customMermaidURL: \"\" customOpenapiURL: \"\" disableAnchorCopy: false disableAnchorScrolling: false disableAssetsBusting: false disableBreadcrumb: false disableDefaultRelref: false disableExplicitIndexURLs: false disableGeneratorVersion: false disableHoverBlockCopyToClipBoard: false disableInlineCopyToClipBoard: true disableLandingPageButton: true disableLanguageSwitchingButton: false disableMathJax: true disableMermaid: true disableNextPrev: false disableOpenapi: true disableRandomIds: false disableRootBreadcrumb: true disableSearch: false disableSearchHiddenPages: false disableSeoHiddenPages: true disableShortcutsTitle: false disableTagHiddenPages: false disableTermBreadcrumbs: false disableToc: false editURL: https://github.com/McShelby/hugo-theme-relearn/edit/main/exampleSite/content/${FilePath} externalLinkTarget: _self highlightWrap: true image: errorlevel: error imageEffects: border: true lazy: true lightbox: true shadow: false images: - images/hero.png include: errorlevel: error link: errorlevel: error mathJaxInitialize: '{}' mermaidInitialize: '{ \"securityLevel\": \"loose\" }' mermaidZoom: true openapi: errorlevel: error ordersectionsby: weight showVisitedLinks: true social: facebook_admin: \"\" twitter: \"\" themeVariant: - auto: [] identifier: relearn-auto name: Relearn Light/Dark - identifier: relearn-light - identifier: relearn-dark - identifier: relearn-bright - auto: - zen-light - zen-dark identifier: zen-auto name: Zen Light/Dark - identifier: zen-light - identifier: zen-dark - auto: - learn - neon identifier: retro-auto name: Retro Learn/Neon - identifier: neon - identifier: learn - identifier: blue - identifier: green - identifier: red titleSeparator: '::' { \"params\": { \"additionalContentLanguage\": [ \"en\" ], \"alwaysopen\": \"\", \"author\": { \"name\": \"Sören Weber\" }, \"boxStyle\": [ { \"color\": \"gold\", \"i18n\": \"\", \"icon\": \"rainbow\", \"identifier\": \"magic\", \"title\": \"Magic\" } ], \"breadcrumbSeparator\": \"\\u003e\", \"collapsibleMenu\": true, \"customMathJaxURL\": \"\", \"customMermaidURL\": \"\", \"customOpenapiURL\": \"\", \"disableAnchorCopy\": false, \"disableAnchorScrolling\": false, \"disableAssetsBusting\": false, \"disableBreadcrumb\": false, \"disableDefaultRelref\": false, \"disableExplicitIndexURLs\": false, \"disableGeneratorVersion\": false, \"disableHoverBlockCopyToClipBoard\": false, \"disableInlineCopyToClipBoard\": true, \"disableLandingPageButton\": true, \"disableLanguageSwitchingButton\": false, \"disableMathJax\": true, \"disableMermaid\": true, \"disableNextPrev\": false, \"disableOpenapi\": true, \"disableRandomIds\": false, \"disableRootBreadcrumb\": true, \"disableSearch\": false, \"disableSearchHiddenPages\": false, \"disableSeoHiddenPages\": true, \"disableShortcutsTitle\": false, \"disableTagHiddenPages\": false, \"disableTermBreadcrumbs\": false, \"disableToc\": false, \"editURL\": \"https://github.com/McShelby/hugo-theme-relearn/edit/main/exampleSite/content/${FilePath}\", \"externalLinkTarget\": \"_self\", \"highlightWrap\": true, \"image\": { \"errorlevel\": \"error\" }, \"imageEffects\": { \"border\": true, \"lazy\": true, \"lightbox\": true, \"shadow\": false }, \"images\": [ \"images/hero.png\" ], \"include\": { \"errorlevel\": \"error\" }, \"link\": { \"errorlevel\": \"error\" }, \"mathJaxInitialize\": \"{}\", \"mermaidInitialize\": \"{ \\\"securityLevel\\\": \\\"loose\\\" }\", \"mermaidZoom\": true, \"openapi\": { \"errorlevel\": \"error\" }, \"ordersectionsby\": \"weight\", \"showVisitedLinks\": true, \"social\": { \"facebook_admin\": \"\", \"twitter\": \"\" }, \"themeVariant\": [ { \"auto\": [], \"identifier\": \"relearn-auto\", \"name\": \"Relearn Light/Dark\" }, { \"identifier\": \"relearn-light\" }, { \"identifier\": \"relearn-dark\" }, { \"identifier\": \"relearn-bright\" }, { \"auto\": [ \"zen-light\", \"zen-dark\" ], \"identifier\": \"zen-auto\", \"name\": \"Zen Light/Dark\" }, { \"identifier\": \"zen-light\" }, { \"identifier\": \"zen-dark\" }, { \"auto\": [ \"learn\", \"neon\" ], \"identifier\": \"retro-auto\", \"name\": \"Retro Learn/Neon\" }, { \"identifier\": \"neon\" }, { \"identifier\": \"learn\" }, { \"identifier\": \"blue\" }, { \"identifier\": \"green\" }, { \"identifier\": \"red\" } ], \"titleSeparator\": \"::\" } } Annotated config options ​ hugo.toml [params] # If an option value is said to be not set, you can achieve the same behavior # by giving it an empty string value. ############################################################################### # Hugo # These options usually apply to other themes as well. # The author of your site. # Default: not set # This will be used in HTML meta tags, the opengraph protocol and twitter # cards. # You can also set `author.email` if you want to publish this information. author.name = \"Sören Weber\" # The social media image of your site. # Default: not set # This is used for generating social media meta information for the opengraph # protocol and twitter cards. # This can be overridden in the page's frontmatter. images = [ \"images/hero.png\" ] # Admin options for social media. # Default: not set # Configuration for the Open Graph protocol and Twitter Cards adhere to Hugo's # implementation. See the Hugo docs for possible values. social.facebook_admin = \"\" social.twitter = \"\" ############################################################################### # Relearn Theme # These options are specific to the Relearn theme. #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Branding # These options set your overall visual appearance. # Used color variants. # Default: \"auto\" # This sets one or more color variants, available to your readers to choose # from. You can # - set a single value eg. \"zen-light\" # - an array like [ \"neon\", \"learn\" ] # - an array with options like [ { identifier = \"neon\" },{ identifier = \"learn\" } ] # The last form allows to set further options for each variant. # The `identifier` is mandatory. You can also set `name` which overrides the # value displayed in the variant selector. # If the array has more than one entry, a variant selector # is shown in the lower part of the menu. The first entry in the array is the # default variant, used for first time visitors. # The theme ships with the following variants: \"relearn-bright\", # \"relearn-light\", \"relearn-dark\", \"zen-light\", \"zen-dark\", \"neon\", \"learn\", # \"blue\", \"green\", \"red\". In addition you can use auto mode variants. See the # docs for a detailed explanation. # You can also define your own variants. See the docs how this works. Also, # the docs provide an interactive theme generator to help you with this task. themeVariant = [ { identifier = \"relearn-auto\", name = \"Relearn Light/Dark\", auto = [] }, { identifier = \"relearn-light\" }, { identifier = \"relearn-dark\" }, { identifier = \"relearn-bright\" }, { identifier = \"zen-auto\", name = \"Zen Light/Dark\", auto = [ \"zen-light\", \"zen-dark\" ] }, { identifier = \"zen-light\" }, { identifier = \"zen-dark\" }, { identifier = \"retro-auto\", name = \"Retro Learn/Neon\", auto = [ \"learn\", \"neon\" ] }, { identifier = \"neon\" }, { identifier = \"learn\" }, { identifier = \"blue\" }, { identifier = \"green\" }, { identifier = \"red\" } ] #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # General # These options are defining general, non visual behavior. # Avoid new asset URLs on build. # Default: false # By default JavaScript-files and CSS-files get a unique ID on each rebuild. # This makes sure, the user always has the latest version and not some stale # copy of his browser cache. Anyways, it can be desireable to turn this # off in certain circumstances. For example if you have Hugo's dev server # running. Also some proxies dislike this optimization. disableAssetsBusting = false # Avoid generator meta tags. # Default: false # Set this to true if you want to disable generation for generator meta tags # of Hugo and the theme in your HTML head. In this case also don't forget to # set Hugo's disableHugoGeneratorInject=true. Otherwise Hugo will generate a # meta tag into your home page anyways. disableGeneratorVersion = false # Avoid unique IDs. # Default: false # In various situations the theme generates non stable unique ids to be used # in HTML fragment links. This can be undesirable for example when testing # the output for changes. If you disable the random id generation, the theme # may not function correctly anymore. disableRandomIds = false # Multilanguage content. # Default: not set # If your pages contain further languages besides the main one used, add all # those auxiliary languages here. This will create a search index with # support for all used languages of your site. # This is handy for example if you are writing in Spanish but have lots of # source code on your page which typically uses English terminology. additionalContentLanguage = [ \"en\" ] # Additional code dependencies. # Default: See hugo.toml of the theme # The theme provides a mechanism to load further JavaScript and CSS # dependencies on demand only if they are needed. This comes in handy if you # want to add own shortcodes that depend on additional code to be loaded. # See the docs how this works. # [relearn.dependencies] #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Topbar # These options modify the topbar appearance. # Hide the table of contents button. # Default: false # If the TOC button is hidden, also the keyboard shortcut is disabled. # This can be overridden in the page's frontmatter. disableToc = false # Hide the breadcrumbs. # Default: false # If the breadcrumbs are hidden, the title of the displayed page will still be # shown in the topbar. disableBreadcrumb = false # Hide Next and Previous navigation buttons. # Default: false # If the navigation buttons are hidden, also the keyboard shortcuts are # disabled. disableNextPrev = false # The URL prefix to edit a page. # Default: not set # If set, an edit button will be shown in the topbar. If the button is hidden, # also the keyboard shortcuts are disabled. The value can contain the macro # `${FilePath}` which will be replaced by the file path of your displayed page. # If no `${FilePath}` is given in the value, the value is treated as if the # `${FilePath}` was appended at the end of the value. This can be overridden # in the pages frontmatter. This is useful if you want to give the opportunity # for people to create merge request for your content. editURL = \"https://github.com/McShelby/hugo-theme-relearn/edit/main/exampleSite/content/${FilePath}\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Menu # These options modify the menu appearance. # Hide the search box. # Default: false # If the search box is disabled, the search functionality is disabled too. # This will also cause the keyboard shortcut to be disabled and the dedicated # search page is not linked although it mighty be configured. disableSearch = false # Hide the Home entry. # Default: false # If shown, a Home button will appear below the search bar and the main menu. # It links to your the home page of the current language. disableLandingPageButton = true # The order of main menu submenus. # Default: \"weight\" # Submenus can be ordered by \"weight\", \"title\", \"linktitle\", \"modifieddate\", # \"expirydate\", \"publishdate\", \"date\", \"length\" or \"default\" (adhering to # Hugo's default sort order). This can be overridden in the pages frontmatter. ordersectionsby = \"weight\" # The initial expand state of submenus. # Default: not set # This controls whether submenus will be expanded (true), or collapsed (false) # in the menu. If not set, the first menu level is set to false, all others # levels are set to true. This can be overridden in the page's frontmatter. # If the displayed page has submenus, they will always been displayed expanded # regardless of this option. alwaysopen = \"\" # Shows expander for submenus. # Default: false # If set to true, a submenu in the sidebar will be displayed in a collapsible # tree view and a clickable expander is set in front of the entry. # This can be overridden in the page's frontmatter. collapsibleMenu = true # Shows checkmarks for visited pages of the main menu. # Default: false # This also causes the display of the `Clear History` entry in the lower part # of the menu to remove all checkmarks. The checkmarks will also been removed # if you regenerate your site as the ids are not stable. showVisitedLinks = true # Hide heading above the shortcut menu. # Default: false # The title for the heading can be overwritten in your i18n files. See Hugo's # documentation how to do this. disableShortcutsTitle = false # Hide the language switcher. # Default: false # If you have more than one language configured, a language switcher is # displayed in the lower part of the menu. This option lets you explicitly # turn this behavior off. disableLanguageSwitchingButton = false #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Hidden pages # These options configure how hidden pages are treated. # A page flagged as hidden, is only removed from the main menu if you are # currently not on this page or the hidden page is not part of current page's # ancestors. For all other functionality in Hugo a hidden page behaves like any # other page if not otherwise configured. # Hide hidden pages from search. # Default: false # Hides hidden pages from the suggestions of the search box and the dedicated # search page. disableSearchHiddenPages = false # Hide hidden pages for web crawlers. # Default: false # Avoids hidden pages from showing up in the sitemap and on Google (et all), # otherwise they may be indexed by search engines disableSeoHiddenPages = true # Hide hidden pages for taxonomies. # Default: false # Hides hidden pages from showing up on the taxonomy and terms pages. If this # reduces term counters to zero, an empty but not linked term page will be # created anyhow. disableTagHiddenPages = false #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Content # These options modify how your content is displayed. # Title separator. # Default: \"::\" # Changes the title separator used when concatenating the page title with the # site title. This is consistently used throughout the theme. titleSeparator = \"::\" # Breadcrumb separator. # Default: \"\u003e\" # Changes the breadcrumb separator used in the topbars breadcrumb area and for # search results and term pages. breadcrumbSeparator = \"\u003e\" # Hide the root breadcrumb. # Default: false # The root breadcrumb is usually the home page of your site. Because this is # always accessible by clicking on the logo, you may want to reduce clutter # by removing this from your breadcrumb. disableRootBreadcrumb = true # Hide breadcrumbs term pages. # Default: false # If you have lots of taxonomy terms, the term pages may seem cluttered with # breadcrumbs to you, so this is the option to turn off breadcrumbs on term # pages. Only the page title will then be shown on the term pages. disableTermBreadcrumbs = false # Disable copying heading links to clipboard # Default: false # If set to true, this disables the copying of anchor links to the clipboard; # if also `disableAnchorScrolling=true` then no anchor link will be visible # when hovering a heading. disableAnchorCopy = false # Disable scrolling to heading link on click # Default: false # If set to true, this disables the scrolling to the beginning of the heading # when clicked; if also `disableAnchorCopy=true` then no anchor link will # be visible when hovering a heading. disableAnchorScrolling = false # User-defined styles for shortcodes # Default: not set # Besides the predefined `style` values, you are able to define your own. The # `style` parameter of the shortcode must match the `identifier` defined here. # The title for the style will be determined from the `title`. If no `title` # but a `i18n` is set, the title will be taken from the translation files by # that key. The `title` may be empty in which case, the box does not contain a # default title. `icon` and `color` are working similar. boxStyle = [ { identifier = \"magic\", i18n = \"\", title = \"Magic\", icon = \"rainbow\", color = \"gold\" } ] #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Highlight # These options configure how code is displayed. # Hide copy-to-clipboard for inline code. # Default: false # This removes the copy-to-clipboard button from your inline code. disableInlineCopyToClipBoard = true # Always show copy-to-clipboard for block code. # Default: false # The theme only shows the copy-to-clipboard button if you hover over the code # block. Set this to true to disable the hover effect and always show the # button. disableHoverBlockCopyToClipBoard = false # Wrap for code blocks. # Default: true # By default lines of code blocks wrap around if the line is too long to be # displayed on screen. If you dislike this behavior, you can reconfigure it # here. # Note that lines always wrap in print mode regardless of this option. # This can be overridden in the page's frontmatter or given as a parameter to # individual code blocks. highlightWrap = true #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Include # These options configure how the include shortcode works. # What to do when path is not resolved. # Default: \"\" # You can control what should happen if a path can not be resolved to as # a resource or via the file system. If not set, no output will be written # for the unresolved path. If set to `warning` the same happens and an additional # warning is printed. If set to `error` an error message is printed and the build # is aborted. # This can be overridden in the page's frontmatter. include.errorlevel = \"error\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Images # These options configure how images are displayed. # What to do when local image link is not resolved. # Default: \"\" # You can control what should happen if a local image can not be resolved to as # a resource. If not set, the unresolved link is written as given into the resulting # output. If set to `warning` the same happens and an additional warning is # printed. If set to `error` an error message is printed and the build is # aborted. # Please note that this can not resolve files inside of your `static` directory. # This can be overridden in the page's frontmatter. image.errorlevel = \"error\" # Image effects. # See the documentation for how you can even add your own arbitrary effects to # the list. # All effects can be overridden in the page's frontmatter or through URL parameter # given to the image. See the documentation for details. # Default: false imageEffects.border = true # Default: true imageEffects.lazy = true # Default: true imageEffects.lightbox = true # Default: false imageEffects.shadow = false #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Links # These options configure how links are displayed. # Wether to use Hugo's default relref shortcode implementation # Default: false # Since the theme provides a link render hook, the usage of the relref shortcode # is obsolete. If a site still uses that shortcode, it fails to generate a # correct links if the baseURL is configured with a subdirectory and relativeURLs=false. # The theme provides an overriden relref shortcode that also works in the # above setup but must manually be activated by setting this option to true. # See discussion in https://github.com/McShelby/hugo-theme-relearn/discussions/862 disableDefaultRelref = false # What to do when local page link is not resolved. # Default: \"\" # You can control what should happen if a local link can not be resolved to a # page. If not set, the unresolved link is written as given into the resulting # output. If set to `warning` the same happens and an additional warning is # printed. If set to `error` an error message is printed and the build is # aborted. # Please note that with Hugo \u003c 0.123.0 + `uglyURLs=true` this can lead to false # negatives. # This can be overridden in the page's frontmatter. link.errorlevel = \"error\" # How to open external links. # Default: \"_blank\" # For external links you can define how they are opened in your browser. All # values for the HTML `target` attribute of the `a` element are allowed. The # default value opens external links in a separate browser tab. If you want # to open those links in the same tab, use \"_self\". externalLinkTarget = \"_self\" # Generate link URLs the Hugo way. # Default: false # If set to true, the theme behaves like a standard Hugo installation and # appends no index.html to prettyURLs. As a trade off, your build project will # not be servable from the file system. disableExplicitIndexURLs = false #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # MathJax # These options configure how math formulae are displayed. # Initialization options for MathJax. # Default: not set # A JSON value. See the MathJaxdocumentation for possible parameter. # This can be overridden in the page's frontmatter. mathJaxInitialize = \"{}\" # Only load MathJax if needed. # Default: true # If a Math shortcode is found, the option will be ignored and # MathJax will be loaded regardlessly. The option is still useful in case you # are using scripting to set up your graph. In this case no shortcode or # Markdown codefence is involved and the library is not loaded by default. In this case # you can set `disableMathJax=false` in your frontmatter to force the library to # be loaded. # This can be overridden in the page's frontmatter. disableMathJax = true # URL for external MathJax library. # Default: not set # Specifies the remote location of the MathJax library. By default the shipped # version will be used. # This can be overridden in the page's frontmatter. customMathJaxURL = \"\" # \"https://unpkg.com/mathjax/es5/tex-mml-chtml.js\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # Mermaid # These options configure how Mermaid graphs are displayed. # Make graphs panable and zoomable # Default: false # For huge graphs it can be helpful to make them zoomable. Zoomable graphs come # with a reset button for the zoom. # This can be overridden in the page's frontmatter or given as a parameter to # individual graphs. mermaidZoom = true # Initialization options for Mermaid. # Default: not set # A JSON value. See the Mermaid documentation for possible parameter. # This can be overridden in the page's frontmatter. mermaidInitialize = \"{ \\\"securityLevel\\\": \\\"loose\\\" }\" # Only load Mermaid if needed. # Default: true # If a Mermaid shortcode or Markdown codefence is found, the option will be ignored and # Mermaid will be loaded regardlessly. The option is still useful in case you # are using scripting to set up your graph. In this case no shortcode or # Markdown codefence is involved and the library is not loaded by default. In this case # you can set `disableMermaid=false` in your frontmatter to force the library to # be loaded. # This can be overridden in the page's frontmatter. disableMermaid = true # URL for external Mermaid library. # Default: not set # Specifies the remote location of the Mermaid library. By default the shipped # version will be used. # This can be overridden in the page's frontmatter. customMermaidURL = \"\" # \"https://unpkg.com/mermaid/dist/mermaid.min.js\" #++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ # OpenApi # These options configure how OpenAPI specifications are displayed. # Only load OpenAPI if needed. # Default: true # If a OpenAPI shortcode is found, the option will be ignored and # OpenAPI will be loaded regardlessly. The option is still useful in case you # are using scripting to set up your graph. In this case no shortcode or # Markdown codefence is involved and the library is not loaded by default. In this case # you can set `disableOpenapi=false` in your frontmatter to force the library to # be loaded. # This can be overridden in the page's frontmatter. disableOpenapi = true # URL for external OpenAPI library. # Default: not set # Specifies the remote location of the OpenAPI library. By default the shipped # version will be used. # This can be overridden in the page's frontmatter. customOpenapiURL = \"\" # \"https://unpkg.com/swagger-ui-dist/swagger-ui-bundle.js\" # What to do when a local OpenAPI spec link is not resolved. # Default: \"\" # You can control what should happen if a local OpenAPI spec link can not be resolved # to a resource. If not set, the unresolved link is written as given into the resulting # output. If set to `warning` the same happens and an additional warning is # printed. If set to `error` an error message is printed and the build is # aborted. # Please note that this can not resolve files inside of your `static` directory. # This can be overridden in the page's frontmatter. openapi.errorlevel = \"error\"",
    "description": "On top of Hugo’s global configuration options, the Relearn theme lets you define further options unique to the theme in your hugo.toml.",
    "tags": [
      "Config"
    ],
    "title": "Configuration",
    "uri": "/hugo-theme-relearn/basics/configuration/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children",
    "content": "This is a demo child page with no description.\nSo its content is used as description.",
    "description": "This is a demo child page with no description.\nSo its content is used as description.",
    "tags": [
      "Children",
      "Non-Hidden"
    ],
    "title": "page 2",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-2/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "The Relearn theme provides configuration options to change your site’s colors, favicon and logo. This allows you to easily align your site visuals to your desired style. Most of these options are exposed through so called color variants.\nA color variant lets you customize various visual effects of your site like almost any color, used fonts, color schemes of print, syntax highligtning, Mermaid and the OpenAPI shortcode, etc. It contains of a CSS file and optional configuration options in your hugo.toml.\nThe Relearn theme ships with a wide set of different color variants. You can use them as-is, copy them over and use them as a starting point for your customizations or just create completely new variants unique to your site. The interactive variant generator may help you with this task.\nOnce configured in your hugo.toml, you can select them with the variant selector at the bottom of the menu.\nChange the Variant (Simple) Single Variant Set the themeVariant value to the name of your theme file. That’s it! Your site will be displayed in this variant only.\nhugo. toml yaml json [params] themeVariant = 'relearn-light' params: themeVariant: relearn-light { \"params\": { \"themeVariant\": \"relearn-light\" } } Note Your theme variant file must reside in your site’s assets/css directory and the file name must start with theme- and end in .css. In the above example, the path of your theme file must be assets/css/theme-relearn-light.css.\nIf you want to make changes to a shipped color variant, create a copy in your site’s assets/css directory. Don’t edit the file in the theme’s directory!\nMultiple Variants You can also set multiple variants. In this case, the first variant is the default chosen on first view and a variant selector will be shown in the menu footer if the array contains more than one entry.\nhugo. toml yaml json [params] themeVariant = ['relearn-light', 'relearn-dark'] params: themeVariant: - relearn-light - relearn-dark { \"params\": { \"themeVariant\": [ \"relearn-light\", \"relearn-dark\" ] } } Tip The theme provides an advanced configuration mode, combining the functionality for multiple variants with the below possibilities of adjusting to your OS settings and syntax highlighting and even more!\nAlthough all options documented here are still working, the advanced configuration options are the recommended way to configure your color variants. See below.\nAdjust to OS Settings You can also cause the site to adjust to your OS settings for light/dark mode. Just set the themeVariant to auto to become an auto mode variant. That’s it.\nYou can use the auto value with the single or multiple variants option. If you are using multiple variants, you can drop auto at any position in the option’s array, but usually it makes sense to set it in the first position and make it the default.\nhugo. toml yaml json [params] themeVariant = ['auto', 'red'] params: themeVariant: - auto - red { \"params\": { \"themeVariant\": [ \"auto\", \"red\" ] } } If you don’t configure anything else, the theme will default to use relearn-light for light mode and relearn-dark for dark mode. These defaults are overwritten by the first two non-auto options of your themeVariant option if present.\nIn the above example, you would end with red for light mode and the default of relearn-dark for dark mode.\nIf you don’t like that behavior, you can explicitly set themeVariantAuto. The first entry in the array is the color variant for light mode, the second for dark mode.\nhugo. toml yaml json [params] themeVariantAuto = ['learn', 'neon'] params: themeVariantAuto: - learn - neon { \"params\": { \"themeVariantAuto\": [ \"learn\", \"neon\" ] } } Change the Favicon If your favicon is a SVG, PNG or ICO, just drop your image in your site’s static/images/ directory and name it favicon.svg, favicon.png or favicon.ico respectively.\nIf you want to adjust your favicon according to your OS settings for light/dark mode, add the image files static/images/favicon-light.svg and static/images/favicon-dark.svg to your site’s directory, respectively, corresponding to your file format. In case some of the files are missing, the theme falls back to favicon.svg for each missing file. All supplied favicons must be of the same file format.\nIf no favicon file is found, the theme will lookup the alternative filename logo in the same location and will repeat the search for the list of supported file types.\nIf you need to change this default behavior, create a new file layouts/partials/favicon.html in your site’s directory and write something like this:\n​ layouts/partials/favicon.html \u003clink rel=\"icon\" href=\"/images/favicon.bmp\" type=\"image/bmp\"\u003e Change the Logo Create a new file in layouts/partials/logo.html of your site. Then write any HTML you want. You could use an img HTML tag and reference an image created under the static folder, or you could paste a SVG definition!\nNote The size of the logo will adapt automatically.\nSyntax Highlighting If you want to switch the syntax highlighting theme together with your color variant, you need to configure your installation according to Hugo’s documentation and provide a syntax highlighting stylesheet file.\nYou can use a one of the shipped stylesheet files or use Hugo to generate a file for you. The file must be written to assets/css/chroma-\u003cNAME\u003e.css. To use it with your color variant you have to define --CODE-theme: \u003cNAME\u003e in the color variant stylesheet file.\nFor an example, take a look into theme-relearn-light.css and hugo.toml of the exampleSite.\nChange the Variant (Advanced) The theme offers a new way to configure theme variants and all of the aspects above inside of a single configuration item. This comes with some features previously unsupported.\nLike with the multiple variants option, you are defining your theme variants in an array but now not by simple strings but in a table with suboptions.\nAgain, in this case, the first variant is the default chosen on first view and a variant selector will be shown in the menu footer if the array contains more than one entry.\nhugo. toml yaml json [params] themeVariant = ['relearn-light', 'relearn-dark'] params: themeVariant: - relearn-light - relearn-dark { \"params\": { \"themeVariant\": [ \"relearn-light\", \"relearn-dark\" ] } } you now write it that way:\nhugo. toml yaml json [params] [[params.themeVariant]] identifier = 'relearn-light' [[params.themeVariant]] identifier = 'relearn-dark' params: themeVariant: - identifier: relearn-light - identifier: relearn-dark { \"params\": { \"themeVariant\": [ { \"identifier\": \"relearn-light\" }, { \"identifier\": \"relearn-dark\" } ] } } The identifier option is mandatory and equivalent to the string in the first example. Further options can be configured, see the table below.\nParameter Name Default Notes identifier \u003cempty\u003e Must correspond to the name of a color variant either in your site’s or the theme’s directory in the form assets/css/theme-\u003cIDENTIFIER\u003e.css. name see notes The name to be displayed in the variant selector. If not set, the identifier is used in a human readable form. auto \u003cempty\u003e If set, the variant is treated as an auto mode variant. It has the same behavior as the themeVariantAuto option. The first entry in the array is the color variant for light mode, the second for dark mode. Defining auto mode variants with the advanced options has the benefit that you can now have multiple auto mode variants instead of just one with the simple options. Example Configuration of This Site hugo. toml yaml json [params] [[params.themeVariant]] auto = [] identifier = 'relearn-auto' name = 'Relearn Light/Dark' [[params.themeVariant]] identifier = 'relearn-light' [[params.themeVariant]] identifier = 'relearn-dark' [[params.themeVariant]] auto = ['zen-light', 'zen-dark'] identifier = 'zen-auto' name = 'Zen Light/Dark' [[params.themeVariant]] identifier = 'zen-light' [[params.themeVariant]] identifier = 'zen-dark' [[params.themeVariant]] identifier = 'neon' params: themeVariant: - auto: [] identifier: relearn-auto name: Relearn Light/Dark - identifier: relearn-light - identifier: relearn-dark - auto: - zen-light - zen-dark identifier: zen-auto name: Zen Light/Dark - identifier: zen-light - identifier: zen-dark - identifier: neon { \"params\": { \"themeVariant\": [ { \"auto\": [], \"identifier\": \"relearn-auto\", \"name\": \"Relearn Light/Dark\" }, { \"identifier\": \"relearn-light\" }, { \"identifier\": \"relearn-dark\" }, { \"auto\": [ \"zen-light\", \"zen-dark\" ], \"identifier\": \"zen-auto\", \"name\": \"Zen Light/Dark\" }, { \"identifier\": \"zen-light\" }, { \"identifier\": \"zen-dark\" }, { \"identifier\": \"neon\" } ] } } Modify Shipped Variants In case you like a shipped variant but only want to tweak some aspects, you have two choices:\nCopy and change\nYou can copy the shipped variant file from the theme’s assets/css directory to the site’s assets/css directory and either store it with the same name or give it a new name. Edit the settings and save the new file. Afterwards you can use it in your hugo.toml by the chosen name.\nCreate and import\nYou can create a new variant file in the site’s assets/css directory and give it a new name. Import the shipped variant, add the settings you want to change and save the new file. Afterwards you can use it in your hugo.toml by the chosen name.\nFor example, you want to use the relearn-light variant but want to change the syntax highlighting schema to the one used in the neon variant. For that, create a new assets/css/theme-my-branding.css in your site’s directory and add the following lines:\n​ assets/css/theme-my-branding.css @import \"theme-relearn-light.css\"; :root { --CODE-theme: neon; /* name of the chroma stylesheet file */ --CODE-BLOCK-color: rgba( 226, 228, 229, 1 ); /* fallback color for code text */ --CODE-BLOCK-BG-color: rgba( 40, 42, 54, 1 ); /* fallback color for code background */ } Afterwards put this in your hugo.toml to use your new variant:\nhugo. toml yaml json [params] themeVariant = 'my-branding' params: themeVariant: my-branding { \"params\": { \"themeVariant\": \"my-branding\" } } In comparison to copy and change, this has the advantage that you profit from any adjustments to the relearn-light variant but keep your modifications.",
    "description": "The Relearn theme provides configuration options to change your site’s colors, favicon and logo. This allows you to easily align your site visuals to your desired style. Most of these options are exposed through so called color variants.",
    "tags": [],
    "title": "Branding",
    "uri": "/hugo-theme-relearn/basics/branding/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "Usage scenarios The theme is usable in different scenarios, requiring the following mandatory settings in your hugo.toml. All settings not mentioned can be set to your liking.\nPublic Web Server from Root hugo. toml yaml json baseURL = 'https://example.com/' baseURL: https://example.com/ { \"baseURL\": \"https://example.com/\" } Public Web Server from Subdirectory hugo. toml yaml json baseURL = 'https://example.com/mysite/' relativeURLs = false baseURL: https://example.com/mysite/ relativeURLs: false { \"baseURL\": \"https://example.com/mysite/\", \"relativeURLs\": false } Private Web Server (LAN) The same settings as with any of the public web server usage scenarios or\nhugo. toml yaml json baseURL = '/' relativeURLs = true baseURL: / relativeURLs: true { \"baseURL\": \"/\", \"relativeURLs\": true } File System hugo. toml yaml json baseURL = '/' relativeURLs = true baseURL: / relativeURLs: true { \"baseURL\": \"/\", \"relativeURLs\": true } Warning Using a baseURL with a subdirectory and relativeURLs=true are mutually exclusive due to the fact, that Hugo does not apply the baseURL correctly.\nIf you need both, you have to generate your site twice but with different settings into separate directories.\nNote Sublemental pages (like sitemap.xml, rss.xml) and generated social media links inside of your pages will always be generated with absolute URLs and will not work if you set relativeURLs=true.\nInfo If you are using uglyURLs=false (Hugo’s default), the theme will append an additional index.html to all page links to make your site be servable from the file system. If you don’t care about the file system and only serve your page via a web server you can generate the links without this:\nhugo. toml yaml json [params] disableExplicitIndexURLs = true params: disableExplicitIndexURLs: true { \"params\": { \"disableExplicitIndexURLs\": true } } Activate search If not already present, add the following lines in your hugo.toml file.\nhugo. toml yaml json [outputs] home = ['html', 'rss', 'search'] outputs: home: - html - rss - search { \"outputs\": { \"home\": [ \"html\", \"rss\", \"search\" ] } } This will generate a search index file at the root of your public folder ready to be consumed by the Lunr search library.\nActivate dedicated search page You can add a dedicated search page for your page by adding the searchpage outputformat to your home page by adding the following lines in your hugo.toml file. This will cause Hugo to generate a new file http://example.com/mysite/search.html.\nhugo. toml yaml json [outputs] home = ['html', 'rss', 'search', 'searchpage'] outputs: home: - html - rss - search - searchpage { \"outputs\": { \"home\": [ \"html\", \"rss\", \"search\", \"searchpage\" ] } } You can access this page by either clicking on the magnifier glass or by typing some search term and pressing ENTER inside of the menu’s search box .\nNote To have Hugo create the dedicated search page successfully, you must not generate the URL http://example.com/mysite/search.html from your own content. This can happen if you set uglyURLs=true in your hugo.toml and defining a Markdown file content/search.md.\nTo make sure, there is no duplicate content for any given URL of your project, run hugo --printPathWarnings.\nActivate print support You can activate print support to add the capability to print whole chapters or even the complete site. Just add the print output format to your home, section and page in your hugo.toml as seen below:\nhugo. toml yaml json [outputs] home = ['html', 'rss', 'print', 'search'] page = ['html', 'rss', 'print'] section = ['html', 'rss', 'print'] outputs: home: - html - rss - print - search page: - html - rss - print section: - html - rss - print { \"outputs\": { \"home\": [ \"html\", \"rss\", \"print\", \"search\" ], \"page\": [ \"html\", \"rss\", \"print\" ], \"section\": [ \"html\", \"rss\", \"print\" ] } } This will add a little printer icon in the top bar. It will switch the page to print preview when clicked. You can then send this page to the printer by using your browser’s usual print functionality.\nNote The resulting URL will not be configured ugly in terms of Hugo’s URL handling even if you’ve set uglyURLs=true in your hugo.toml. This is due to the fact that for one mime type only one suffix can be configured.\nNevertheless, if you’re unhappy with the resulting URLs you can manually redefine outputFormats.print in your own hugo.toml to your liking.\nHome Button Configuration If the disableLandingPageButton option is set to false, a Home button will appear on the left menu. It is an alternative for clicking on the logo. To edit the appearance, you will have to configure the landingPageName for the defined languages:\nhugo. toml yaml json [languages] [languages.en] [languages.en.params] landingPageName = \"\u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Home\" [languages.pir] [languages.pir.params] landingPageName = \"\u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Arrr! Homme\" languages: en: params: landingPageName: \u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Home pir: params: landingPageName: \u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Arrr! Homme { \"languages\": { \"en\": { \"params\": { \"landingPageName\": \"\\u003ci class='fa-fw fas fa-home'\\u003e\\u003c/i\\u003e Home\" } }, \"pir\": { \"params\": { \"landingPageName\": \"\\u003ci class='fa-fw fas fa-home'\\u003e\\u003c/i\\u003e Arrr! Homme\" } } } } If this option is not configured for a specific language, they will get their default values:\n​ toml yaml json landingPageName = \"\u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Home\" landingPageName: \u003ci class='fa-fw fas fa-home'\u003e\u003c/i\u003e Home { \"landingPageName\": \"\\u003ci class='fa-fw fas fa-home'\\u003e\\u003c/i\\u003e Home\" } The home button is going to look like this:\nSocial Media Meta Tags You can add social media meta tags for the Open Graph protocol and Twitter Cards to your site. These are configured as mentioned in the Hugo docs.\nChange the Menu Width The menu width adjusts automatically for different screen sizes.\nName Screen Width Menu Width S \u003c 48rem 14.375rem M 48rem - 60rem 14.375rem L \u003e= 60rem 18.75rem The values for the screen width breakpoints aren’t configurable.\nIf you want to adjust the menu width you can define the following CSS variables in your custom-header.html. Note that --MENU-WIDTH-S applies to the menu flyout width in mobile mode for small screen sizes.\n:root { --MENU-WIDTH-S: 14.375rem; --MENU-WIDTH-M: 14.375rem; --MENU-WIDTH-L: 18.75rem; } Change the Main Area’s Max Width By default the main area width will only grow to a certain extent if more vertical screen space is available. This is done for readability purposes as long line are usually harder to read.\nIf you are unhappy with the default, you can define the following CSS variable in your custom-header.html and set the value to your liking. If you want to use all available space, select a really big value like 1000rem;\n:root { --MAIN-WIDTH-MAX: 80.25rem; } Change Heading Anchor Behavior Each heading may have an anchor link that is displayed when the heading is hovered.\nThe behavior what should happen if the anchor icon is clicked is configurable in your hugo.toml. By default all options are activated. If you deactivate all options, no link will be shown on hover.\nhugo. toml yaml json [params] disableAnchorCopy = false disableAnchorScrolling = false params: disableAnchorCopy: false disableAnchorScrolling: false { \"params\": { \"disableAnchorCopy\": false, \"disableAnchorScrolling\": false } } disableAnchorCopy If set to true, this disables the copying of anchor links to the clipboard.\ndisableAnchorScrolling If set to true, this disables the scrolling to the beginning of the heading when clicked.\nOwn Shortcodes with JavaScript Dependencies Certain shortcodes make use of additional dependencies like JavaScript and CSS files. The theme only loads these dependencies if the shortcode is used. To do so correctly the theme adds management code in various files.\nYou can you use this mechanism in your own shortcodes. Say you want to add a shortcode myshortcode that also requires the jquery JavaScript library.\nWrite the shortcode file layouts/shortcodes/myshortcode.html and add the following line\n​ layouts/shortcodes/myshortcode.html {{- .Page.Store.Set \"hasMyShortcode\" true }} Add the following snippet to your hugo.toml\nhugo. toml yaml json [params] [params.relearn] [params.relearn.dependencies] [params.relearn.dependencies.myshortcode] name = 'MyShortcode' params: relearn: dependencies: myshortcode: name: MyShortcode { \"params\": { \"relearn\": { \"dependencies\": { \"myshortcode\": { \"name\": \"MyShortcode\" } } } } } Add the dependency loader file layouts/partials/dependencies/myshortcode.html. The loader file will be called from multiple locations inside of the theme with the parameter page containing the current page variable and location with one of the currently defined locations\nheader: if called at the end of the HTML head element footer: if called at the end of the HTML body element ​ layouts/partials/dependencies/myshortcode.html {{- if eq .location \"footer\" }} \u003cscript src=\"https://www.unpkg.com/jquery/dist/jquery.js\"\u003e\u003c/script\u003e {{- end }} Character casing is relevant!\nthe name setting in your hugo.toml must match the key (that needs to be prefixed with a has) you used for the store in your layouts/shortcodes/myshortcode.html. the key on params.relearn.dependencies in your hugo.toml must match the base file name of your loader file. See the math, mermaid and openapi shortcodes for examples.\nNote If you are really into customization of the theme and want to use the dependency loader for your own locations, you can do this by simply calling it from inside of your overriden partials\n{{- partial \"dependencies.html\" (dict \"page\" . \"location\" \"mylocation\") }} Output Formats Certain parts of the theme can be changed for support of your own output formats. Eg. if you define a new output format PLAINTEXT in your hugo.toml, you can add a file layouts/partials/header.plaintext.html to change the way, the page header should look like for that output format.\nReact to Variant Switches in JavaScript Once a color variant is fully loaded, either initially or by switching the color variant manually with the variant selector, the custom event themeVariantLoaded on the document will be dispatched. You can add an event listener and react to changes.\ndocument.addEventListener( 'themeVariantLoaded', function( e ){ console.log( e.detail.variant ); // `relearn-light` }); Partials The Relearn theme has been built to be as configurable as possible by defining multiple partials\nIn themes/hugo-theme-relearn/layouts/partials/, you will find all the partials defined for this theme. If you need to overwrite something, don’t change the code directly. Instead follow this page. You’d create a new partial in the layouts/partials folder of your local project. This partial will have the priority.\nThis theme defines the following partials :\nheader.html: the header of the page. See output-formats footer.html: the footer of the page. See output-formats body.html: the body of the page. The body may contain of one or many articles. See output-formats article.html: the output for a single article, can contain elements around your content. See output-formats menu.html: left menu. Not meant to be overwritten search.html: search box. Not meant to be overwritten custom-header.html: custom headers in page. Meant to be overwritten when adding CSS imports. Don’t forget to include style HTML tag directive in your file. custom-footer.html: custom footer in page. Meant to be overwritten when adding JavaScript. Don’t forget to include javascript HTML tag directive in your file. favicon.html: the favicon heading.html: side-wide configuration to change the pages title headings. heading-pre.html: side-wide configuration to prepend to pages title headings. If you override this, it is your responsibility to take the page’s headingPre setting into account. heading-post.html: side-wide configuration to append to pages title headings. If you override this, it is your responsibility to take the page’s headingPost setting into account. logo.html: the logo, on top left hand corner meta.html: HTML meta tags, if you want to change default behavior menu-pre.html: side-wide configuration to prepend to menu items. If you override this, it is your responsibility to take the page’s menuPre setting into account. menu-post.html: side-wide configuration to append to menu items. If you override this, it is your responsibility to take the page’s menuPost setting into account. menu-footer.html: footer of the left menu toc.html: table of contents content.html: the content page itself. This can be overridden if you want to display page’s meta data above or below the content. content-header.html: header above the title, has a default implementation but you can overwrite it if you don’t like it. content-footer.html: footer below the content, has a default implementation but you can overwrite it if you don’t like it.",
    "description": "Usage scenarios The theme is usable in different scenarios, requiring the following mandatory settings in your hugo.toml. All settings not mentioned can be set to your liking.",
    "tags": [],
    "title": "Customization",
    "uri": "/hugo-theme-relearn/basics/customization/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "This interactive tool may help you to generate your own color variant stylesheet.\nShow usage instructions To get started, first select a color variant from the variant selector in the lower left sidebar that fits you best as a starting point.\nThe graph is interactive and reflect the current colors. You can click on any of the colored boxes to adjust the respective color. The graph and the page will update accordingly.\nThe arrowed lines reflect how colors are inherited through different parts of the theme if the descendent isn’t overwritten. If you want to delete a color and let it inherit from its parent, just delete the value from the input field.\nTo better understand this select the neon variant and modify the different heading colors. There, colors for the heading h2, h3 and h4 are explicitly set. h5 is not set and inherits its value from h4. h6 is also not set and inherits its value from h5.\nOnce you’ve changed a color, the variant selector will show a “My custom variant” entry and your changes are stored in the browser. You can browse to other pages and even close the browser without losing your changes.\nOnce you are satisfied, you can download the new variants file and copy it into your site’s assets/css directory. Afterwards you have to adjust the themeVariant parameter in your hugo.toml to your chosen file name.\nEg. if your new variants file is named theme-my-custom-variant.css, you have to set themeVariant='my-custom-variant' to use it.\nSee the docs for further configuration options\nDownload variant Reset variant\nGraph Download variant Reset variant",
    "description": "This interactive tool may help you to generate your own color variant stylesheet.",
    "tags": [],
    "title": "Stylesheet generator",
    "uri": "/hugo-theme-relearn/basics/generator/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "The theme comes with a reasonably configured topbar.\nNevertheless, your requirements may differ from this configuration. Luckily the theme got you covered as the themebar, its buttons and the functionality behind these buttons is fully configurable by you.\nTip All mentioned file names below can be clicked and show you the implementation for a better understanding.\nAreas The default configuration comes with three predefined areas that may contain an arbitrary set of buttons.\nstart: shown between menu and breadcrumb end: shown on the opposite breadcrumb side in comparison to the start area more: shown when pressing the more button in the topbar While you can not add additional areas in the topbar, you are free to configure additional buttons that behave like the more button, providing further user defined areas.\nButtons The theme ships with the following predefined buttons (from left to right in the screenshot)\nsidebar: opens the sidebar flyout if in mobile layout toc: opens the table of contents in an overlay edit: browses to the editable page if the editURL parameter is set print: browses to the chapters printable page if print support was activated prev: browses to the previous page if there is one next: browses to the next page if there is one more: opens the overlay for the more area Not all buttons are displayed at every given time. This is configurable (see below if interested).\nRedefining Areas Each predefined area and button comes in their own file. By that it is easy for you to overwrite an area file in your installation reusing only the buttons you like.\nEg. you can redefine the predefined end area by adding the file layouts/partials/topbar/area/end.html in your installation (not in the theme itself) to remove all but the more button.\nThe below example sets an explicit value for the onempty parameter, overriding the specific default value for this button (these defaults vary depending on the button). The parameter causes the more button to always be displayed instead of hiding once its content is empty.\n{{ partial \"topbar/button/more.html\" (dict \"page\" . \"onempty\" \"disable\" )}} Defining own Buttons Button Types The theme distinguishes between two types of buttons:\nbutton: a clickable button that either browses to another site, triggers a user defined script or opens an overlay containing user defined content area-button: the template for the more button, to define your own area overlay buttons Button Parameter Screen Widths and Actions Depending on the screen width you can configure how the button should behave. Screen width is divided into three classes:\ns: (controlled by the onwidths parameter) mobile layout where the menu sidebar is hidden m: (controlled by the onwidthm parameter) desktop layout with visible sidebar while the content area width still resizes l: (controlled by the onwidthl parameter) desktop layout with visible sidebar once the content area reached its maximum width For each width class, you can configure one of the following actions:\nshow: the button is displayed in its given area hide: the button is removed area-XXX: the button is moved from its given area into the area XXX; eg. this is used to move buttons to the more area overlay in the mobile layout Hiding and Disabling Stuff While hiding a button depending on the screen size can be configured with the above described hide action, you may want to hide the button on certain other conditions as well.\nFor example, the print button in its default configuration should only be displayed if print support was configured. This is done in your button template by checking the conditions first before displaying the button (see layouts/partials/topbar/button/print.html).\nAnother preferred condition for hiding a button is, if the displayed overlay is empty. This is the case for the toc (see layouts/partials/topbar/button/toc.html) as well as the more button (see layouts/partials/topbar/button/more.html) and controlled by the parameter onempty.\nThis parameter can have one of the following values:\ndisable: the button displayed in disabled state if the overlay is empty hide: the button is removed if the overlay is empty If you want to disable a button containing no overlay, this can be achieved by an empty href parameter. An example can be seen in the prev button (see layouts/partials/topbar/button/prev.html) where the URL for the previous site may be empty.\nReference Button Contains the basic button functionality and is used as a base implementation for all other buttons (layouts/partials/topbar/func/button.html).\nCall this from your own button templates if you want to implement a button without an overlay like the print button (layouts/partials/topbar/button/print.html) or with an overlay containing arbitrary content like the toc button (layouts/partials/topbar/button/toc.html).\nFor displaying an area in the button’s overlay, see Area-Button.\nParameter Name Default Notes page \u003cempty\u003e Mandatory reference to the page. class \u003cempty\u003e Mandatory unique class name for this button. Displaying two buttons with the same value for class is undefined. href \u003cempty\u003e Either the destination URL for the button or JavaScript code to be executed on click.\n- if starting with javascript: all following text will be executed in your browser\n- every other string will be interpreted as URL\n- if empty the button will be displayed in disabled state regardless of its content icon \u003cempty\u003e Font Awesome icon name. onempty disable Defines what to do with the button if the content parameter was set but ends up empty:\n- disable: The button is displayed in disabled state.\n- hide: The button is removed. onwidths show The action, that should be executed if the site is displayed in the given width:\n- show: The button is displayed in its given area\n- hide: The button is removed.\n- area-XXX: The button is moved from its given area into the area XXX. onwidthm show See above. onwidthl show See above. hint \u003cempty\u003e Arbitrary text displayed in the tooltip. title \u003cempty\u003e Arbitrary text for the button. content \u003cempty\u003e Arbitrary HTML to put into the content overlay. This parameter may be empty. In this case no overlay will be generated. Area-Button Contains the basic functionality to display area overlay buttons (layouts/partials/topbar/func/area-button.html).\nCall this from your own button templates if you want to implement a button with an area overlay like the more button (layouts/partials/topbar/button/more.html).\nParameter Name Default Notes page \u003cempty\u003e Mandatory reference to the page. area \u003cempty\u003e Mandatory unique area name for this area. Displaying two areas with the same value for area is undefined. icon \u003cempty\u003e Font Awesome icon name. onempty disable Defines what to do with the button if the content overlay is empty:\n- disable: The button is displayed in disabled state.\n- hide: The button is removed. onwidths show The action, that should be executed if the site is displayed in the given width:\n- show: The button is displayed in its given area\n- hide: The button is removed.\n- area-XXX: The button is moved from its given area into the area XXX. onwidthm show See above. onwidthl show See above. hint \u003cempty\u003e Arbitrary text displayed in the tooltip. title \u003cempty\u003e Arbitrary text for the button. Predefined Buttons The predefined buttons by the theme (all other buttons besides the more and toc button in layouts/partials/topbar/button).\nCall these from your own redefined area templates if you want to use default button behavior.\nThe \u003cvarying\u003e parameter values are different for each button and configured for standard behavior as seen on this page.\nParameter Name Default Notes page \u003cempty\u003e Mandatory reference to the page. onwidths \u003cvarying\u003e The action, that should be executed if the site is displayed in the given width:\n- show: The button is displayed in its given area\n- hide: The button is removed.\n- area-XXX: The button is moved from its given area into the area XXX. onwidthm \u003cvarying\u003e See above. onwidthl \u003cvarying\u003e See above. Predefined Overlay-Buttons The predefined buttons by the theme that open an overlay (the more and toc button in layouts/partials/topbar/button).\nCall these from your own redefined area templates if you want to use default button behavior utilizing overlay functionality.\nThe \u003cvarying\u003e parameter values are different for each button and configured for standard behavior as seen on this page.\nParameter Name Default Notes page \u003cempty\u003e Mandatory reference to the page. onempty disable Defines what to do with the button if the content overlay is empty:\n- disable: The button is displayed in disabled state.\n- hide: The button is removed. onwidths \u003cvarying\u003e The action, that should be executed if the site is displayed in the given width:\n- show: The button is displayed in its given area\n- hide: The button is removed.\n- area-XXX: The button is moved from its given area into the area XXX. onwidthm \u003cvarying\u003e See above. onwidthl \u003cvarying\u003e See above.",
    "description": "The theme comes with a reasonably configured topbar.",
    "tags": [],
    "title": "Topbar Modification",
    "uri": "/hugo-theme-relearn/basics/topbar/index.html"
  },
  {
    "breadcrumb": "Basics",
    "content": "Changelog 6.3.0 (2024-09-03) Enhancements [feature] theme: support Obsidian styled alerts #903 [feature] notice: add expander to box title #901 Fixes [bug] children: fix sort parameter #898 [bug] mermaid: classDiagram breaks when using «interface» #895 [bug] toc: don’t show toc button if empty #893 Maintenance [task] mermaid: update to 11.1.0 #904 [task][change] expand: rename open parameter to expanded #902 [task] i18n: update Arabic translation #900 6.2.0 (2024-08-26) Enhancements [feature][change] anchor: add option to scroll into view #886 [feature] theme: support for GitHub styled alerts #885 Fixes [bug] arrownav: avoid rude event handling for form elements #887 Maintenance [task] 404: move styles to separate file #889 6.1.1 (2024-08-02) Fixes [bug] link: link resolving stopped working in certain configurations #882 6.1.0 (2024-08-02) Enhancements [feature][change] assetbuster: use asset buster for all resources #875 [feature] theme: sync to Hugo changes for PublishDate #872 [feature] theme: allow errorlevel override on page level #870 [feature] relref: provide shortcodes to lift certain restrictions #864 [feature] openapi: adjust to Hugo’s build-in link render hook #860 [feature][change] include: adjust to Hugo’s build-in link render hook #859 Fixes [bug] variant: auto variant references potentially wrong chroma style #873 [bug] schema: sync to Hugo changes for LanguageCode #866 [bug] taxonomy: simplify code #852 [bug] alias: index.html has displays error in content #851 Maintenance [task] icon: update Font Awesome to 6.6.0 #881 [task] math: update MathJax to 3.2.2 #880 [task] openapi: update swagger-ui to 5.17.14 #879 [task] mermaid: update to 10.9.1 #878 [task] theme: remove special cases for LanguageCode #861 [task] link: adjust to Hugo’s build-in code #858 [task] image: adjust to Hugo’s build-in code #857 [task] opengraph: sync to Hugo’s implementation #856 [task] i18n: improve file naming #848 6.0.0 (2024-04-27) Enhancements [feature][breaking] theme: unify description #845 [feature] schema: add schema support in meta data #844 [feature] include: use Hugo’s resources #835 [feature] math: allow to work with Hugo’s passthrough configuration #832 [feature] i18n: add Romanian translation #828 [feature][breaking] menu: remove menuTitle frontmatter #714 [feature][breaking] theme: end support for Internet Explorer 11 #584 Fixes [bug] frontmatter: move frontmatter config for exampleSite out of root #843 [bug] images: color outline using primary color #838 [bug][breaking] variant: avoid Hugo permission errors on build #831 [bug] theme: unwanted paragraph break with AsciiDoc #829 Maintenance [task][breaking] swagger: remove shortcode #847 [task][breaking] search: remove JSON outputformat for search index #846 [task] theme: sync to Hugo’s implementation #841 [task][change] fontawesome: update to 6.5.2 #834 5.27.0 (2024-04-07) Enhancements [feature] theme: simplify title generation #825 [feature] theme: adjust to Hugo’s build-in code #824 [feature][change] link: warn if fragment is not found #823 [feature] theme: add styling for selected HTML elements #822 [feature] a11y: improve search box #821 [feature][change] dependencies: make loader more versatile #820 [feature] nav: scroll to prev/next heading using keyboard shortcut #819 [feature] breadcrumb: use .LinkTitle instead of .Title if available #816 Fixes [bug] scrollbar: scroll bar in side menu gets stuck in dragged state on mobile #808 5.26.2 (2024-03-18) Enhancements [feature] icons: use fixed width to ease layout #812 Fixes [bug] search: broken since version 5.26.1 #813 [bug] search: fix result links for pages in root #810 5.26.1 (2024-03-17) Fixes [bug] mermaid: show reset button after pan #807 [bug] openapi: make it run for file:// protocol #806 [bug] theme: fix relative path detection if relativeURLs=false #804 5.26.0 (2024-03-16) Enhancements [feature] image: add lazy loading image effect option #803 [feature] render-hook: support Markdown attributes #795 [feature] theme: support full page width #752 Fixes [bug] clipboard: fix broken style if block code is in table #790 [bug] nav: browser back navigation does not jump to the correct position #509 Maintenance [task] build: update all available actions to nodejs 20 #802 [task] openapi: update swagger-ui to 5.11.10 #798 [task] mermaid: update to 10.9.0 #797 5.25.0 (2024-02-29) Enhancements [feature][change] theme: print out GitInfo in page footer if configured #786 [feature][change] resources: new shortcode to deprecate attachments shortcode #22 Fixes [bug] swagger: fix compat warning #787 5.24.3 (2024-02-28) Fixes [bug] theme: avoid crash on 404 if author settings want to warn #785 5.24.2 (2024-02-24) Enhancements [feature] image: adjust to Hugo 0.123 #777 Fixes [bug] link: resolve fragments #775 5.24.1 (2024-02-18) Enhancements [feature] link: make resolution reporting configurable #774 5.24.0 (2024-02-17) Enhancements [feature] theme: compatibility with Hugo 0.123 #771 [feature] topbar: support editURL in frontmatter #764 [feature] menu: use –MENU-WIDTH-S to adjust mobile flyout #761 [feature] figure: support built-in shortcode #746 [feature] theme: make heading a template #744 [feature] taxonomy: make arrow nav browse through terms #742 [feature] theme: switch from config.toml to hugo.toml #741 [feature] button: make non-interactive if used as mock #740 [feature][change] topbar: allow text for button #739 [feature] theme: run hugo demo site without warning #736 [feature] menu: make swipe handler passive #735 [feature] i18n: support standard Hugo options #733 [feature] a11y: show tab focus on images #730 [feature] a11y: improve discovering links on keyboard navigation #726 [feature][change] variant: increase contrast for light themes #722 [feature] theme: break build if minimum Hugo version is not matched #719 [feature] taxonomy: humanize term on missing term title #713 Fixes [bug] taxonomy: display translated title #772 [bug] highlight: fix codefence syntax in Hugo \u003e= 0.121.0 #749 [bug] link: fix links to pages containing dots in their name #748 [bug] image: get resource images if link is prefixed with ./ #747 [bug] theme: switch dependency colors on OS color scheme change #745 [bug] clipboard: fix O(n²) buttons #738 [bug] button: fix whitespacing in FF #737 [bug] i18n: fix warning messages for zh-CN #732 [bug] mermaid: fix zoom button #725 [bug] theme: fix JS errors on hugo --minifiy #724 [bug] include: fix whitespacing in codefences #723 5.23.2 (2023-11-03) Enhancements [feature] taxonomy: improve taxonomy page #712 [feature] taxonomy: warn on missing term title #709 Fixes [bug] taxonomy: fix sorting of terms on content pages #710 5.23.1 (2023-10-30) Enhancements [feature] taxonomy: improve term page #705 Fixes [bug] variant: fix typo in chroma-learn.css #708 [bug] links: ignore local markdown links linking to files with extension #707 5.23.0 (2023-10-29) Enhancements [feature] taxonomy: allow for content on term pages #701 [feature] theme: write full file path on warnings #699 [feature] theme: show anchor link and copy to clipboard button on mobile #697 [feature][change] config: adjust to changes in Hugo 0.120 #693 [feature] variants: add more contrast to neon #692 [feature] mermaid: only show zoom reset button if zoomed #691 [feature] menu: add additional sort options #684 [feature] theme: add social media meta information #683 [feature] theme: simplify additional JS dependencies #682 [feature] links: warn if ref/relref is used falsly #681 [feature] menu: make width configurable #677 [feature] tabs: use color for link of inactive tabs #675 [feature] taxonomy: modularize term list generation #671 [feature] theme: remove warnings with hugo --printI18nWarnings #670 [feature] theme: implement portable linking #377 Fixes [bug] links: extra space before link text #700 [bug] mermaid: reset zoom correctly #690 [bug] theme: fix mobile layout for width=48rem #676 [bug] frontmatter: resemble documented shortcode style #672 [bug] taxonomy: display terms in pages if removePathAccents=true #669 Maintenance [task] mermaid: update mermaid to 10.6.0 #703 [task] openapi: update swagger-ui to 5.9.1 #702 5.22.1 (2023-10-02) Enhancements [feature] i18n: add Swahili translation #666 [feature] math: hide unrendered math #663 [feature] tabs: improve a11y by removing duplicate hidden title #662 [feature] mermaid: improve zoom UX #659 Fixes [bug] variant: fix sidebar-flyout borders color for zen #667 [bug] clipboard: fix RTL location of tooltip #661 [bug] clipboard: ignore RTL for code #660 [bug] expand: fix aria-controls #658 [bug] theme: fix id generation for markdownified titles #657 [bug] mermaid: avoid graph bombing on hugo –minify #656 [bug] mermaid: fix width for some graphs #655 5.22.0 (2023-09-26) Enhancements [feature] mermaid: add pan\u0026zoom reset #651 [feature] markdown: add interlace color for tables #648 [feature] search: add breadcrumb to dedicated search results #647 [feature][change] menu: optionally disable index pages for sections #642 Fixes [bug] variants: restore generator zoom #650 [bug] clipboard: malused Fontawesome style #649 [bug][change] theme: avoid id collisions between headings and theme #646 [bug] theme: remove HTML validation errors #644 [bug] breadcrumb: remove superflous whitespace between items #643 5.21.0 (2023-09-18) Enhancements [feature] topbar: make buttons configurable #639 [feature][change] menu: fix footer padding #637 Fixes [bug] breadcrumb: don’t ignore spaces for separator #636 [bug] theme: fix snyk code issues #633 [bug] images: apply image effects to lightbox images #631 Maintenance [task] openapi: update to swagger 5.7.2 #641 5.20.0 (2023-08-26) Enhancements [feature][change] theme: support for colored borders between menu and content #626 [feature] image: allow option to apply image effects globally #623 [feature][change] openapi: switch to light syntaxhighlighting where applicable #621 [feature] images: document usage of images with links #576 Fixes [bug] highlight: fix rendering for Hugo \u003c 0.111 #630 [bug] search: remove link underline on dedicated search page #627 [bug] highlight: don’t switch to block view if hl_inline=true #618 [bug] variant: minor adjustments to zen variants #617 [bug] mermaid: lazy render graph if it is initially hidden #187 Maintenance [task] openapi: update to swagger 5.4.1 #620 5.19.0 (2023-08-12) Enhancements [feature] highlight: add title parameter #616 [feature] variant: signal variant switch as event #614 [feature] variant: add zen variant in light and dark #613 [feature] i18n: add Hungarian translation #604 [feature] mermaid: update to 10.3.0 #601 Fixes [bug] siteparam: avoid halt if param is a map/slice #611 [bug] mermaid: fix broken zoom since update to v10 #608 [bug] mermaid: variant generator diagram does not respond to events #607 [bug] print: avoid chroma leak for relearn-dark #605 Maintenance [task] mermaid: update to 10.3.1 #610 5.18.0 (2023-07-27) Enhancements [feature][change] shortcodes: add more deprecation warnings #598 [feature][change] shortcodes: change context parameter to page if called as partial #595 [feature] siteparam: support nested parameters and text formatting #590 [feature][change] a11y: improve when tabbing through links #581 Fixes [bug] openapi: inherit RTL setting from Hugo content #600 [bug] 404: fix display in RTL #597 [bug] highlight: fix position of copy-to-clipboard button in RTL #594 [bug] openapi: fix spelling #593 [bug] search: fix typo in output format #591 [bug] tabs: fix tab selection by groupid #582 [bug] theme: restore compat with Hugo 0.95.0 #580 [bug][change] theme: improve display of links #577 5.17.1 (2023-06-22) Enhancements [feature][change] highlight: make copy to clipboard appear on hover #574 5.17.0 (2023-06-22) Enhancements [feature] highlight: add configurable line breaks #169 Fixes [bug] theme: support Hugo 0.114.0 #573 [bug] taxonomy: fix number tags #570 [bug] highlight: improve copy to clipboard #569 5.16.2 (2023-06-10) Enhancements [feature] theme: revamp 404 page #566 5.16.1 (2023-06-09) Enhancements [feature] theme: add deprecation warnings #565 Fixes [bug] mermaid: allow for YAML frontmatter inside of graph #564 [bug] alias: fix redirect URLs in case of empty BaseURL #562 5.16.0 (2023-06-08) Enhancements [feature] tabs: add title and icon option #552 [feature] shortcodes: add style option to mimic code box color scheme #551 [feature] tabs: support color options #550 [feature] favicon: add light \u0026 dark option for OS’s preferred color scheme #549 Fixes [bug] icon: remove whitespace on start #560 [bug] shortcodes: avoid superflous margin at start and end of content #558 [bug] expand: fix html encoding of finishing content tag #557 [bug] icon: fix ouput “raw HTML omitted” with goldmark config unsafe=false #555 5.15.2 (2023-05-29) Enhancements [feature] taxonomy: add support for category default taxonomy #541 Fixes [bug] attachments: work for Hugo \u003c 0.112 #546 5.15.1 (2023-05-25) Fixes [bug] shortcodes: intermediately use random ids instead of .Ordinal #543 5.15.0 (2023-05-25) Enhancements [feature] tab: new shortcode to display single tab #538 [feature][change] tabs: treat groupid as unique if not set #537 [feature] expand: indent expanded content #536 [feature] notice: make boxes more prominent #535 Fixes [bug] attachments: fix build error since Hugo 0.112 #540 Maintenance [task] chore: update Mermaid to 9.4.3 #534 [task] mermaid: update to 10.2.0 #499 5.14.3 (2023-05-20) Fixes [bug] tags: show taxonomy toc for standard installation #533 5.14.2 (2023-05-20) Fixes [bug] tags: translate breadcrumb and title for taxonomy #532 5.14.1 (2023-05-20) No changelog for this release.\n5.14.0 (2023-05-19) Enhancements [feature] tags: improve search index for tags #531 [feature] tags: increase readability of taxonomy pages #530 [feature] nav: make breadcrumb separator configurable #529 [feature] i18n: add translation for default taxonomies #528 [feature] theme: set appropriate defaults for all theme specific params #516 [feature] theme: allow to display tags below article #513 Fixes [bug] shortcode: make .context always a page #527 5.13.2 (2023-05-17) Fixes [bug] print: enable print for pages with _build options #522 5.13.1 (2023-05-16) Fixes [bug] openapi: allow toc to scroll page #526 5.13.0 (2023-05-14) Enhancements [feature][change] openapi: replace implementation with swagger-ui #523 Fixes [bug] variant: avoid leaking shadows in neon print style #524 5.12.6 (2023-05-04) Enhancements [feature] theme: better HTML titles and breadcrumbs for search and tag pages #521 Fixes [bug] menu: avoid hiding of expander on hover when active item has children #520 [bug] menu: showVisitedLinks not working for some theme variants #518 [bug] theme: fix resource URLs for 404 page on subdirectories #515 5.12.5 (2023-03-28) Fixes [bug] expand: not properly exanded when used in bullet point list #508 5.12.4 (2023-03-24) Fixes [bug] theme: disableExplicitIndexURLs param is not working as expected #505 5.12.3 (2023-03-14) Fixes [bug] attachments: fix links if only one language is present #503 [bug] shortcodes: allow markdown for title and content #502 5.12.2 (2023-03-03) Fixes [bug] menu: fix state for alwaysopen=false + collapsibleMenu=false #498 5.12.1 (2023-02-26) Enhancements [feature] variant: add relearn bright theme #493 Fixes [bug] generator: fix setting of colors #494 5.12.0 (2023-02-24) Enhancements [feature] frontmatter: support VSCode Front Matter extension #481 [feature] theme: make expand and image ids stable #477 [feature] variant: set scrollbar color to dark for dark variants #471 [feature] i18n: add full RTL support #470 [feature] piratify: fix some quirks, arrr #469 [feature][change] theme: optimization for huge screen sizes #466 Fixes [bug] i18n: write code ltr even for rtl languages #492 [bug] anchor: fix link in FF when served from file system #482 [bug] shortcodes: don’t break build and render for invalid parameters #480 [bug] nav: restore scroll position on browser back #476 [bug] variant: avoid style leak for auto style #473 Maintenance [task] build: add imagebot #485 5.11.2 (2023-02-07) Fixes [bug] tabs: nested tabs content is not displayed #468 5.11.1 (2023-02-06) Fixes [bug] variant: include missing theme-auto.css in distribution #467 5.11.0 (2023-02-05) Enhancements [feature] i18n: add Czech translation #455 [feature][change] lightbox: switch to CSS-only solution #451 [feature][change] variant: add support for prefers-color-scheme #445 [feature][change] expand: refactor for a11y #339 [feature][change] mermaid: make zoom configurable #144 Fixes [bug] swagger: avoid errors when using invalid rapi-doc fragment ids #465 [bug] search: fix oddities in keyboard handling #463 [bug] badge: fix text color for IE11 #462 [bug] mermaid: rerender graph if search term is present and variant is switched #460 [bug] tags: show tag on pages when tag has space #459 [bug] edit: remove double slash on root page link #450 Maintenance [task] build: add moving version tags #453 [task][change] theme: remove jQuery #452 [task] build: check for release notes before release #448 5.10.2 (2023-01-25) Fixes [bug] nav: fix breadcrumb for huge installations #446 5.10.1 (2023-01-25) Fixes [bug] print: fix image links with relative path #444 5.10.0 (2023-01-25) Enhancements [feature] shortcodes: support for accent color #440 [feature] shortcodes: add color parameter where applicable #438 [feature] theme: announce translations as alternate links #422 Fixes [bug] nav: fix breadcrumbs for deeply nested sections #442 [bug] theme: improve whitespacing in tables #441 5.9.4 (2023-01-23) Fixes [bug] variant: fix search icon and text color #437 5.9.3 (2023-01-22) Fixes [bug] nav: fix left/right navigation for horizontal scrolling #435 [bug][breaking] theme: allow pages on top level #434 Maintenance [task] build: switch to wildcard version of actions #428 5.9.2 (2022-12-30) Fixes [bug] search: apply dependency scripts for Hindi and Japanese #427 5.9.1 (2022-12-23) Enhancements [feature] theme: make external link target configurable #426 5.9.0 (2022-12-23) Enhancements [feature][change] theme: open external links in separate tab #419 [feature] theme: make it a Hugo module #417 Fixes [bug][change] attachments: fix incorrect links for defaultContentLanguageInSubdir=true #425 5.8.1 (2022-12-11) Fixes [bug] theme: fix alias for home page if defaultContentLanguageInSubdir=true #414 5.8.0 (2022-12-08) Enhancements [feature] icon: add new shortcode #412 [feature] theme: style and document markdown extensions #411 [feature] badge: add new shortcode #410 [feature] theme: add accent color #409 Fixes [bug] theme: fix spacing for tag flyout in FF #413 5.7.0 (2022-11-29) Enhancements [feature] button: refactor for a11y #372 Fixes [bug] search: don’t freeze browser on long search terms #408 [bug] search: fix searchbox placeholder color in FF and IE #405 [bug][change] i18n: rename Korean translation from country to lang code #404 Maintenance [task] search: update lunr languages to 1.10.0 #403 5.6.6 (2022-11-23) Enhancements [feature] search: make build and js forgiving against config errors #400 Fixes [bug] variant: minor color adjustments #402 [bug] variant: fix generator for use of neon #401 5.6.5 (2022-11-19) Fixes [bug] menu: relax usage of background color #399 5.6.4 (2022-11-19) Fixes [bug] theme: make alias pages usable by file:// protocol #398 5.6.3 (2022-11-19) Fixes [bug] theme: be compatible with Hugo \u003e= 0.95.0 #397 5.6.2 (2022-11-19) Fixes [bug] theme: build breaks sites without “output” section in config #396 5.6.1 (2022-11-19) Fixes [bug] theme: fix image distortion #395 5.6.0 (2022-11-18) Enhancements [feature] toc: improve keyboard handling #390 [feature] search: improve keyboard handling #387 [feature] search: add dedicated search page #386 [feature] theme: make creation of generator meta tag configurable #383 [feature] theme: increase build performance #380 Fixes [bug] mermaid: avoid leading whitespace #394 [bug] theme: fix build errors when referencing SVGs in markdown #393 [bug] variant: avoid neon to leak into IE11 fallback #392 [bug] theme: fix urls for file:// protocol in sitemap #385 [bug] theme: add id to h1 elements #384 [bug] rss: fix display of hidden subpages #382 [bug] nav: fix key navigation when pressing wrong modifiers #379 Maintenance [task] mermaid: update to version 9.2.2 #391 5.5.3 (2022-11-10) Fixes [bug] tags: fix non-latin tag display on pages #378 5.5.2 (2022-11-08) Fixes [bug] theme: fix typo in 404.html #376 [bug] theme: allow menu items and children to be served by file:// protocol #375 5.5.1 (2022-11-07) Fixes [bug] theme: fix overflowing issue with anchors and tooltips #364 5.5.0 (2022-11-06) Enhancements [feature][change] theme: optimize page load for images #304 Fixes [bug] theme: fix context in render hooks #373 [bug] print: make canonical URL absolute #371 5.4.3 (2022-11-05) Enhancements [feature] history: refactor for a11y #341 Fixes [bug] theme: fix multilang links when site served from subdirectory #370 5.4.2 (2022-11-05) Maintenance [task] build: change set-output to env vars #348 5.4.1 (2022-11-05) Fixes [bug] mermaid: fix Gantt chart width #365 5.4.0 (2022-11-01) Enhancements [feature] math: allow passing of parameters with codefence syntax #363 [feature] i18n: add Finnish translation #361 [feature] mermaid: allow passing of parameters with codefence syntax #360 [feature] i18n: support RTL #357 [feature][change] button: add option for target #351 [feature][change] theme: allow to be served by file:// protocol #349 5.3.3 (2022-10-09) Fixes [bug] archetypes: fix frontmatter on home.md template #346 5.3.2 (2022-10-08) Fixes [bug] nav: change defunct keyboard shortcuts #344 5.3.1 (2022-10-08) Enhancements [feature] i18n: update Spanish translation #343 [feature] theme: option to align images #327 5.3.0 (2022-10-07) Enhancements [feature] expander: improve whitespace between label and content #338 [feature] swagger: improve print version #333 Fixes [bug] print: fix links of subsections #340 [bug] theme: remove W3C validator errors #337 [bug] children: remove unused page parameter from docs #336 [bug] print: remove menu placeholder in Firefox #335 [bug] swagger: fix download button overflow #334 [bug][change] a11y: remove WCAG errors where applicable #307 5.2.4 (2022-10-02) Fixes [bug] theme: remove HTML5 validator errors #329 5.2.3 (2022-09-12) Fixes [bug] print: chapter pages overwrite font-size #328 5.2.2 (2022-08-23) Fixes [bug] print: fix urls for uglyURLs=true #322 5.2.1 (2022-08-05) Enhancements [feature] i18n: improve Japanese translation #318 Fixes [bug] nav: prev/next ignores ordersectionby #320 Maintenance [task] task: bump Hugo minimum requirement to 0.95 #319 5.2.0 (2022-08-03) Enhancements [feature][change] menu: expand collapsed menus if search term is found in submenus #312 Fixes [bug] print: switch mermaid and swagger style before print #316 [bug] theme: fix chapter margins on big screens #315 5.1.2 (2022-07-18) Fixes [bug] print: reset mermaid theme to light #313 [bug] mermaid: header is showing up in FF #311 5.1.1 (2022-07-15) Fixes [bug] tags: don’t count tags if page is hidden #310 5.1.0 (2022-07-15) Enhancements [feature][change] print: make print url deterministic #309 [feature] theme: allow overriding partials for output formats #308 5.0.3 (2022-07-07) Fixes [bug] ie11: no styles after rework of archetypes #306 5.0.2 (2022-07-07) Fixes [bug] theme: load CSS if JS is disabled #305 5.0.1 (2022-07-07) Enhancements [feature][breaking] theme: optimize loading of js and css #303 5.0.0 (2022-07-05) Enhancements [feature][change] archetypes: modularize rendering #300 [feature] history: don’t reload page when history gets cleared #299 [feature] menu: replace expander by fontawesome chevrons #296 [feature] theme: align content with topbar icon limits #290 [feature] button: allow for empty href #288 [feature] i18n: make Simplified Chinese the standard language for the zn code #287 [feature] clipboard: move head styles to stylesheet #286 [feature] math: add mathjax rendering #235 [feature] theme: allow for page heading modification #139 Fixes [bug] favicon: fix URL if site resides in subfolder #302 [bug] code: show copy-to-clipboard marker for blocklevel code #298 [bug] menu: make active expander visible on hover #297 [bug] print: disable arrow navigation #294 [bug] print: add missing page break after index or section #292 [bug] theme: use more space on wide screens #291 [bug] theme: fix size of chapter heading #289 Maintenance [task] chore: update RapiDoc 9.3.3 #301 [task] chore: update Mermaid 9.1.3 #293 4.2.5 (2022-06-23) Fixes [bug] swagger: javascript code does not load in documentation #285 [bug] children: descriptions not working #284 [bug] print: fix empty page for shortcut links #283 4.2.4 (2022-06-23) Fixes [bug] theme: fix url for logo and home button #282 4.2.3 (2022-06-23) Fixes [bug][breaking] include: second parameter is ignored #281 4.2.2 (2022-06-23) No changelog for this release.\n4.2.1 (2022-06-23) No changelog for this release.\n4.2.0 (2022-06-23) Enhancements [feature][change] tabs: don’t change tab selection if panel does not contain item #279 [feature] shortcodes: convert to partials #277 Fixes [bug] swagger: avoid builtin syntaxhighlighting #280 [bug] search: fix console message for missing lunr translations #278 [bug] tabs: fix wrapping when having many tabs #272 4.1.1 (2022-06-18) Fixes [bug] notice: fix layout when content starts with heading #275 4.1.0 (2022-06-12) Enhancements [feature] i18n: support multilang content #271 4.0.5 (2022-06-12) Fixes [bug] i18n: Vietnamese language with wrong lang code #270 [bug] i18n: fix search for non western languages #269 4.0.4 (2022-06-07) Enhancements [feature] theme: improve keyboard navigation for scrolling #268 Fixes [bug] swagger: adjust font-size for method buttons #267 [bug] menu: hide expander when only hidden subpages #264 [bug] theme: make compatible with Hugo 0.100.0 #263 Maintenance [task] swagger: update rapidoc to 9.3.2 #266 [task] mermaid: update to 9.1.1 #265 4.0.3 (2022-06-05) Enhancements [feature] toc: add scrollbar #262 4.0.2 (2022-06-05) Fixes [bug] theme: let browser scroll page on CTRL+f #242 4.0.1 (2022-06-05) No changelog for this release.\n4.0.0 (2022-06-05) Enhancements [feature] shortcodes: add named parameter if missing #260 [feature][breaking] theme: remove –MAIN-ANCHOR-color from stylesheet #256 [feature] i18n: add Italian translation #254 [feature] attachments: support for brand colors #252 [feature] notice: support for brand colors #251 [feature][breaking] config: remove custom_css #248 [feature] theme: use proper file extension for page-meta.go #246 [feature] variant: add support for brand color variables #239 [feature] i18n: add Polish translation #237 Fixes [bug] shortcodes: accept boolean parameters if given as string #261 [bug] print: adjust button and tab size #259 [bug] print: show Mermaid if requested in frontmatter #255 [bug] theme: adjust thin scrollbar slider #244 [bug] mobile: fix broken scrollbar #243 [bug] theme: fix display of tooltip for heading anchor #241 3.4.1 (2022-04-03) Fixes [bug] theme: fix IE11 incompatibilities #234 3.4.0 (2022-04-03) Enhancements [feature] i18n: add Traditional Chinese translation #233 [feature] menu: expand/collapse menu items without navigation #231 [feature] print: add option to print whole chapter #230 [feature][breaking] theme: apply user supplied content footer below content #229 Fixes [bug] theme: scroll to heading on initial load #232 3.3.0 (2022-03-28) Enhancements [feature] theme: add CSS font variables #227 [feature] swagger: add support for oas/swagger documentation #226 Fixes [bug] variant: make variant switch work on slow networks #228 3.2.1 (2022-03-25) Fixes [bug] print: fix minor inconsistencies #225 [bug] print: show more than just the title page #224 [bug] theme: align content scrollbar to the right on big screens #223 3.2.0 (2022-03-19) Enhancements [feature][change] mermaid: support differing themes for color variant switch #219 [feature] mermaid: load javascript on demand #218 Maintenance [task] mermaid: update to 8.14.0 #220 3.1.1 (2022-03-16) Enhancements [feature] i18n: add Korean translation #217 3.1.0 (2022-03-15) Enhancements [feature] notice: add icon parameter #212 [feature] mobile: remove breadcrumb ellipsis #211 Fixes [bug] theme: make storage of multiple Hugo sites on same server distinct #214 [bug] variant: switch breadcrumb color in Chrome #213 [bug] mobile: improve behavior of sidebar menu #210 3.0.4 (2022-02-24) Enhancements [feature] theme: improve font loading #201 [feature][change] variant: fix inconsistent color variable naming #200 Fixes [bug] variant: fix occasional fail when resetting generator #208 [bug] docs: don’t move header on logo hover in IE11 #207 [bug] variant: avoid flash of menu header when non default variant is active #206 [bug] theme: fix wrong HTML closing tag order in chapters #205 [bug] theme: adjust breadcrumb and title for empty home page titles #202 3.0.3 (2022-02-23) Enhancements [feature] tags: show tag count in taxonomy list #195 Fixes [bug] theme: remove Hugo build warning if page is not file based #197 [bug] tags: adhere to titleSeparator #196 [bug] theme: hide footer divider and variant selector in IE11 #194 3.0.2 (2022-02-23) Enhancements [feature] tags: sort by name #193 3.0.1 (2022-02-23) Enhancements [feature] children: set containerstyle automatically according to style #192 Fixes [bug] theme: revert fontawsome to version 5 for IE11 compat #191 3.0.0 (2022-02-22) Enhancements [feature] variant: build a variant generator #188 [feature] nav: only show toc if the page has headings #182 [feature][breaking] theme: change default colors to Relearn defaults #181 [feature] variant: add a variant selector #178 [feature][breaking] menu: rework footer UX #177 [feature] theme: support for dark mode #175 [feature] docs: use light syntax highlighting theme #174 [feature] notice: tweak dull colors #173 [feature] theme: rework header UX #151 Fixes [bug] search: remove additional X in filled out search box in IE11 #190 [bug] clipboard: localize tooltips #186 [bug] print: hide sidebar on Mac #183 [bug] menu: fix scrollbar height #180 [bug][change] search: fix color change for icons on hover #176 2.9.6 (2022-02-07) Fixes [bug] menu: remove debug output #171 2.9.5 (2022-02-07) Fixes [bug] menu: let arrow navigation respect ordersectionsby configuration #170 2.9.4 (2022-02-06) Fixes [bug] exampleSite: fix links in official documentation #168 2.9.3 (2022-02-06) Fixes [bug] menu: invalid URL when the shortcut is an internal link #163 2.9.2 (2021-11-26) Enhancements [feature] theme: add theme version info to head #158 Fixes [bug] theme: fix selection of *.ico files as favicons #160 2.9.1 (2021-11-22) Fixes [bug] menu: fix significantly low performance for collecting of meta info #157 2.9.0 (2021-11-19) Fixes [bug][breaking] relref: fix inconsistent behavior #156 [bug] search: make dropdown stick to search field when scrolling #155 [bug] menu: align long text properly #154 [bug] copyToClipBoard: add missing right border for inline code if disableInlineCopyToClipBoard=true #153 [bug] menu: show hidden sibling pages reliably #152 [bug] menu: bring active item in sight for large menus #149 2.8.3 (2021-11-09) Fixes [bug] mermaid: let zoom reset to initial size #145 [bug] mermaid: remove whitespace from big graphs #143 2.8.2 (2021-11-08) Fixes [bug] mermaid: always load javascript to avoid break if code fences are used #142 2.8.1 (2021-11-04) Fixes [bug] search: don’t break JS in multilang setup if search is disabled #140 2.8.0 (2021-11-03) Enhancements [feature] toc: make disableTOC globally available via config.toml #133 [feature] mermaid: only load javascript if necessary #95 [feature][change] theme: switch font #83 [feature] theme: make favicon configurable #2 Fixes [bug] mermaid: assert that window.mermaid is actually mermaid #136 [bug] menu: remove usage of Hugo’s UniqueID #131 [bug] theme: reduce margin for children shortcode #130 [bug] theme: left-align h3 in chapters #129 [bug] theme: align copy link to clipboard #128 2.7.0 (2021-10-24) Enhancements [feature] notice: support custom titles #124 2.6.0 (2021-10-21) Fixes [bug] theme: generate correct links if theme served from subdirectory #120 2.5.1 (2021-10-12) Fixes [bug] security: fix XSS for malicious image URLs #117 2.5.0 (2021-10-08) Enhancements [feature][change] syntax highlight: provide default colors for unknown languages #113 Fixes [bug] security: fix XSS for malicious URLs #114 [bug] menu: write correct local shortcut links #112 2.4.1 (2021-10-07) Fixes [bug] theme: remove runtime styles from print #111 2.4.0 (2021-10-07) Enhancements [feature] lang: add vietnamese translation #109 [feature][change] theme: simplify stylesheet for color variants #107 [feature] hidden pages: remove from RSS feed, JSON, taxonomy etc #102 [feature] theme: announce alternative content in header #101 [feature] menu: frontmatter option to change sort predicate #98 [feature] menu: add default setting for menu expansion #97 [feature] theme: improve print style #93 [feature] theme: improve style #92 Fixes [bug] include: don’t generate additional HTML if file should be displayed “as is” #110 [bug] attachments: fix broken links if multilang config is used #105 [bug] theme: fix sticky header to remove horizontal scrollbar #82 Maintenance [task] chore: update fontawesome #94 2.3.2 (2021-09-20) Fixes [bug] docs: rename history pirate translation #91 2.3.1 (2021-09-20) Fixes [bug] docs: rename english pirate translation to avoid crash on rendering #90 2.3.0 (2021-09-13) Fixes [bug] theme: fix usage of section element #88 Maintenance [task] theme: ensure IE11 compatibility #89 [task] docs: Arrr! showcase multilang featurrre #87 2.2.0 (2021-09-09) Enhancements [feature] sitemap: hide hidden pages from sitemap and SEO indexing #85 Fixes [bug] theme: fix showVisitedLinks in case Hugo is configured to modify relative URLs #86 Maintenance [task] theme: switch from data-vocabulary to schema #84 2.1.0 (2021-09-07) Enhancements [feature] search: open expand if it contains search term #80 [feature] menu: scroll active item into view #79 [feature] search: disable search in hidden pages #76 [feature] search: improve readability of index.json #75 [feature] search: increase performance #74 [feature] search: improve search context preview #73 Fixes [bug][change] search: hide non-site content #81 [bug] menu: always hide hidden sub pages #77 2.0.0 (2021-08-28) Enhancements [feature] tabs: enhance styling #65 [feature] theme: improve readability #64 [feature] menu: show hidden pages if accessed directly #60 [feature][change] theme: treat pages without title as hidden #59 [feature] search: show search results if field gains focus #58 [feature] theme: add partial templates for pre/post menu entries #56 [feature] theme: make chapter archetype more readable #55 [feature] children: add parameter for container style #53 [feature] theme: make content a template #50 [feature] menu: control menu expansion with alwaysopen parameter #49 [feature] include: new shortcode to include other files #43 [feature] theme: adjust print styles #35 [feature][change] code highlighter: switch to standard hugo highlighter #32 Fixes [bug][change] arrow-nav: default sorting ignores ordersectionsby #63 [bug][change] children: default sorting ignores ordersectionsby #62 [bug][change] arrow-nav: fix broken links on (and below) hidden pages #61 [bug] theme: remove superfluous singular taxonomy from taxonomy title #46 [bug][change] theme: missing –MENU-HOME-LINK-HOVER-color in documentation #45 [bug] theme: fix home link when base URL has some path #44 Maintenance [task] docs: include changelog in exampleSite #33 1.2.0 (2021-07-26) Enhancements [feature] theme: adjust copy-to-clipboard #29 [feature] attachments: adjust style between notice boxes and attachments #28 [feature] theme: adjust blockquote contrast #27 [feature] expand: add option to open on page load #25 [feature] expand: rework styling #24 [feature] attachments: sort output #23 [feature] notice: make restyling of notice boxes more robust #20 [feature] notice: fix contrast issues #19 [feature] notice: align box colors to common standards #18 [feature] notice: use distinct icons for notice box type #17 Fixes [bug] attachments: support i18n for attachment size #21 [bug] notice: support i18n for box labels #16 [bug] notice: support multiple blocks in one box #15 Maintenance [task] dependency: upgrade jquery to 3.6.0 #30 1.1.1 (2021-07-04) Maintenance [task] theme: prepare for new hugo theme registration #13 1.1.0 (2021-07-02) Enhancements [feature] mermaid: expose options in config.toml #4 Fixes [bug] mermaid: config option for CDN url not used #12 [bug] mermaid: only highlight text in HTML elements #10 [bug] mermaid: support pan \u0026 zoom for graphs #9 [bug] mermaid: code fences not always rendered #6 [bug] mermaid: search term on load may bomb chart #5 Maintenance [task] mermaid: update to 8.10.2 #7 1.0.1 (2021-07-01) Maintenance [task] Prepare for hugo showcase #3 1.0.0 (2021-07-01) Maintenance [task] Fork project #1",
    "description": "Changelog 6.3.0 (2024-09-03) Enhancements [feature] theme: support Obsidian styled alerts #903 [feature] notice: add expander to box title #901 Fixes [bug] children: fix sort parameter #898 [bug] mermaid: classDiagram breaks when using «interface» #895 [bug] toc: don’t show toc button if empty #893 Maintenance [task] mermaid: update to 11.1.0 #904 [task][change] expand: rename open parameter to expanded #902 [task] i18n: update Arabic translation #900 6.2.0 (2024-08-26) Enhancements [feature][change] anchor: add option to scroll into view #886 [feature] theme: support for GitHub styled alerts #885 Fixes [bug] arrownav: avoid rude event handling for form elements #887 Maintenance [task] 404: move styles to separate file #889 6.1.1 (2024-08-02) Fixes [bug] link: link resolving stopped working in certain configurations #882 6.1.0 (2024-08-02) Enhancements [feature][change] assetbuster: use asset buster for all resources #875 [feature] theme: sync to Hugo changes for PublishDate #872 [feature] theme: allow errorlevel override on page level #870 [feature] relref: provide shortcodes to lift certain restrictions #864 [feature] openapi: adjust to Hugo’s build-in link render hook #860 [feature][change] include: adjust to Hugo’s build-in link render hook #859 Fixes [bug] variant: auto variant references potentially wrong chroma style #873 [bug] schema: sync to Hugo changes for LanguageCode #866 [bug] taxonomy: simplify code #852 [bug] alias: index.html has displays error in content #851 Maintenance [task] icon: update Font Awesome to 6.6.0 #881 [task] math: update MathJax to 3.2.2 #880 [task] openapi: update swagger-ui to 5.17.14 #879 [task] mermaid: update to 10.9.1 #878 [task] theme: remove special cases for LanguageCode #861 [task] link: adjust to Hugo’s build-in code #858 [task] image: adjust to Hugo’s build-in code #857 [task] opengraph: sync to Hugo’s implementation #856 [task] i18n: improve file naming #848 6.0.0 (2024-04-27) Enhancements [feature][breaking] theme: unify description #845 [feature] schema: add schema support in meta data #844 [feature] include: use Hugo’s resources #835 [feature] math: allow to work with Hugo’s passthrough configuration #832 [feature] i18n: add Romanian translation #828 [feature][breaking] menu: remove menuTitle frontmatter #714 [feature][breaking] theme: end support for Internet Explorer 11 #584 Fixes [bug] frontmatter: move frontmatter config for exampleSite out of root #843 [bug] images: color outline using primary color #838 [bug][breaking] variant: avoid Hugo permission errors on build #831 [bug] theme: unwanted paragraph break with AsciiDoc #829 Maintenance [task][breaking] swagger: remove shortcode #847 [task][breaking] search: remove JSON outputformat for search index #846 [task] theme: sync to Hugo’s implementation #841 [task][change] fontawesome: update to 6.5.2 #834 5.27.0 (2024-04-07) Enhancements [feature] theme: simplify title generation #825 [feature] theme: adjust to Hugo’s build-in code #824 [feature][change] link: warn if fragment is not found #823 [feature] theme: add styling for selected HTML elements #822 [feature] a11y: improve search box #821 [feature][change] dependencies: make loader more versatile #820 [feature] nav: scroll to prev/next heading using keyboard shortcut #819 [feature] breadcrumb: use .LinkTitle instead of .Title if available #816 Fixes [bug] scrollbar: scroll bar in side menu gets stuck in dragged state on mobile #808 5.26.2 (2024-03-18) Enhancements [feature] icons: use fixed width to ease layout #812 Fixes [bug] search: broken since version 5.26.1 #813 [bug] search: fix result links for pages in root #810 5.26.1 (2024-03-17) Fixes [bug] mermaid: show reset button after pan #807 [bug] openapi: make it run for file:// protocol #806 [bug] theme: fix relative path detection if relativeURLs=false #804 5.26.0 (2024-03-16) Enhancements [feature] image: add lazy loading image effect option #803 [feature] render-hook: support Markdown attributes #795 [feature] theme: support full page width #752 Fixes [bug] clipboard: fix broken style if block code is in table #790 [bug] nav: browser back navigation does not jump to the correct position #509 Maintenance [task] build: update all available actions to nodejs 20 #802 [task] openapi: update swagger-ui to 5.11.10 #798 [task] mermaid: update to 10.9.0 #797 5.25.0 (2024-02-29) Enhancements [feature][change] theme: print out GitInfo in page footer if configured #786 [feature][change] resources: new shortcode to deprecate attachments shortcode #22 Fixes [bug] swagger: fix compat warning #787 5.24.3 (2024-02-28) Fixes [bug] theme: avoid crash on 404 if author settings want to warn #785 5.24.2 (2024-02-24) Enhancements [feature] image: adjust to Hugo 0.123 #777 Fixes [bug] link: resolve fragments #775 5.24.1 (2024-02-18) Enhancements [feature] link: make resolution reporting configurable #774 5.24.0 (2024-02-17) Enhancements [feature] theme: compatibility with Hugo 0.123 #771 [feature] topbar: support editURL in frontmatter #764 [feature] menu: use –MENU-WIDTH-S to adjust mobile flyout #761 [feature] figure: support built-in shortcode #746 [feature] theme: make heading a template #744 [feature] taxonomy: make arrow nav browse through terms #742 [feature] theme: switch from config.toml to hugo.toml #741 [feature] button: make non-interactive if used as mock #740 [feature][change] topbar: allow text for button #739 [feature] theme: run hugo demo site without warning #736 [feature] menu: make swipe handler passive #735 [feature] i18n: support standard Hugo options #733 [feature] a11y: show tab focus on images #730 [feature] a11y: improve discovering links on keyboard navigation #726 [feature][change] variant: increase contrast for light themes #722 [feature] theme: break build if minimum Hugo version is not matched #719 [feature] taxonomy: humanize term on missing term title #713 Fixes [bug] taxonomy: display translated title #772 [bug] highlight: fix codefence syntax in Hugo \u003e= 0.121.0 #749 [bug] link: fix links to pages containing dots in their name #748 [bug] image: get resource images if link is prefixed with ./ #747 [bug] theme: switch dependency colors on OS color scheme change #745 [bug] clipboard: fix O(n²) buttons #738 [bug] button: fix whitespacing in FF #737 [bug] i18n: fix warning messages for zh-CN #732 [bug] mermaid: fix zoom button #725 [bug] theme: fix JS errors on hugo --minifiy #724 [bug] include: fix whitespacing in codefences #723 5.23.2 (2023-11-03) Enhancements [feature] taxonomy: improve taxonomy page #712 [feature] taxonomy: warn on missing term title #709 Fixes [bug] taxonomy: fix sorting of terms on content pages #710 5.23.1 (2023-10-30) Enhancements [feature] taxonomy: improve term page #705 Fixes [bug] variant: fix typo in chroma-learn.css #708 [bug] links: ignore local markdown links linking to files with extension #707 5.23.0 (2023-10-29) Enhancements [feature] taxonomy: allow for content on term pages #701 [feature] theme: write full file path on warnings #699 [feature] theme: show anchor link and copy to clipboard button on mobile #697 [feature][change] config: adjust to changes in Hugo 0.120 #693 [feature] variants: add more contrast to neon #692 [feature] mermaid: only show zoom reset button if zoomed #691 [feature] menu: add additional sort options #684 [feature] theme: add social media meta information #683 [feature] theme: simplify additional JS dependencies #682 [feature] links: warn if ref/relref is used falsly #681 [feature] menu: make width configurable #677 [feature] tabs: use color for link of inactive tabs #675 [feature] taxonomy: modularize term list generation #671 [feature] theme: remove warnings with hugo --printI18nWarnings #670 [feature] theme: implement portable linking #377 Fixes [bug] links: extra space before link text #700 [bug] mermaid: reset zoom correctly #690 [bug] theme: fix mobile layout for width=48rem #676 [bug] frontmatter: resemble documented shortcode style #672 [bug] taxonomy: display terms in pages if removePathAccents=true #669 Maintenance [task] mermaid: update mermaid to 10.6.0 #703 [task] openapi: update swagger-ui to 5.9.1 #702 5.22.1 (2023-10-02) Enhancements [feature] i18n: add Swahili translation #666 [feature] math: hide unrendered math #663 [feature] tabs: improve a11y by removing duplicate hidden title #662 [feature] mermaid: improve zoom UX #659 Fixes [bug] variant: fix sidebar-flyout borders color for zen #667 [bug] clipboard: fix RTL location of tooltip #661 [bug] clipboard: ignore RTL for code #660 [bug] expand: fix aria-controls #658 [bug] theme: fix id generation for markdownified titles #657 [bug] mermaid: avoid graph bombing on hugo –minify #656 [bug] mermaid: fix width for some graphs #655 5.22.0 (2023-09-26) Enhancements [feature] mermaid: add pan\u0026zoom reset #651 [feature] markdown: add interlace color for tables #648 [feature] search: add breadcrumb to dedicated search results #647 [feature][change] menu: optionally disable index pages for sections #642 Fixes [bug] variants: restore generator zoom #650 [bug] clipboard: malused Fontawesome style #649 [bug][change] theme: avoid id collisions between headings and theme #646 [bug] theme: remove HTML validation errors #644 [bug] breadcrumb: remove superflous whitespace between items #643 5.21.0 (2023-09-18) Enhancements [feature] topbar: make buttons configurable #639 [feature][change] menu: fix footer padding #637 Fixes [bug] breadcrumb: don’t ignore spaces for separator #636 [bug] theme: fix snyk code issues #633 [bug] images: apply image effects to lightbox images #631 Maintenance [task] openapi: update to swagger 5.7.2 #641 5.20.0 (2023-08-26) Enhancements [feature][change] theme: support for colored borders between menu and content #626 [feature] image: allow option to apply image effects globally #623 [feature][change] openapi: switch to light syntaxhighlighting where applicable #621 [feature] images: document usage of images with links #576 Fixes [bug] highlight: fix rendering for Hugo \u003c 0.111 #630 [bug] search: remove link underline on dedicated search page #627 [bug] highlight: don’t switch to block view if hl_inline=true #618 [bug] variant: minor adjustments to zen variants #617 [bug] mermaid: lazy render graph if it is initially hidden #187 Maintenance [task] openapi: update to swagger 5.4.1 #620 5.19.0 (2023-08-12) Enhancements [feature] highlight: add title parameter #616 [feature] variant: signal variant switch as event #614 [feature] variant: add zen variant in light and dark #613 [feature] i18n: add Hungarian translation #604 [feature] mermaid: update to 10.3.0 #601 Fixes [bug] siteparam: avoid halt if param is a map/slice #611 [bug] mermaid: fix broken zoom since update to v10 #608 [bug] mermaid: variant generator diagram does not respond to events #607 [bug] print: avoid chroma leak for relearn-dark #605 Maintenance [task] mermaid: update to 10.3.1 #610 5.18.0 (2023-07-27) Enhancements [feature][change] shortcodes: add more deprecation warnings #598 [feature][change] shortcodes: change context parameter to page if called as partial #595 [feature] siteparam: support nested parameters and text formatting #590 [feature][change] a11y: improve when tabbing through links #581 Fixes [bug] openapi: inherit RTL setting from Hugo content #600 [bug] 404: fix display in RTL #597 [bug] highlight: fix position of copy-to-clipboard button in RTL #594 [bug] openapi: fix spelling #593 [bug] search: fix typo in output format #591 [bug] tabs: fix tab selection by groupid #582 [bug] theme: restore compat with Hugo 0.95.0 #580 [bug][change] theme: improve display of links #577 5.17.1 (2023-06-22) Enhancements [feature][change] highlight: make copy to clipboard appear on hover #574 5.17.0 (2023-06-22) Enhancements [feature] highlight: add configurable line breaks #169 Fixes [bug] theme: support Hugo 0.114.0 #573 [bug] taxonomy: fix number tags #570 [bug] highlight: improve copy to clipboard #569 5.16.2 (2023-06-10) Enhancements [feature] theme: revamp 404 page #566 5.16.1 (2023-06-09) Enhancements [feature] theme: add deprecation warnings #565 Fixes [bug] mermaid: allow for YAML frontmatter inside of graph #564 [bug] alias: fix redirect URLs in case of empty BaseURL #562 5.16.0 (2023-06-08) Enhancements [feature] tabs: add title and icon option #552 [feature] shortcodes: add style option to mimic code box color scheme #551 [feature] tabs: support color options #550 [feature] favicon: add light \u0026 dark option for OS’s preferred color scheme #549 Fixes [bug] icon: remove whitespace on start #560 [bug] shortcodes: avoid superflous margin at start and end of content #558 [bug] expand: fix html encoding of finishing content tag #557 [bug] icon: fix ouput “raw HTML omitted” with goldmark config unsafe=false #555 5.15.2 (2023-05-29) Enhancements [feature] taxonomy: add support for category default taxonomy #541 Fixes [bug] attachments: work for Hugo \u003c 0.112 #546 5.15.1 (2023-05-25) Fixes [bug] shortcodes: intermediately use random ids instead of .Ordinal #543 5.15.0 (2023-05-25) Enhancements [feature] tab: new shortcode to display single tab #538 [feature][change] tabs: treat groupid as unique if not set #537 [feature] expand: indent expanded content #536 [feature] notice: make boxes more prominent #535 Fixes [bug] attachments: fix build error since Hugo 0.112 #540 Maintenance [task] chore: update Mermaid to 9.4.3 #534 [task] mermaid: update to 10.2.0 #499 5.14.3 (2023-05-20) Fixes [bug] tags: show taxonomy toc for standard installation #533 5.14.2 (2023-05-20) Fixes [bug] tags: translate breadcrumb and title for taxonomy #532 5.14.1 (2023-05-20) No changelog for this release.",
    "tags": [],
    "title": "History",
    "uri": "/hugo-theme-relearn/basics/history/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children",
    "content": "This is a demo child page.\nSubpages of this page page 3-1",
    "description": "This is a demo child page",
    "tags": [
      "Children",
      "Non-Hidden"
    ],
    "title": "page 3",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-3/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children",
    "content": "This is a hidden demo child page. This page and all its children are hidden in the menu, arrow navigation and children shortcode as long as you aren’t viewing this page or its children directly.",
    "description": "This is a hidden demo child page",
    "tags": [
      "Children",
      "a secret"
    ],
    "title": "page 4 (hidden)",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-4/index.html"
  },
  {
    "breadcrumb": "Tags",
    "content": "This lists all pages that are hidden from the home page. This includes pages that define hidden=true in their frontmatter as well as descendents of hidden pages.\nWhen giving term pages, you should give it a title. Otherwise it will print out a warning and will use the urlized title, which may looks weird.\nWhile internally this term is called hidden, it is referenced in the resulting english pages as a secret and as hush, matey in the piratish translation.\nJust an example heading The TOC will contain this heading and the index headings below.",
    "description": "This lists all pages that are hidden from the home page. This includes pages that define hidden=true in their frontmatter as well as descendents of hidden pages.",
    "tags": [],
    "title": "Tag :: a secret",
    "uri": "/hugo-theme-relearn/tags/the-hidden/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "Warning This shortcode is deprecated in favor of the new resources shortcode. See migration instructions below.\nThe examples on this page were removed.\nThe attachments shortcode displays a list of files attached to a page with adjustable color, title and icon.\nMigration While this shortcode will still be available for some time, it does not receive support anymore. Start to migrate early, as it will be removed with the next major update of the theme.\nThe resources shortcode leverages Hugo’s resource feature for page bundles. It has all the same parameter as the attachments shortcode but applies the pattern directly on a resources Name attribute.\nTo migrate your pages apply the following steps:\nIf a page is not already a page bundle convert it Move your files to a valid destination inside of your page bundle (depending if you have a branch or a leaf bundle) Change the calls from the attachments shortcode to the resources shortcode and adjust the pattern parameter to the new directory layout and the resources Name attribute. Multilanguage features are not supported directly by the shortcode anymore but rely on Hugo’s handling for resource translations.\nUsage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\n​ shortcode partial {{% attachments sort=\"asc\" /%}} {{ partial \"shortcodes/attachments.html\" (dict \"page\" . \"sort\" \"asc\" )}} Parameter Name Default Notes style transparent The style scheme used for the box.\n- by severity: caution, important, info, note, tip, warning\n- by brand color: primary, secondary, accent\n- by color: blue, cyan, green, grey, magenta, orange, red\n- by special color: default, transparent, code\nYou can also define your own styles. color see notes The CSS color value to be used. If not set, the chosen color depends on the style. Any given value will overwrite the default.\n- for severity styles: a nice matching color for the severity\n- for all other styles: the corresponding color title see notes Arbitrary text for the box title. Depending on the style there may be a default title. Any given value will overwrite the default.\n- for severity styles: the matching title for the severity\n- for all other styles: Attachments\nIf you want no title for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) icon see notes Font Awesome icon name set to the left of the title. Depending on the style there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching icon for the severity\n- for all other styles: paperclip\nIf you want no icon, you have to set this parameter to \" \" (a non empty d with spaces) sort asc Sorting the output in ascending or descending order. pattern .* A regular expressions, used to filter the attachments by file name. For example:\n- to match a file suffix of ‘jpg’, use .*\\.jpg (not *.\\.jpg)\n- to match file names ending in jpg or png, use .*\\.(jpg|png) Setup Single language The shortcode lists files found in a specific folder. The name of the folder depends on your page type (either branch bundle, leaf bundle or page).\nIf your page is a leaf bundle, attachments must be placed in a nested index.files folder, accordingly.\ncontent _index.md page index.md index.files attachment.pdf If your page is a branch bundle, attachments must be placed in a nested _index.files folder, accordingly.\nWarning This is only available for Hugo \u003c 0.112.0\ncontent _index.md page _index.md _index.files attachment.pdf For simple pages, attachments must be placed in a folder named like your page and ending with .files.\nWarning This is only available for Hugo \u003c 0.112.0\ncontent _index.md page.files attachment.pdf page.md Multilingual Be aware that if you use a multilingual website, you will need to have as many folders as languages and the language code must be part of the folder name.\nEg. for a site in English and Piratish:\ncontent index.en.md index.pir.md page index.en.md index.pir.md index.en.files attachment.pdf index.pir.files attachment.pdf",
    "description": "List of files attached to a page",
    "tags": [],
    "title": "Attachments",
    "uri": "/hugo-theme-relearn/shortcodes/attachments/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The badge shortcode displays little markers in your text with adjustable color, title and icon.\nImportant Version6.6.6 Captain InfoNew Awesome\nUsage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\n​ shortcode partial {{% badge %}}Important{{% /badge %}} {{% badge style=\"primary\" title=\"Version\" %}}6.6.6{{% /badge %}} {{% badge style=\"red\" icon=\"angle-double-up\" %}}Captain{{% /badge %}} {{% badge style=\"info\" %}}New{{% /badge %}} {{% badge color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" %}}Awesome{{% /badge %}} {{ partial \"shortcodes/badge.html\" (dict \"page\" . \"content\" \"Important\" )}} {{ partial \"shortcodes/badge.html\" (dict \"page\" . \"style\" \"primary\" \"title\" \"Version\" \"content\" \"6.6.6\" )}} {{ partial \"shortcodes/badge.html\" (dict \"page\" . \"style\" \"red\" \"icon\" \"angle-double-up\" \"content\" \"Captain\" )}} {{ partial \"shortcodes/badge.html\" (dict \"page\" . \"style\" \"info\" \"content\" \"New\" )}} {{ partial \"shortcodes/badge.html\" (dict \"page\" . \"color\" \"fuchsia\" \"icon\" \"fab fa-hackerrank\" \"content\" \"Awesome\" )}} Parameter Name Default Notes style default The style scheme used for the badge.\n- by severity: caution, important, info, note, tip, warning\n- by brand color: primary, secondary, accent\n- by color: blue, cyan, green, grey, magenta, orange, red\n- by special color: default, transparent, code\nYou can also define your own styles. color see notes The CSS color value to be used. If not set, the chosen color depends on the style. Any given value will overwrite the default.\n- for severity styles: a nice matching color for the severity\n- for all other styles: the corresponding color title see notes Arbitrary text for the badge title. Depending on the style there may be a default title. Any given value will overwrite the default.\n- for severity styles: the matching title for the severity\n- for all other styles: \u003cempty\u003e\nIf you want no title for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) icon see notes Font Awesome icon name set to the left of the title. Depending on the style there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching icon for the severity\n- for all other styles: \u003cempty\u003e\nIf you want no icon for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) \u003ccontent\u003e \u003cempty\u003e Arbitrary text for the badge. Examples Style By Severity {{% badge style=\"caution\" %}}Magenta{{% /badge %}} {{% badge style=\"important\" %}}Cyan{{% /badge %}} {{% badge style=\"info\" %}}Blue{{% /badge %}} {{% badge style=\"note\" %}}Orange{{% /badge %}} {{% badge style=\"tip\" %}}Green{{% /badge %}} {{% badge style=\"warning\" %}}Red{{% /badge %}} CautionMagenta ImportantCyan InfoBlue NoteOrange TipGreen WarningRed\nBy Brand Colors {{% badge style=\"primary\" icon=\"bullhorn\" title=\"Announcement\" %}}Mandatory{{% /badge %}} {{% badge style=\"secondary\" icon=\"bullhorn\" title=\"Announcement\" %}}Optional{{% /badge %}} {{% badge style=\"accent\" icon=\"bullhorn\" title=\"Announcement\" %}}Special{{% /badge %}} AnnouncementMandatory AnnouncementOptional AnnouncementSpecial\nBy Color {{% badge style=\"blue\" icon=\"palette\" title=\"Color\" %}}Blue{{% /badge %}} {{% badge style=\"cyan\" icon=\"palette\" title=\"Color\" %}}Cyan{{% /badge %}} {{% badge style=\"green\" icon=\"palette\" title=\"Color\" %}}Green{{% /badge %}} {{% badge style=\"grey\" icon=\"palette\" title=\"Color\" %}}Grey{{% /badge %}} {{% badge style=\"magenta\" icon=\"palette\" title=\"Color\" %}}Magenta{{% /badge %}} {{% badge style=\"orange\" icon=\"palette\" title=\"Color\" %}}Orange{{% /badge %}} {{% badge style=\"red\" icon=\"palette\" title=\"Color\" %}}Red{{% /badge %}} ColorBlue ColorCyan ColorGreen ColorGrey ColorMagenta ColorOrange ColorRed\nBy Special Color {{% badge style=\"default\" icon=\"palette\" title=\"Color\" %}}Default{{% /badge %}} {{% badge style=\"transparent\" icon=\"palette\" title=\"Color\" %}}Transparent{{% /badge %}} ColorDefault ColorTransparent\nVariants Without Icon and Title Text {{% badge %}}6.6.6{{% /badge %}} {{% badge style=\"info\" icon=\" \" title=\" \" %}}Awesome{{% /badge %}} {{% badge style=\"red\" %}}Captain{{% /badge %}} 6.6.6 Awesome Captain\nWithout Icon {{% badge title=\"Version\" %}}6.6.6{{% /badge %}} {{% badge style=\"info\" icon=\" \" %}}Awesome{{% /badge %}} {{% badge style=\"red\" title=\"Rank\" %}}Captain{{% /badge %}} Version6.6.6 InfoAwesome RankCaptain\nWithout Title Text {{% badge icon=\"star\" %}}6.6.6{{% /badge %}} {{% badge style=\"info\" title=\" \" %}}Awesome{{% /badge %}} {{% badge style=\"red\" icon=\"angle-double-up\" %}}Captain{{% /badge %}} 6.6.6 Awesome Captain\nAll Set {{% badge icon=\"star\" title=\"Version\" %}}6.6.6{{% /badge %}} {{% badge style=\"info\" %}}Awesome{{% /badge %}} {{% badge style=\"red\" icon=\"angle-double-up\" title=\"Rank\" %}}Captain{{% /badge %}} Version6.6.6 InfoAwesome RankCaptain\nOverride for Severity {{% badge style=\"info\" icon=\"rocket\" title=\"Feature\" %}}Awesome{{% /badge %}} FeatureAwesome Other With User-Defined Color, Font Awesome Brand Icon and Markdown Title and Content {{% badge color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" title=\"**Font**\" %}}**Awesome**{{% /badge %}} FontAwesome With Icon Content You can combine the badge with the icon shortcode to create even more stunning visuals.\nIn this case you need to declare {{\u003c badge \u003e}} instead of {{% badge %}}. Note, that in this case it is not possible to put markdown in the content.\n{{\u003c badge style=\"primary\" icon=\"angle-double-up\" \u003e}}{{% icon skull-crossbones %}}{{\u003c /badge \u003e}} {{\u003c badge style=\"primary\" icon=\"angle-double-up\" \u003e}}{{% icon skull-crossbones %}} Pirate{{\u003c /badge \u003e}} {{\u003c badge style=\"primary\" title=\"Rank\" \u003e}}{{% icon skull-crossbones %}}{{\u003c /badge \u003e}} {{\u003c badge style=\"primary\" title=\"Rank\" \u003e}}{{% icon skull-crossbones %}} Pirate{{\u003c /badge \u003e}} {{\u003c badge style=\"primary\" icon=\"angle-double-up\" title=\"Rank\" \u003e}}{{% icon skull-crossbones %}}{{\u003c /badge \u003e}} {{\u003c badge style=\"primary\" icon=\"angle-double-up\" title=\"Rank\" \u003e}}{{% icon skull-crossbones %}} Pirate{{\u003c /badge \u003e}} Pirate\nRank\nRank Pirate\nRank\nRank Pirate\nInside of Text Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. {{% badge style=\"blue\" icon=\"rocket\" %}}Awesome{{% /badge %}} Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Awesome Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.",
    "description": "Marker badges to display in your text",
    "tags": [],
    "title": "Badge",
    "uri": "/hugo-theme-relearn/shortcodes/badge/index.html"
  },
  {
    "breadcrumb": "Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category :: Basic",
    "uri": "/hugo-theme-relearn/categories/basic/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The button shortcode displays a clickable button with adjustable color, title and icon.\nGet Hugo Get Hugo\nUsage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\n​ shortcode partial {{% button href=\"https://gohugo.io/\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"warning\" icon=\"dragon\" %}}Get Hugo{{% /button %}} {{ partial \"shortcodes/button.html\" (dict \"page\" . \"href\" \"https://gohugo.io/\" \"content\" \"Get Hugo\" )}} {{ partial \"shortcodes/button.html\" (dict \"page\" . \"href\" \"https://gohugo.io/\" \"style\" \"warning\" \"icon\" \"dragon\" \"content\" \"Get Hugo\" )}} Once the button is clicked, it opens another browser tab for the given URL.\nParameter Name Default Notes href \u003cempty\u003e Either the destination URL for the button or JavaScript code to be executed on click. If this parameter is not set, the button will do nothing but is still displayed as clickable.\n- if starting with javascript: all following text will be executed in your browser\n- every other string will be interpreted as URL style transparent The style scheme used for the button.\n- by severity: caution, important, info, note, tip, warning\n- by brand color: primary, secondary, accent\n- by color: blue, cyan, green, grey, magenta, orange, red\n- by special color: default, transparent, code\nYou can also define your own styles. color see notes The CSS color value to be used. If not set, the chosen color depends on the style. Any given value will overwrite the default.\n- for severity styles: a nice matching color for the severity\n- for all other styles: the corresponding color icon see notes Font Awesome icon name set to the left of the title. Depending on the style there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching icon for the severity\n- for all other styles: \u003cempty\u003e\nIf you want no icon for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) iconposition left Places the icon to the left or right of the title. target see notes The destination frame/window if href is an URL. Otherwise the parameter is not used. This behaves similar to normal links. If the parameter is not given it defaults to:\n- the setting of externalLinkTarget or _blank if not set, for any address starting with http:// or https://\n- no specific value for all other links type see notes The button type if href is JavaScript. Otherwise the parameter is not used. If the parameter is not given it defaults to button \u003ccontent\u003e see notes Arbitrary text for the button title. Depending on the style there may be a default title. Any given value will overwrite the default.\n- for severity styles: the matching title for the severity\n- for all other styles: \u003cempty\u003e\nIf you want no title for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) Examples Style By Severity {{% button href=\"https://gohugo.io/\" style=\"caution\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"important\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"info\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"note\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"tip\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"warning\" %}}Get Hugo{{% /button %}} Get Hugo Get Hugo Get Hugo Get Hugo Get Hugo Get Hugo\nBy Brand Colors {{% button href=\"https://gohugo.io/\" style=\"primary\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"secondary\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"accent\" %}}Get Hugo{{% /button %}} Get Hugo Get Hugo Get Hugo\nBy Color {{% button href=\"https://gohugo.io/\" style=\"blue\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"cyan\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"green\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"grey\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"magenta\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"orange\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"red\" %}}Get Hugo{{% /button %}} Get Hugo Get Hugo Get Hugo Get Hugo Get Hugo Get Hugo Get Hugo\nBy Special Color {{% button href=\"https://gohugo.io/\" style=\"default\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"transparent\" %}}Get Hugo{{% /button %}} Get Hugo Get Hugo\nIcon Empty {{% button href=\"https://gohugo.io/\" icon=\" \" %}}{{% /button %}} Only {{% button href=\"https://gohugo.io/\" icon=\"download\" %}}{{% /button %}} To the Left {{% button href=\"https://gohugo.io/\" icon=\"download\" %}}Get Hugo{{% /button %}} Get Hugo To the Right {{% button href=\"https://gohugo.io/\" icon=\"download\" iconposition=\"right\" %}}Get Hugo{{% /button %}} Get Hugo Override for Severity {{% button href=\"https://gohugo.io/\" icon=\"dragon\" style=\"warning\" %}}Get Hugo{{% /button %}} Get Hugo Target {{% button href=\"https://gohugo.io/\" target=\"_self\" %}}Get Hugo in same window{{% /button %}} {{% button href=\"https://gohugo.io/\" %}}Get Hugo in new Window/Frame (default){{% /button %}} Get Hugo in same Window/Frame Get Hugo in new Window/Frame (default)\nOther With User-Defined Color, Font Awesome Brand Icon and Markdown Title {{% button href=\"https://gohugo.io/\" color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" %}}Get **Hugo**{{% /button %}} Get Hugo Severity Style with All Defaults {{% button href=\"https://gohugo.io/\" style=\"tip\" %}}{{% /button %}} Tip Button to Internal Page {{% button href=\"/index.html\" %}}Home{{% /button %}} Home Button with JavaScript Action If your JavaScript action does not change the focus afterwards, make sure to call this.blur() in the end to unselect the button.\n{{% button style=\"primary\" icon=\"bullhorn\" href=\"javascript:alert('Hello world!');this.blur();\" %}}Shout it out{{% /button %}} Shout it out Button within a form Element To use native HTML elements in your Markdown, add this in your hugo.toml\n[markup.goldmark.renderer] unsafe = true \u003cform action=\"../../search.html\" method=\"get\"\u003e \u003cinput name=\"search-by-detail\" class=\"search-by\" type=\"search\"\u003e {{% button type=\"submit\" style=\"secondary\" icon=\"search\" %}}Search{{% /button %}} \u003c/form\u003e Search",
    "description": "Clickable buttons",
    "tags": [],
    "title": "Button",
    "uri": "/hugo-theme-relearn/shortcodes/button/index.html"
  },
  {
    "breadcrumb": "",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categories",
    "uri": "/hugo-theme-relearn/categories/index.html"
  },
  {
    "breadcrumb": "Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag :: Children",
    "uri": "/hugo-theme-relearn/tags/children/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The children shortcode lists the child pages of the current page and its descendants.\npage 1 page 2 page 3 page X Usage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\n​ shortcode partial {{% children sort=\"title\" %}} {{ partial \"shortcodes/children.html\" (dict \"page\" . \"sort\" \"title\" )}} Parameter Name Default Notes containerstyle ul Choose the style used to group all children. It could be any HTML tag name. style li Choose the style used to display each descendant. It could be any HTML tag name. showhidden false When true, child pages hidden from the menu will be displayed as well. description false When true shows a short text under each page in the list. When no description or summary exists for the page, the first 70 words of the content is taken - read more info about summaries on gohugo.io. depth 1 The depth of descendants to display. For example, if the value is 2, the shortcode will display two levels of child pages. To get all descendants, set this value to a high number eg. 999. sort auto The sort criteria of the displayed list.\n- auto defaults to ordersectionsby of the pages frontmatter\nor to ordersectionsby of the site configuration\nor to weight\n- weight\n- title\n- linktitle\n- modifieddate\n- expirydate\n- publishdate\n- date\n- length\n- default adhering to Hugo’s default sort criteria Examples All Default {{% children %}} page X page 1 page 2 page 3 With Description {{% children description=\"true\" %}} page XThis is a plain page test, and the beginning of a YAML multiline description... page 1This is a demo child page\npage 2This is a demo child page with no description.\nSo its content is used as description.\npage 3This is a demo child page\nInfinite Depth and Hidden Pages {{% children depth=\"999\" showhidden=\"true\" %}} page X page 1 page 1-1 page 1-1-1 (hidden) page 1-1-1-1 page 1-1-1-1-1 (hidden) page 1-1-1-1-1-1 page 1-1-2 (headless) page 1-1-2-1 page 1-1-2-2 page 1-1-3 page 2 page 3 page 3-1 page 4 (hidden) Heading Styles for Container and Elements {{% children containerstyle=\"div\" style=\"h2\" depth=\"3\" description=\"true\" %}} page XThis is a plain page test, and the beginning of a YAML multiline description... page 1This is a demo child page\npage 1-1This is a demo child page\npage 1-1-2 (headless)This is a demo child page\npage 1-1-3This is a demo child page\npage 2This is a demo child page with no description.\nSo its content is used as description.\npage 3This is a demo child page\npage 3-1This is a plain page test nested in a parent\nDivs for Group and Element Styles {{% children containerstyle=\"div\" style=\"div\" depth=\"3\" %}} page X page 1 page 1-1 page 1-1-2 (headless) page 1-1-3 page 2 page 3 page 3-1",
    "description": "List the child pages of a page",
    "tags": [],
    "title": "Children",
    "uri": "/hugo-theme-relearn/shortcodes/children/index.html"
  },
  {
    "breadcrumb": "Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag :: Config",
    "uri": "/hugo-theme-relearn/tags/config/index.html"
  },
  {
    "breadcrumb": "Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag :: Content",
    "uri": "/hugo-theme-relearn/tags/content/index.html"
  },
  {
    "breadcrumb": "Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category :: Content",
    "uri": "/hugo-theme-relearn/categories/content/index.html"
  },
  {
    "breadcrumb": "Development",
    "content": "Code Quality A new release can happen at any time from the main branch of the GitHub project without further acknowledgment. This makes it necessary that, every pushed set of changesets into the main branch must be self-contained and correct, resulting in a releasable version.\nStay simple for the user by focusing on the mantra “convention over configuration”.\nAt installation the site should work reasonable without (m)any configuration.\nStay close to the Hugo way.\nDon’t use npm or any preprocessing, our contributors may not be front-end developers.\nDocument new features in the exampleSite. This also contains entries to the What’s new page.\nDon’t break existing features if you don’t have to.\nRemove reported issue from the browser’s console.\nCheck for unnecessary whitespace and correct indention of your resulting HTML.\nConventional Commits Write commit messages in the conventional commit format.\nFollowing is an inpomplete list of some of the used conventional commit types. Be creative.\nCommon Feature Structure Shortcodes build a11y favicon attachments browser archetypes search badge chore alias menu button docs generator history children shortcodes i18n scrollbar expand theme mobile nav icon print toc include rss clipboard math variant syntaxhighlight mermaid boxes notice openapi piratify siteparam tabs",
    "description": "What to know if you want to contribute",
    "tags": [],
    "title": "Contributing",
    "uri": "/hugo-theme-relearn/dev/contributing/index.html"
  },
  {
    "breadcrumb": "",
    "content": "Contributors Special thanks to everyone who has contributed to this project.\nMany thanks to Mathieu Cornic for his work on porting the Learn theme to Hugo.\nMany thanks to Andy Miller for initially creating the Learn theme for Grav.\nTheme Dependencies autoComplete - A lightweight and powerful vanilla JavaScript completion suggester clipboard.js - A modern approach to copy text to clipboard d3-zoom - Pan and zoom SVG, HTML or Canvas using mouse or touch input - plus dependencies d3-color - Color spaces! RGB, HSL, Cubehelix, CIELAB, and more d3-dispatch - Register named callbacks and call them with arguments d3-ease - Easing functions for smooth animation d3-interpolate - Interpolate numbers, colors, strings, arrays, objects, whatever d3-selection - Transform the DOM by selecting elements and joining to data d3-timer - An efficient queue for managing thousands of concurrent animations d3-transition - Animated transitions for D3 selections d3-drag - Drag and drop SVG, HTML or Canvas using mouse or touch input Font Awesome - The internet’s icon library and toolkit JS-YAML - JavaScript YAML parser and dumper Lunr - Enables a great search experience without the need for external, server-side, search services Lunr Languages - A collection of languages stemmers and stopwords for Lunr Javascript library MathJax - Beautiful math and chemical formulae in all browsers Mermaid - Generation of diagram and flowchart from text in a similar manner as markdown Perfect Scrollbar - A minimalistic but perfect custom scrollbar plugin SwaggerUI - Generate beautiful documentation from a Swagger-compliant API WorkSans - Work Sans is a 9 weight typeface family based loosely on early Grotesques Docs Dependencies github-buttons - Unofficial github:buttons Octodex - Playground and home for all octocats Tooling Dependencies GitHub - Continuous deployment, testing and hosting of this project’s sources and its documentation Various GitHub Actions https://github.com/actions/checkout https://github.com/actions/setup-node https://github.com/Akkjon/close-milestone https://github.com/andstor/file-reader-action https://github.com/ashley-taylor/regex-property-action https://github.com/Kaven-Universe/github-action-current-date-time https://github.com/mingjun97/file-regex-replace https://github.com/octokit/graphql-action https://github.com/peaceiris/actions-gh-pages https://github.com/peaceiris/actions-hugo https://github.com/WyriHaximus/github-action-create-milestone https://github.com/WyriHaximus/github-action-next-semvers gren - A releasenotes generator for GitHub Hugo - The static site generator of your choice",
    "description": "Contributors Special thanks to everyone who has contributed to this project.",
    "tags": [],
    "title": "Credits",
    "uri": "/hugo-theme-relearn/more/credits/index.html"
  },
  {
    "breadcrumb": "Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category :: Custom",
    "uri": "/hugo-theme-relearn/categories/custom/index.html"
  },
  {
    "breadcrumb": "Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag :: Documentation",
    "uri": "/hugo-theme-relearn/tags/documentation/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The expand shortcode displays an expandable/collapsible section of text.\nExpand me… Thank you!\nThat’s some text with a footnote1\nThat’s some more text with a footnote.2\nAnd that’s the footnote. ↩︎\nAnything of interest goes here.\nBlue light glows blue. ↩︎\nUsage While the examples are using shortcodes with named parameter you are free to use positional as well or also call this shortcode from your own partials.\n​ shortcode shortcode (positional) partial {{% expand title=\"Expand me...\" %}}Thank you!{{% /expand %}} {{% expand \"Expand me...\" %}}Thank you!{{% /expand %}} {{ partial \"shortcodes/expand.html\" (dict \"page\" . \"title\" \"Expand me...\" \"content\" \"Thank you!\" )}} Parameter Name Position Default Notes title 1 \"Expand me...\" Arbitrary text to appear next to the expand/collapse icon. expanded 2 false How the content is displayed.\n- true: the content is initially shown\n- false: the content is initially hidden \u003ccontent\u003e \u003cempty\u003e Arbitrary text to be displayed on expand. Examples All Defaults {{% expand %}}Yes, you did it!{{% /expand %}} Expand me… Yes, you did it! Initially Expanded {{% expand title=\"Expand me...\" expanded=\"true\" %}}No need to press you!{{% /expand %}} Expand me… No need to press you! Arbitrary Text {{% expand title=\"Show me almost **endless** possibilities\" %}} You can add standard markdown syntax: - multiple paragraphs - bullet point lists - _emphasized_, **bold** and even **_bold emphasized_** text - [links](https://example.com) - etc. ```plaintext ...and even source code ``` \u003e the possibilities are endless (almost - including other shortcodes may or may not work) {{% /expand %}} Show me almost endless possibilities You can add standard markdown syntax:\nmultiple paragraphs bullet point lists emphasized, bold and even bold emphasized text links etc. ...and even source code the possibilities are endless (almost - including other shortcodes may or may not work)",
    "description": "Expandable/collapsible sections of text",
    "tags": [],
    "title": "Expand",
    "uri": "/hugo-theme-relearn/shortcodes/expand/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The highlight shortcode renders your code with a syntax highlighter.\n​ python 1print(\"Hello World!\") Usage This shortcode is fully compatible with Hugo’s highlight shortcode but offers some extensions.\nIt is called interchangeably in the same way as Hugo’s own shortcode providing positional parameter or by simply using Markdown codefences.\nYou are free to also call this shortcode from your own partials. In this case it resembles Hugo’s highlight function syntax if you call this shortcode as a partial using compatibility syntax.\nWhile the examples are using shortcodes with named parameter it is recommended to use Markdown codefences instead. This is because more and more other software supports Markdown codefences (eg. GitHub) and so your Markdown becomes more portable.\n​ markdown shortcode shortcode (positional) partial partial (compat) ```py { lineNos=\"true\" wrap=\"true\" title=\"python\" } print(\"Hello World!\") ``` {{\u003c highlight lineNos=\"true\" type=\"py\" wrap=\"true\" title=\"python\" \u003e}} print(\"Hello World!\") {{\u003c /highlight \u003e}} {{\u003c highlight py \"lineNos=true,wrap=true,title=python\" \u003e}} print(\"Hello World!\") {{\u003c /highlight \u003e}} {{ partial \"shortcodes/highlight.html\" (dict \"page\" . \"content\" \"print(\\\"Hello World!\\\")\" \"lineNos\" \"true\" \"type\" \"py\" \"wrap\" \"true\" \"title\" \"python\" )}} {{ partial \"shortcodes/highlight.html\" (dict \"page\" . \"content\" \"print(\\\"Hello World!\\\")\" \"options\" \"lineNos=true,wrap=true,title=python\" \"type\" \"py\" )}} Parameter Name Position Default Notes type 1 \u003cempty\u003e The language of the code to highlight. Choose from one of the supported languages. Case-insensitive. title \u003cempty\u003e Extension. Arbitrary title for code. This displays the code like a single tab if hl_inline=false (which is Hugo’s default). wrap see notes Extension. When true the content may wrap on long lines otherwise it will be scrollable.\nThe default value can be set in your hugo.toml and overwritten via frontmatter. See below. options 2 \u003cempty\u003e An optional, comma-separated list of zero or more Hugo supported options as well as extension parameter from this table. \u003coption\u003e \u003cempty\u003e Any of Hugo’s supported options. \u003ccontent\u003e \u003cempty\u003e Your code to highlight. Configuration Default values for Hugo’s supported options can be set via goldmark settings in your hugo.toml\nDefault values for extension options can be set via params settings in your hugo.toml or be overwritten by frontmatter for each individual page.\nGlobal Configuration File You can configure the color style used for code blocks in your color variants stylesheet file.\nRecommended Settings hugo. toml yaml json [markup] [markup.highlight] lineNumbersInTable = false noClasses = false markup: highlight: lineNumbersInTable: false noClasses: false { \"markup\": { \"highlight\": { \"lineNumbersInTable\": false, \"noClasses\": false } } } Optional Settings hugo. toml yaml json [params] highlightWrap = true params: highlightWrap: true { \"params\": { \"highlightWrap\": true } } Page’s Frontmatter ​ toml yaml json +++ highlightWrap = true +++ --- highlightWrap: true --- { \"highlightWrap\": true } Examples Line Numbers with Starting Offset As mentioned above, line numbers in a table layout will shift if code is wrapping, so better use inline. To make things easier for you, set lineNumbersInTable = false in your hugo.toml and add lineNos = true when calling the shortcode instead of the specific values table or inline.\n{{\u003c highlight lineNos=\"true\" lineNoStart=\"666\" type=\"py\" \u003e}} # the hardest part is to start writing code; here's a kickstart; just copy and paste this; it's free; the next lines will cost you serious credits print(\"Hello\") print(\" \") print(\"World\") print(\"!\") {{\u003c /highlight \u003e}} 666# the hardest part is to start writing code; here's a kickstart; just copy and paste this; it's free; the next lines will cost you serious credits 667print(\"Hello\") 668print(\" \") 669print(\"World\") 670print(\"!\") Markdown Codefence with Title ```py { title=\"python\" } # a bit shorter print(\"Hello World!\") ``` ​ python # a bit shorter print(\"Hello World!\") With Wrap {{\u003c highlight type=\"py\" wrap=\"true\" hl_lines=\"2\" \u003e}} # Quicksort Python One-liner lambda L: [] if L==[] else qsort([x for x in L[1:] if x\u003c L[0]]) + L[0:1] + qsort([x for x in L[1:] if x\u003e=L[0]]) # Some more stuff {{\u003c /highlight \u003e}} # Quicksort Python One-liner lambda L: [] if L==[] else qsort([x for x in L[1:] if x\u003c L[0]]) + L[0:1] + qsort([x for x in L[1:] if x\u003e=L[0]]) # Some more stuff Without Wrap {{\u003c highlight type=\"py\" wrap=\"false\" hl_lines=\"2\" \u003e}} # Quicksort Python One-liner lambda L: [] if L==[] else qsort([x for x in L[1:] if x\u003c L[0]]) + L[0:1] + qsort([x for x in L[1:] if x\u003e=L[0]]) # Some more stuff {{\u003c /highlight \u003e}} # Quicksort Python One-liner lambda L: [] if L==[] else qsort([x for x in L[1:] if x\u003c L[0]]) + L[0:1] + qsort([x for x in L[1:] if x\u003e=L[0]]) # Some more stuff",
    "description": "Render code with a syntax highlighter",
    "tags": [],
    "title": "Highlight",
    "uri": "/hugo-theme-relearn/shortcodes/highlight/index.html"
  },
  {
    "breadcrumb": "",
    "content": "Hugo Relearn Theme A theme for Hugo designed for documentation.\n★ What’s new in the latest release ★\nMotivation The Relearn theme is a fork of the great Learn theme with the aim of fixing long outstanding bugs and adapting to latest Hugo features. As far as possible this theme tries to be a drop-in replacement for the Learn theme.\nFeatures Wide set of usage scenarios Responsive design for mobile usage Looks nice on paper (if it has to) Usable offline, no external dependencies Usable from your local file system via file:// protocol Support for the VSCode Front Matter extension for on-premise CMS capabilities Support for Open Graph, Schema and Twitter Cards Configurable theming and visuals Configurable brand images Automatic switch for light/dark variant depending on your OS settings Predefined light, dark and color variants User selectable variants Stylesheet generator Configurable syntax highlighting Unique theme features Print whole chapters or even the complete site In page search Site search Dedicated search page Taxonomy support Configurable topbar buttons Unlimited nested menu items Configurable shortcut links Hidden pages Multi language support Full support for languages written right to left Available languages: Arabic, Simplified Chinese, Traditional Chinese, Czech, Dutch, English, Finnish, French, German, Hindi, Hungarian, Indonesian, Italian, Japanese, Korean, Polish, Portuguese, Romanian, Russian, Spanish, Swahili, Turkish, Vietnamese Search support for mixed language content Additional Markdown features Support for GFM (GitHub Flavored Markdown) Image effects like sizing, shadow, border and alignment Image lightbox Shortcodes galore Display resources contained in a page bundle Marker badges Configurable buttons List child pages Expand areas to reveal content Font Awesome icons Inclusion of other files Math and chemical formulae using MathJax Mermaid diagrams for flowcharts, sequences, gantts, pie, etc. Colorful boxes OpenAPI specifications using Swagger UI Reveal you site’s configuration parameter Single tabbed panels and multiple tabbed panels Installation \u0026 Usage For a detailed description of the theme’s capabilities visit the official documentation.\nChangelog See the What’s New page for release highlights or the detailed change history for a complete list of changes.\nContributions You are most welcome to contribute bugfixes or new features. Check the contribution guidelines first before starting.\nLicense The Relearn theme is licensed under the MIT License.\nCredits This theme would not be possible without the work of many others.",
    "description": "A theme for Hugo designed for documentation.",
    "tags": [],
    "title": "Hugo Relearn Theme",
    "uri": "/hugo-theme-relearn/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The icon shortcode displays icons using the Font Awesome library.\nUsage While the examples are using shortcodes with positional parameter you are free to also call this shortcode from your own partials.\n​ shortcode shortcode (positional) partial {{% icon icon=\"exclamation-triangle\" %}} {{% icon icon=\"angle-double-up\" %}} {{% icon icon=\"skull-crossbones\" %}} {{% icon exclamation-triangle %}} {{% icon angle-double-up %}} {{% icon skull-crossbones %}} {{ partial \"shortcodes/icon.html\" (dict \"page\" . \"icon\" \"exclamation-triangle\" )}} {{ partial \"shortcodes/icon.html\" (dict \"page\" . \"icon\" \"angle-double-up\" )}} {{ partial \"shortcodes/icon.html\" (dict \"page\" . \"icon\" \"skull-crossbones\" )}} Parameter Name Position Default Notes icon 1 \u003cempty\u003e Font Awesome icon name to be displayed. It will be displayed in the text color of its according context. Finding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.\nOnce on the Font Awesome page for a specific icon, for example the page for the heart, copy the icon name and paste into the Markdown content.\nCustomising Icons Font Awesome provides many ways to modify the icon\nChange color (by default the icon will inherit the parent color) Increase or decrease size Rotate Combine with other icons Check the full documentation on web fonts with CSS for more.\nExamples Standard Usage Built with {{% icon heart %}} by Relearn and Hugo Built with by Relearn and Hugo\nAdvanced HTML Usage While the shortcode simplifies using standard icons, the icon customization and other advanced features of the Font Awesome library require you to use HTML directly. Paste the \u003ci\u003e HTML into markup, and Font Awesome will load the relevant icon.\nBuilt with \u003ci class=\"fas fa-heart\"\u003e\u003c/i\u003e by Relearn and Hugo Built with by Relearn and Hugo\nTo use these native HTML elements in your Markdown, add this in your hugo.toml:\n[markup.goldmark.renderer] unsafe = true",
    "description": "Nice icons for your page",
    "tags": [],
    "title": "Icon",
    "uri": "/hugo-theme-relearn/shortcodes/icon/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The include shortcode includes other pages, resources or files from your project.\nUsage While the examples are using shortcodes with named parameter you are free to use positional as well or also call this shortcode from your own partials.\n​ shortcode shortcode (positional) partial {{% include file=\"shortcodes/include/INCLUDE_ME.md\" %}} {{% include \"shortcodes/include/INCLUDE_ME.md\" %}} {{ partial \"shortcodes/include .html\" (dict \"page\" . \"file\" \"shortcodes/include/INCLUDE_ME.md\" )}} The included files can even contain Markdown and will be taken into account when generating the table of contents.\nParameter Name Position Default Notes file 1 \u003cempty\u003e The path to the page, resource or file to be included. Page and resource paths adhere to Hugo’s logical path. If not found by logical path it falls back to Hugo’s build-in readFile function hidefirstheading 2 false When true and the included file contains headings, the first heading will be hidden. This comes in handy, eg. if you include otherwise standalone Markdown files. Examples Arbitrary Content {{% include \"shortcodes/include/INCLUDE_ME.md\" %}} You can add standard markdown syntax:\nmultiple paragraphs bullet point lists emphasized, bold and even bold emphasized text links etc.1 ...and even source code the possibilities are endless (almost - including other shortcodes may or may not work) (almost - including other shortcodes may or may not work)\nEt Cetera (English: /ɛtˈsɛtərə/), abbreviated to etc., etc, et cet., is a Latin expression that is used in English to mean “and other similar things”, or “and so forth” ↩︎",
    "description": "Displays content from other files",
    "tags": [],
    "title": "Include",
    "uri": "/hugo-theme-relearn/shortcodes/include/index.html"
  },
  {
    "breadcrumb": "Development",
    "content": "Semver This project tries to follow the semver policy - although not followed 100% in the past.\nUsually an entry of Breaking on the What’s new page causes a new major release number.\nAll other entries on the What’s new page will increase the minor release number.\nReleases resulting in a new major or minor number are called main release.\nReleases containing bugfixes only, are only increasing the patch release number. Those releases don’t result in announcements on the What’s new page.\nEntries on the What’s new page are checked and enforced during the version-release GitHub Action.\nManaging Issues Issues are categorized and managed by assigning labels to it.\nOnce working on an issue, assign it to a fitting maintainer.\nWhen done, close the ticket. Once an issue is closed, it needs to be assigned to next release milestone.\nA once released ticket is not allowed to be reopened and rereleased in a different milestone. This would cause the changelog to be changed even for the milestone the issue was previously released in. Instead write a new ticket.\nManaging Pull Requests If a PR is merged and closed it needs an accompanied issue assigned to. If there is no issue for a PR, the maintainer needs to create one.\nYou can assign multiple PRs to one issue as long as they belong together.\nUsually set the same labels and milestone for the PR as for the accompanied issue.\nLabels Kind An issue that results in changesets must have exactly one of the following labels. This needs to be assigned latest before release.\nLabel Description Changelog section documentation Improvements or additions to documentation - discussion This issue was converted to a discussion - task Maintenance work Maintenance feature New feature or request Features bug Something isn’t working Fixes Impact If the issue would cause a new main release due to semver semantics it needs one of the according labels and the matching badge on the What’s new page.\nLabel Description change Introduces changes with existing installations breaking Introduces breaking changes with existing installations Declination If an issue does not result in changesets but is closed anyways, it must have exactly one of the following labels.\nLabel Description duplicate This issue or pull request already exists invalid This doesn’t seem right support Request for achieving a special goal unresolved No progress on this issue update A change in behavior after updat wontchange This will not be worked on Halt You can assign one further label out of the following list to signal readers that development on an open issue is currently halted for different reasons.\nLabel Description blocked Depends on other issue to be fixed first idea A valuable idea that’s currently not worked on undecided No decision was made yet helpwanted Great idea, send in a PR needsfeedback Further information is needed 3rd-Party If the issue is not caused by a programming error in the themes own code, you can label the causing program or library.\nLabel Description asciidoc This is a topic related to processing of AsciiDoc browser This is a topic related to the browser but not the theme device This is a topic related to a certain device hugo This is a topic related to Hugo itself but not the theme mermaid This is a topic related to Mermaid itself but not the theme Making Releases A release is based on a milestone named like the release itself - just the version number, eg: 1.2.3. It’s in the maintainers responsibility to check semver semantics of the milestone’s name prior to release and change it if necessary.\nMaking releases is automated by the version-release GitHub Action. It requires the version number of the milestone that should be released. The release will be created from the main branch of the repository.\nTreat released milestones as immutable. Don’t rerelease an already released milestone. An already released milestone may already been consumed by your users.\nDuring execution of the action a few things are checked. If a check fails the action fails, resulting in no new release. You can correct the errors afterwards and rerun the action.\nThe following checks will be enforced\nthe milestone exists there is at least one closed issue assigned to the milestone all assigned issues for this milestone are closed if it’s a main release, there must be a new \u003cmajor\u003e.\u003cminor\u003e at the beginning of the What’s new page if it’s a patch release, there must be the \u003cmajor\u003e.\u003cminor\u003e from the previous release at the beginning of the What’s new page After a successful run of the action\nthe History page is updated, including release version, release date and text the What’s new page is updated, including release version, release date and text the version number for the \u003cmeta generator\u003e is updated the updated files are committed the milestone is closed the repository is tagged with the version number (eg. 1.2.3), the main version number (eg. 1.2.x) and the major version number (eg. 1.x) a new entry in the GitHub release list with the according changelog will be created the official documentation is built and deployed the version number for the \u003cmeta generator\u003e is updated to a temporary and committed (this helps to determine if users are running directly on the main branch or are using releases) a new milestone for the next patch release is created (this can later be renamed to a main release if necessary)",
    "description": "What to know as a maintainer",
    "tags": [],
    "title": "Maintaining",
    "uri": "/hugo-theme-relearn/dev/maintaining/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The math shortcode generates beautiful formatted math and chemical formulae using the MathJax library.\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ Usage While the examples are using shortcodes with named parameter it is recommended to use Markdown codefences instead. This is because more and more other software supports Markdown codefences (eg. GitHub) and so your markdown becomes more portable.\nYou are free to also call this shortcode from your own partials.\nMath is also usable without enclosing it in a shortcode or Markdown codefence but requires configuration by you. In this case no parameter from the below table are available.\n​ markdown shortcode partial passthrough ```math { align=\"center\" } $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ ``` {{\u003c math align=\"center\" \u003e}} $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ {{\u003c /math \u003e}} {{ partial \"shortcodes/math.html\" (dict \"page\" . \"content\" \"$$left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\" \"align\" \"center\" )}} $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ Parameter Name Default Notes align center Allowed values are left, center or right. \u003ccontent\u003e \u003cempty\u003e Your formulae. Configuration MathJax is configured with default settings but you can customize MathJax’s default settings for all of your files through a JSON object in your hugo.toml or override these settings per page through your pages frontmatter.\nThe JSON object of your hugo.toml / frontmatter is forwarded into MathJax’s configuration object.\nSee MathJax documentation for all allowed settings.\nGlobal Configuration File This example reflects the default configuration also used if you don’t define mathJaxInitialize\nhugo. toml yaml json [params] mathJaxInitialize = '{ \"tex\": { \"inlineMath\": [[\"\\(\", \"\\)\"], [\"$\", \"$\"]], displayMath: [[\"\\[\", \"\\]\"], [\"$$\", \"$$\"]] }, \"options\": { \"enableMenu\": false }' params: mathJaxInitialize: '{ \"tex\": { \"inlineMath\": [[\"\\(\", \"\\)\"], [\"$\", \"$\"]], displayMath: [[\"\\[\", \"\\]\"], [\"$$\", \"$$\"]] }, \"options\": { \"enableMenu\": false }' { \"params\": { \"mathJaxInitialize\": \"{ \\\"tex\\\": { \\\"inlineMath\\\": [[\\\"\\\\(\\\", \\\"\\\\)\\\"], [\\\"$\\\", \\\"$\\\"]], displayMath: [[\\\"\\\\[\\\", \\\"\\\\]\\\"], [\\\"$$\\\", \\\"$$\\\"]] }, \\\"options\\\": { \\\"enableMenu\\\": false }\" } } Page’s Frontmatter Usually you don’t need to redefine the global initialization settings for a single page. But if you do, you have repeat all the values from your global configuration you want to keep for a single page as well.\nEg. If you have redefined the delimiters to something exotic like @ symbols in your global config, but want to additionally align your math to the left for a specific page, you have to put this to your frontmatter:\n​ toml yaml json +++ mathJaxInitialize = '{ \"chtml\": { \"displayAlign\": \"left\" }, { \"tex\": { \"inlineMath\": [[\"\\(\", \"\\)\"], [\"@\", \"@\"]], displayMath: [[\"\\[\", \"\\]\"], [\"@@\", \"@@\"]] }, \"options\": { \"enableMenu\": false }' +++ --- mathJaxInitialize: '{ \"chtml\": { \"displayAlign\": \"left\" }, { \"tex\": { \"inlineMath\": [[\"\\(\", \"\\)\"], [\"@\", \"@\"]], displayMath: [[\"\\[\", \"\\]\"], [\"@@\", \"@@\"]] }, \"options\": { \"enableMenu\": false }' --- { \"mathJaxInitialize\": \"{ \\\"chtml\\\": { \\\"displayAlign\\\": \\\"left\\\" }, { \\\"tex\\\": { \\\"inlineMath\\\": [[\\\"\\\\(\\\", \\\"\\\\)\\\"], [\\\"@\\\", \\\"@\\\"]], displayMath: [[\\\"\\\\[\\\", \\\"\\\\]\\\"], [\\\"@@\\\", \\\"@@\\\"]] }, \\\"options\\\": { \\\"enableMenu\\\": false }\" } Passthrough Configuration You can use your math without enclosing it in a shortcode or Markdown codefence by using a passthrough configuration in your hugo.toml:\nhugo. toml yaml json [markup] [markup.goldmark] [markup.goldmark.extensions] [markup.goldmark.extensions.passthrough] enable = true [markup.goldmark.extensions.passthrough.delimiters] block = [['\\[', '\\]'], ['$$', '$$']] inline = [['\\(', '\\)'], ['$', '$']] markup: goldmark: extensions: passthrough: delimiters: block: - - \\[ - \\] - - $$ - $$ inline: - - \\( - \\) - - $ - $ enable: true { \"markup\": { \"goldmark\": { \"extensions\": { \"passthrough\": { \"delimiters\": { \"block\": [ [ \"\\\\[\", \"\\\\]\" ], [ \"$$\", \"$$\" ] ], \"inline\": [ [ \"\\\\(\", \"\\\\)\" ], [ \"$\", \"$\" ] ] }, \"enable\": true } } } } } In this case you have to tell the theme that your page contains math by setting this in your page’s frontmatter:\n​ toml yaml json +++ disableMathJax = false +++ --- disableMathJax: false --- { \"disableMathJax\": false } See the example on how it makes using math really easy.\nExamples Inline Math Inline math is generated if you use a single `$` as a delimiter around your formulae: {{\u003c math \u003e}}$\\sqrt{3}${{\u003c /math \u003e}} Inline math is generated if you use a single $ as a delimiter around your formulae: $\\sqrt{3}$\nBlocklevel Math with Right Alignment If you delimit your formulae by two consecutive `$$` it generates a new block. {{\u003c math align=\"right\" \u003e}} $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ {{\u003c /math \u003e}} If you delimit your formulae by two consecutive $$ it generates a new block.\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ Markdown Codefence You can also use Markdown codefences.\n```math $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ ``` $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ Passthrough This works for block as well as inline math but is only available if you are using the passthrough configuration.\nWith passthrough configuration you can just drop your math without enclosed by shortcodes or Markdown codefences but no settings from the parameter table are available.\n$$\\left| \\begin{array}{cc} a \u0026 b \\\\ c \u0026 d \\end{array}\\right|$$ $$\\left| \\begin{array}{cc} a \u0026 b \\\\ c \u0026 d \\end{array}\\right|$$Chemical Formulae {{\u003c math \u003e}} $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ {{\u003c /math \u003e}} $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$",
    "description": "Beautiful math and chemical formulae",
    "tags": [],
    "title": "Math",
    "uri": "/hugo-theme-relearn/shortcodes/math/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The mermaid shortcode generates diagrams and flowcharts from text, in a similar manner as Markdown using the Mermaid library.\ngraph LR; If --\u003e Then Then --\u003e Else Usage While the examples are using shortcodes with named parameter it is recommended to use Markdown codefences instead. This is because more and more other software supports Mermaid Markdown codefences (eg. GitHub) and so your markdown becomes more portable.\nYou are free to also call this shortcode from your own partials.\n​ markdown shortcode partial ```mermaid { align=\"center\" zoom=\"true\" } graph LR; If --\u003e Then Then --\u003e Else ``` {{\u003c mermaid align=\"center\" zoom=\"true\" \u003e}} graph LR; If --\u003e Then Then --\u003e Else {{\u003c /mermaid \u003e}} {{ partial \"shortcodes/mermaid.html\" (dict \"page\" . \"content\" \"graph LR;\\nIf --\u003e Then\\nThen --\u003e Else\" \"align\" \"center\" \"zoom\" \"true\" )}} The generated graphs can be panned by dragging them and zoomed by using the mousewheel. On mobile devices you can use finger gestures.\nParameter Name Default Notes align center Allowed values are left, center or right. zoom see notes Whether the graph is pan- and zoomable.\nIf not set the value is determined by the mermaidZoom setting of the site or the pages frontmatter or false if not set at all.\n- false: no pan or zoom\n- true: pan and zoom active \u003ccontent\u003e \u003cempty\u003e Your Mermaid graph. Configuration Mermaid is configured with default settings. You can customize Mermaid’s default settings for all of your files through a JSON object in your hugo.toml, override these settings per page through your pages frontmatter or override these setting per diagramm through diagram directives.\nThe JSON object of your hugo.toml / frontmatter is forwarded into Mermaid’s mermaid.initialize() function.\nSee Mermaid documentation for all allowed settings.\nThe theme setting can also be set by your used color variant. This will be the sitewide default and can - again - be overridden by your settings in hugo.toml, frontmatter or diagram directives.\nGlobal Configuration File hugo. toml yaml json [params] mermaidInitialize = '{ \"theme\": \"dark\" }' mermaidZoom = true params: mermaidInitialize: '{ \"theme\": \"dark\" }' mermaidZoom: true { \"params\": { \"mermaidInitialize\": \"{ \\\"theme\\\": \\\"dark\\\" }\", \"mermaidZoom\": true } } Page’s Frontmatter ​ toml yaml json +++ mermaidInitialize = '{ \"theme\": \"dark\" }' mermaidZoom = true +++ --- mermaidInitialize: '{ \"theme\": \"dark\" }' mermaidZoom: true --- { \"mermaidInitialize\": \"{ \\\"theme\\\": \\\"dark\\\" }\", \"mermaidZoom\": true } Examples Flowchart with YAML-Title {{\u003c mermaid \u003e}} --- title: Example Diagram --- graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{\u003cstrong\u003eDecision\u003c/strong\u003e} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} --- title: Example Diagram --- graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{\u003cstrong\u003eDecision\u003c/strong\u003e} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Sequence Diagram with Configuration Directive {{\u003c mermaid \u003e}} %%{init:{\"fontFamily\":\"monospace\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} %%{init:{\"fontFamily\":\"monospace\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! Class Diagram with Markdown Codefence Syntax ```mermaid classDiagram Animal \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } ``` classDiagram Animal \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } State Diagram Aligned to the Right {{\u003c mermaid align=\"right\" \u003e}} stateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open --\u003e closed: Close closed --\u003e locked: Lock locked --\u003e closed: Unlock closed --\u003e open: Open {{\u003c /mermaid \u003e}} stateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open --\u003e closed: Close closed --\u003e locked: Lock locked --\u003e closed: Unlock closed --\u003e open: Open Entity Relationship Model with Non-Default Mermaid Theme {{\u003c mermaid \u003e}} %%{init:{\"theme\":\"forest\"}}%% erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" {{\u003c /mermaid \u003e}} %%{init:{\"theme\":\"forest\"}}%% erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" User Journey {{\u003c mermaid \u003e}} journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 3: Me {{\u003c /mermaid \u003e}} journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 3: Me GANTT Chart {{\u003c mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to Mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to Mermaid :1d {{\u003c /mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to Mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to Mermaid :1d Pie Chart without Zoom {{\u003c mermaid zoom=\"false\" \u003e}} pie title Pets adopted by volunteers \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 {{\u003c /mermaid \u003e}} pie title Pets adopted by volunteers \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 Quadrant Chart {{\u003c mermaid \u003e}} pie title Pets adopted by volunteers title Reach and engagement of campaigns x-axis Low Reach --\u003e High Reach y-axis Low Engagement --\u003e High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] {{\u003c /mermaid \u003e}} quadrantChart title Reach and engagement of campaigns x-axis Low Reach --\u003e High Reach y-axis Low Engagement --\u003e High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] Requirement Diagram {{\u003c mermaid \u003e}} requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } element test_entity { type: simulation } test_entity - satisfies -\u003e test_req {{\u003c /mermaid \u003e}} requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } element test_entity { type: simulation } test_entity - satisfies -\u003e test_req Git Graph {{\u003c mermaid \u003e}} gitGraph commit commit branch develop checkout develop commit commit checkout main merge develop commit commit {{\u003c /mermaid \u003e}} gitGraph commit commit branch develop checkout develop commit commit checkout main merge develop commit commit C4 Diagrams {{\u003c mermaid \u003e}} C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, \u003cbr/\u003e with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") {{\u003c /mermaid \u003e}} C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, \u003cbr/\u003e with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") Mindmaps {{\u003c mermaid \u003e}} mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness\u003cbr/\u003eand features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid {{\u003c /mermaid \u003e}} mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness\u003cbr/\u003eand features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid Timeline {{\u003c mermaid \u003e}} timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter {{\u003c /mermaid \u003e}} timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter Sankey {{\u003c mermaid \u003e}} sankey-beta %% source,target,value Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 {{\u003c /mermaid \u003e}} sankey-beta %% source,target,value Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 XYChart {{\u003c mermaid \u003e}} xychart-beta title \"Sales Revenue\" x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec] y-axis \"Revenue (in $)\" 4000 --\u003e 11000 bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000] line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000] {{\u003c /mermaid \u003e}} xychart-beta title \"Sales Revenue\" x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec] y-axis \"Revenue (in $)\" 4000 --\u003e 11000 bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000] line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000] Block Diagram {{\u003c mermaid \u003e}} block-beta columns 1 db((\"DB\")) blockArrowId6\u003c[\"\u0026nbsp;\u0026nbsp;\u0026nbsp;\"]\u003e(down) block:ID A B[\"A wide one in the middle\"] C end space D ID --\u003e D C --\u003e D style B fill:#969,stroke:#333,stroke-width:4px {{\u003c /mermaid \u003e}} block-beta columns 1 db((\"DB\")) blockArrowId6\u003c[\"\u0026nbsp;\u0026nbsp;\u0026nbsp;\"]\u003e(down) block:ID A B[\"A wide one in the middle\"] C end space D ID --\u003e D C --\u003e D style B fill:#969,stroke:#333,stroke-width:4px Packet {{\u003c mermaid \u003e}} --- title: \"TCP Packet\" --- packet-beta 0-15: \"Source Port\" 16-31: \"Destination Port\" 32-63: \"Sequence Number\" 64-95: \"Acknowledgment Number\" 96-99: \"Data Offset\" 100-105: \"Reserved\" 106: \"URG\" 107: \"ACK\" 108: \"PSH\" 109: \"RST\" 110: \"SYN\" 111: \"FIN\" 112-127: \"Window\" 128-143: \"Checksum\" 144-159: \"Urgent Pointer\" 160-191: \"(Options and Padding)\" 192-255: \"Data (variable length)\" {{\u003c /mermaid \u003e}} --- title: \"TCP Packet\" --- packet-beta 0-15: \"Source Port\" 16-31: \"Destination Port\" 32-63: \"Sequence Number\" 64-95: \"Acknowledgment Number\" 96-99: \"Data Offset\" 100-105: \"Reserved\" 106: \"URG\" 107: \"ACK\" 108: \"PSH\" 109: \"RST\" 110: \"SYN\" 111: \"FIN\" 112-127: \"Window\" 128-143: \"Checksum\" 144-159: \"Urgent Pointer\" 160-191: \"(Options and Padding)\" 192-255: \"Data (variable length)\" Architecture {{\u003c mermaid \u003e}} architecture-beta group api(cloud)[API] service db(database)[Database] in api service disk1(disk)[Storage] in api service disk2(disk)[Storage] in api service server(server)[Server] in api db:L -- R:server disk1:T -- B:server disk2:T -- B:db {{\u003c /mermaid \u003e}} architecture-beta group api(cloud)[API] service db(database)[Database] in api service disk1(disk)[Storage] in api service disk2(disk)[Storage] in api service server(server)[Server] in api db:L -- R:server disk1:T -- B:server disk2:T -- B:db",
    "description": "Generate diagrams and flowcharts from text",
    "tags": [],
    "title": "Mermaid",
    "uri": "/hugo-theme-relearn/shortcodes/mermaid/index.html"
  },
  {
    "breadcrumb": "Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag :: Non-Hidden",
    "uri": "/hugo-theme-relearn/tags/non-hidden/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The notice shortcode shows various types of disclaimers with adjustable color, title and icon to help you structure your page.\nThere may be pirates It is all about the boxes.\nUsage While the examples are using shortcodes with named parameter you are free to use positional as well, use it as GitHub or Obsidian styled alerts and also call this shortcode from your own partials.\n​ markdown shortcode shortcode (positional) partial \u003e [!primary] There may be pirates \u003e It is all about the boxes. {{% notice style=\"primary\" title=\"There may be pirates\" icon=\"skull-crossbones\" %}} It is all about the boxes. {{% /notice %}} {{% notice primary \"There may be pirates\" \"skull-crossbones\" %}} It is all about the boxes. {{% /notice %}} {{ partial \"shortcodes/notice.html\" (dict \"page\" . \"style\" \"primary\" \"title\" \"There may be pirates\" \"icon\" \"skull-crossbones\" \"content\" \"It is all about the boxes.\" )}} Parameter Name Position Default Notes style 1 default The style scheme used for the box.\n- by severity: caution, important, info, note, tip, warning\n- by brand color: primary, secondary, accent\n- by color: blue, cyan, green, grey, magenta, orange, red\n- by special color: default, transparent, code\nYou can also define your own styles. color see notes The CSS color value to be used. If not set, the chosen color depends on the style. Any given value will overwrite the default.\n- for severity styles: a nice matching color for the severity\n- for all other styles: the corresponding color title 2 see notes Arbitrary text for the box title. Depending on the style there may be a default title. Any given value will overwrite the default.\n- for severity styles: the matching title for the severity\n- for all other styles: \u003cempty\u003e\nIf you want no title for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) icon 3 see notes Font Awesome icon name set to the left of the title. Depending on the style there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching icon for the severity\n- for all other styles: \u003cempty\u003e\nIf you want no icon for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) expanded \u003cempty\u003e Whether to draw an expander and how the content is displayed.\n- \u003cempty\u003e: no expander is drawn and the content is permanently shown\n- true: the expander is drawn and the content is initially shown\n- false: the expander is drawn and the content is initially hidden \u003ccontent\u003e \u003cempty\u003e Arbitrary text to be displayed in box. Configuration Besides the predefined style values, you are able to define your own in the hugo.toml.\nhugo. toml yaml json [params] [[params.boxStyle]] color = 'gold' i18n = '' icon = 'rainbow' identifier = 'magic' title = 'Magic' params: boxStyle: - color: gold i18n: \"\" icon: rainbow identifier: magic title: Magic { \"params\": { \"boxStyle\": [ { \"color\": \"gold\", \"i18n\": \"\", \"icon\": \"rainbow\", \"identifier\": \"magic\", \"title\": \"Magic\" } ] } } The style parameter must match the identifier. The title for the style will be determined from the title. If no title but a i18n is set, the title will be taken from the translation files by that key. The title may be empty in which case, the box does not contain a default title. icon and color are working similar.\nYou can also redefine the predefined styles if you’re not satisfied with the default values.\nBelow is a usage example.\nExamples By Severity Using Markdown Syntax \u003e [!CAUTION] \u003e Advises about risks or negative outcomes of certain actions. \u003e [!IMPORTANT] \u003e Key information users need to know to achieve their goal. \u003e [!INFO] \u003e Information that users \u003cins\u003e_might_\u003c/ins\u003e find interesting. \u003e [!NOTE] \u003e Useful information that users should know, even when skimming content. \u003e [!TIP] \u003e Helpful advice for doing things better or more easily. \u003e [!WARNING] \u003e Urgent info that needs immediate user attention to avoid problems. Caution Advises about risks or negative outcomes of certain actions.\nImportant Key information users need to know to achieve their goal.\nInfo Information that users might find interesting.\nNote Useful information that users should know, even when skimming content.\nTip Helpful advice for doing things better or more easily.\nWarning Urgent info that needs immediate user attention to avoid problems.\nBy Brand Colors with Title and Icon Variantion {{% notice style=\"primary\" title=\"Primary\" %}} A **primary** disclaimer {{% /notice %}} {{% notice style=\"secondary\" title=\"Secondary\" %}} A **secondary** disclaimer {{% /notice %}} {{% notice style=\"accent\" icon=\"stopwatch\" %}} An **accent** disclaimer {{% /notice %}} Primary A primary disclaimer\nSecondary A secondary disclaimer\nAn accent disclaimer\nBy Color {{% notice style=\"blue\" title=\"Blue\"%}} A **blue** disclaimer {{% /notice %}} {{% notice style=\"cyan\" title=\"Cyan\" %}} A **cyan** disclaimer {{% /notice %}} {{% notice style=\"green\" title=\"Green\" %}} A **green** disclaimer {{% /notice %}} {{% notice style=\"grey\" icon=\"bug\" %}} A **grey** disclaimer {{% /notice %}} {{% notice style=\"magenta\" title=\"Magenta\" %}} A **magenta** disclaimer {{% /notice %}} {{% notice style=\"orange\" title=\"Orange\" icon=\"bug\" %}} A **orange** disclaimer {{% /notice %}} {{% notice style=\"red\" title=\"Red\" %}} A **red** disclaimer {{% /notice %}} Blue A blue disclaimer\nCyan A cyan disclaimer\nGreen A green disclaimer\nA grey disclaimer\nMagenta A magenta disclaimer\nOrange A orange disclaimer\nRed A red disclaimer\nBy Special Color {{% notice style=\"default\" title=\"Default\" icon=\"skull-crossbones\" %}} Just some grey default color. {{% /notice %}} {{% notice style=\"code\" title=\"Code\" icon=\"skull-crossbones\" %}} Colored like a code fence. {{% /notice %}} {{% notice style=\"transparent\" title=\"Transparent\" icon=\"skull-crossbones\" %}} No visible borders. {{% /notice %}} Default Just some grey default color.\nCode Colored like a code fence.\nTransparent No visible borders.\nVarious Features With User-Defined Color, Font Awesome Brand Icon and Markdown in Title and Content {{% notice color=\"fuchsia\" title=\"**Hugo** is _awesome_\" icon=\"fa-fw fab fa-hackerrank\" %}} You can add standard markdown syntax: - multiple paragraphs - bullet point lists - _emphasized_, **bold** and even **_bold emphasized_** text - [links](https://example.com) - etc.[^etc] [^etc]: Et Cetera (English: /ɛtˈsɛtərə/), abbreviated to etc., etc, et cet., is a Latin expression that is used in English to mean \"and other similar things\", or \"and so forth\" ```plaintext ...and even source code ``` \u003e the possibilities are endless (almost - including other shortcodes may or may not work) (almost - including other shortcodes may or may not work) {{% /notice %}} Hugo is awesome You can add standard markdown syntax:\nmultiple paragraphs bullet point lists emphasized, bold and even bold emphasized text links etc.1 ...and even source code the possibilities are endless (almost - including other shortcodes may or may not work) (almost - including other shortcodes may or may not work)\nEt Cetera (English: /ɛtˈsɛtərə/), abbreviated to etc., etc, et cet., is a Latin expression that is used in English to mean “and other similar things”, or “and so forth” ↩︎\nExpandable Content Area {{% notice style=\"green\" title=\"Expand me...\" expanded=\"true\" %}} No need to press you! {{% /notice %}} {{% notice style=\"red\" title=\"Expand me...\" expanded=\"false\" %}} Thank you! {{% /notice %}} Expand me… No need to press you!\nExpand me… Thank you!\nNo Content or No Title {{% notice style=\"accent\" title=\"Just a bar\" %}} {{% /notice %}} {{% notice style=\"accent\" %}} Just a box {{% /notice %}} Just a bar Just a box\nMarkdown Styled Alerts \u003e [!caution] Callouts can have custom titles \u003e Like this one. \u003e [!caution] Title-only callout \u003e [!note]- Are callouts foldable? \u003e Yes! In a foldable callout, the contents are hidden when the callout is collapsed \u003e [!note]+ Are callouts foldable? \u003e Yes! In a foldable callout, the contents are hidden when the callout is collapsed \u003e [!info] Can callouts be nested? \u003e \u003e [!important] Yes!, they can. \u003e \u003e \u003e [!tip] You can even use multiple layers of nesting. Callouts can have custom titles Like this one.\nTitle-only callout Are callouts foldable? Yes! In a foldable callout, the contents are hidden when the callout is collapsed\nAre callouts foldable? Yes! In a foldable callout, the contents are hidden when the callout is collapsed\nCan callouts be nested? Yes!, they can. You can even use multiple layers of nesting. Code with Collapsed Colored Borders \u003e [!secondary] \u003e ```c \u003e // With colored border in Markdown syntax \u003e printf(\"Hello World!\"); \u003e ``` {{% notice style=\"red\" %}} ```c // With colored border in Shortcode syntax printf(\"Hello World!\"); ``` {{% /notice %}} // With colored border in Markdown syntax printf(\"Hello World!\"); // With colored border in Shortcode syntax printf(\"Hello World!\"); User-defined Style Self-defined styles can be configured in your hugo.toml and used for every shortcode, that accepts a style parameter.\n\u003e [!magic] \u003e Maaagic! Magic Maaagic!",
    "description": "Disclaimers to help you structure your page",
    "tags": [],
    "title": "Notice",
    "uri": "/hugo-theme-relearn/shortcodes/notice/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The openapi shortcode uses the Swagger UI library to display your OpenAPI / Swagger specifications.\nUsage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\n​ shortcode partial {{\u003c openapi src=\"https://petstore3.openapi.io/api/v3/openapi.json\" \u003e}} {{ partial \"shortcodes/openapi.html\" (dict \"page\" . \"src\" \"https://petstore3.openapi.io/api/v3/openapi.json\" )}} Parameter Name Default Notes src \u003cempty\u003e The path to the to the OpenAPI specification resource or URL to be used. Resource paths adhere to Hugo’s logical path. Note If you want to print out (or generate a PDF) from your OpenAPI documentation, don’t initiate printing directly from the page because the elements are optimized for interactive usage in a browser.\nInstead, open the print preview in your browser and initiate printing from that page. This page is optimized for reading and expands most of the available sections.\nExample Using Local File {{\u003c openapi src=\"petstore.json\" \u003e}}",
    "description": "UI for your OpenAPI / Swagger specifications",
    "tags": [],
    "title": "OpenAPI",
    "uri": "/hugo-theme-relearn/shortcodes/openapi/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 1",
    "content": "This is a demo child page with a hidden child. You can still access the hidden child directly or via the search.\nSubpages of this page page 1-1-1 (hidden) page 1-1-2 (headless) page 1-1-3",
    "description": "This is a demo child page",
    "tags": [
      "Children",
      "Non-Hidden"
    ],
    "title": "page 1-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 1 \u003e page 1-1",
    "content": "This is a hidden demo child page. This page and all its children are hidden in the menu, arrow navigation and children shortcode as long as you aren’t viewing this page or its children directly.\nSubpages of this page page 1-1-1-1",
    "description": "This is a hidden demo child page",
    "tags": [
      "Children",
      "a secret"
    ],
    "title": "page 1-1-1 (hidden)",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-1/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 1 \u003e page 1-1 \u003e page 1-1-1 (hidden)",
    "content": "This is a non-hidden demo child page of a hidden parent page with a hidden child. You can still access the hidden child directly or via the search.\nSubpages of this page page 1-1-1-1-1 (hidden)",
    "description": "This is a non-hidden demo child page of a hidden parent page",
    "tags": [
      "Children",
      "a secret"
    ],
    "title": "page 1-1-1-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 1 \u003e page 1-1 \u003e page 1-1-1 (hidden) \u003e page 1-1-1-1",
    "content": "This is a hidden demo child page. This page and all its children are hidden in the menu, arrow navigation and children shortcode as long as you aren’t viewing this page or its children directly.\nSubpages of this page page 1-1-1-1-1-1",
    "description": "This is a hidden demo child page",
    "tags": [
      "Children",
      "a secret"
    ],
    "title": "page 1-1-1-1-1 (hidden)",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 1 \u003e page 1-1 \u003e page 1-1-1 (hidden) \u003e page 1-1-1-1 \u003e page 1-1-1-1-1 (hidden)",
    "content": "This is a non-hidden demo child page of a hidden parent page.",
    "description": "This is a non-hidden demo child page of a hidden parent page",
    "tags": [
      "Children",
      "a secret"
    ],
    "title": "page 1-1-1-1-1-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/children-1-1-1-1-1-1/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 1 \u003e page 1-1 \u003e page 1-1-2 (headless)",
    "content": "This is a plain demo child page.",
    "description": "This is a demo child page",
    "tags": [
      "Children",
      "Non-Hidden"
    ],
    "title": "page 1-1-2-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-2/children-1-1-2-1/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 1 \u003e page 1-1 \u003e page 1-1-2 (headless)",
    "content": "This is a plain demo child page.",
    "description": "This is a demo child page",
    "tags": [
      "Children",
      "Non-Hidden"
    ],
    "title": "page 1-1-2-2",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-2/children-1-1-2-2/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 1 \u003e page 1-1",
    "content": "This is a plain demo child page.",
    "description": "This is a demo child page",
    "tags": [
      "Children",
      "Non-Hidden"
    ],
    "title": "page 1-1-3",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-3/index.html"
  },
  {
    "breadcrumb": "Shortcodes \u003e Children \u003e page 3",
    "content": "This is a plain demo child page.",
    "description": "This is a plain page test nested in a parent",
    "tags": [
      "Children",
      "Non-Hidden"
    ],
    "title": "page 3-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-3/test3/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The resources shortcode displays the titles of resources contained in a page bundle.\nAttachments hugo.png (17 KB) MaybeTreasure.txt (23 B) NoTreasure.en.txt (23 B) Treasure.pir.txt (31 B) Usage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\n​ shortcode partial {{% resources sort=\"asc\" /%}} {{ partial \"shortcodes/resources.html\" (dict \"page\" . \"sort\" \"asc\" )}} Multilanguage features are not supported directly by the shortcode but rely on Hugo’s handling for resource translations applied when the theme iterates over all available resources.\nParameter Name Default Notes style transparent The style scheme used for the box.\n- by severity: caution, important, info, note, tip, warning\n- by brand color: primary, secondary, accent\n- by color: blue, cyan, green, grey, magenta, orange, red\n- by special color: default, transparent, code\nYou can also define your own styles. color see notes The CSS color value to be used. If not set, the chosen color depends on the style. Any given value will overwrite the default.\n- for severity styles: a nice matching color for the severity\n- for all other styles: the corresponding color title see notes Arbitrary text for the box title. Depending on the style there may be a default title. Any given value will overwrite the default.\n- for severity styles: the matching title for the severity\n- for all other styles: Resources\nIf you want no title for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) icon see notes Font Awesome icon name set to the left of the title. Depending on the style there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching icon for the severity\n- for all other styles: paperclip\nIf you want no icon, you have to set this parameter to \" \" (a non empty string filled with spaces) expanded \u003cempty\u003e Whether to draw an expander and how the resource list is displayed.\n- \u003cempty\u003e: no expander is drawn and the resource list is permanently shown\n- true: the expander is drawn and the resource list is initially shown\n- false: the expander is drawn and the resource list is initially hidden sort asc Sorting the output in ascending or descending order. pattern .* A regular expressions, used to filter the resources by name. For example:\n- to match a file suffix of ‘jpg’, use .*\\.jpg (not *.\\.jpg)\n- to match file names ending in jpg or png, use .*\\.(jpg|png) Examples Custom Title, List of Resources Ending in png, jpg or gif {{% resources title=\"Related **files**\" pattern=\".*\\.(png|jpg|gif)\" /%}} Related files hugo.png (17 KB) Info Styled Box, Descending Sort Order {{% resources style=\"info\" sort=\"desc\" /%}} Info Treasure.pir.txt (31 B) NoTreasure.en.txt (23 B) MaybeTreasure.txt (23 B) hugo.png (17 KB) With User-Defined Color and Font Awesome Brand Icon {{% resources color=\"fuchsia\" icon=\"fa-fw fab fa-hackerrank\" /%}} Attachments hugo.png (17 KB) MaybeTreasure.txt (23 B) NoTreasure.en.txt (23 B) Treasure.pir.txt (31 B) Expander with Initially Hidden Resource List {{% resources style=\"primary\" expanded=\"false\" /%}} Attachments hugo.png (17 KB) MaybeTreasure.txt (23 B) NoTreasure.en.txt (23 B) Treasure.pir.txt (31 B) Style, Color, Title and Icons For further examples for style, color, title and icon, see the notice shortcode documentation. The parameter are working the same way for both shortcodes, besides having different defaults.",
    "description": "List resources contained in a page bundle",
    "tags": [],
    "title": "Resources",
    "uri": "/hugo-theme-relearn/shortcodes/resources/index.html"
  },
  {
    "breadcrumb": "Development",
    "content": "Sometimes screenshots need to be redone. This page explains how to create the different screenshots, tools and settings\nCommon Creation:\nUse English translation Empty search Remove history checkmarks but leave it on the page thats used for the screenshot After resize of the page into the required resolution, reload the page to have all scrollbars in default loading position Demo Screenshot Content:\nA meaningful full-screen screenshot of an interesting page.\nThe content should be:\ntimeless: not showing any dates or often edited content interesting: show a bunch of interesting elements like headings, code, etc balanced: no cluttering with overpresent elements or coloring aligned: aligned outlines Used by:\nHugo Themes info: https://themes.gohugo.io/themes/hugo-theme-relearn/ 1000 x 1500 @ 1 (images/screenshot.png) Hugo Themes gallery: https://themes.gohugo.io/tags/docs/ 900 x 600 @ 1 (images/tn.png) Page URL: Screenshot Link\nCreation:\nsave as images/screenshot.png from original screenshot, scale to 900 x 600 and save as images/tn.png Remarks:\nThe locations are mandatory due to Hugo’s theme site builder.\nPreview images/screenshot.png:\nPreview images/tn.png:\nHero Image Content:\nShow the Demo Screenshot page on different devices and different themes. Composition of the different device screenshots into a template.\nThe content should be:\nconsistent: always use the same page for all devices pleasing: use a delightful background Used by:\nHugo Themes notes: https://themes.gohugo.io/themes/hugo-theme-relearn/ 1280 x 640 GitHub project site: https://github.com/McShelby/hugo-theme-relearn 1280 x 640 GitHub social media preview: https://github.com/McShelby/hugo-theme-relearn/settings 1280 x 640 Page URL: Hero Image Link\nCreation:\nTemplate: http://www.pixeden.com/psd-web-elements/psd-screen-web-showcase Desktop: light theme 1440 x 900 @ 1 Tablet: light theme 778 x 1038 @ 1 Phone: dark theme 450 x 801 @ .666 From original template resize to 3000 x 1500 offset y: -330, scale to 1280 x 640 and save as images/hero.png Preview images/hero.png:",
    "description": "Recipe to create various documentation screenshots",
    "tags": [],
    "title": "Screenshots",
    "uri": "/hugo-theme-relearn/dev/screenshots/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The siteparam shortcode prints values of site params.\nUsage While the examples are using shortcodes with named parameter you are free to use positional as well or call this shortcode from your own partials.\n​ shortcode shortcode (positional) partial {{% siteparam name=\"editURL\" %}} {{% siteparam \"editURL\" %}} {{ partial \"shortcodes/siteparam.html\" (dict \"page\" . \"name\" \"editURL\" )}} Parameter Name Position Default Notes name 1 \u003cempty\u003e The name of the site param to be displayed. Examples editURL from hugo.toml `editURL` value: {{% siteparam name=\"editURL\" %}} editURL value: https://github.com/McShelby/hugo-theme-relearn/edit/main/exampleSite/content/${FilePath}\nNested parameter with Markdown and HTML formatting To use formatted parameter, add this in your hugo.toml:\nhugo. toml yaml json [markup] [markup.goldmark] [markup.goldmark.renderer] unsafe = true markup: goldmark: renderer: unsafe: true { \"markup\": { \"goldmark\": { \"renderer\": { \"unsafe\": true } } } } Now values containing Markdown will be formatted correctly.\nhugo. toml yaml json [params] [params.siteparam] [params.siteparam.test] text = 'A **nested** parameter \u003cb\u003ewith\u003c/b\u003e formatting' params: siteparam: test: text: A **nested** parameter \u003cb\u003ewith\u003c/b\u003e formatting { \"params\": { \"siteparam\": { \"test\": { \"text\": \"A **nested** parameter \\u003cb\\u003ewith\\u003c/b\\u003e formatting\" } } } } Formatted parameter: {{% siteparam name=\"siteparam.test.text\" %}} Formatted parameter: A nested option \u003cb\u003ewith\u003c/b\u003e formatting",
    "description": "Get value of site params",
    "tags": [],
    "title": "SiteParam",
    "uri": "/hugo-theme-relearn/shortcodes/siteparam/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "You can use a tab shortcode to display a single tab.\nThis is especially useful if you want to flag your code example with an explicit language.\nIf you want multiple tabs grouped together you can wrap your tabs into the tabs shortcode.\n​ c printf(\"Hello World!\"); Usage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\n​ shortcode partial {{% tab title=\"c\" %}} ```c printf(\"Hello World!\"); ``` {{% /tab %}} {{ partial \"shortcodes/tab.html\" (dict \"page\" . \"title\" \"c\" \"content\" (\"```c\\nprintf(\\\"Hello World!\\\")\\n```\" | .RenderString) )}} Parameter Name Default Notes style see notes The style scheme used for the tab. If you don’t set a style and you display a single code block inside of the tab, its default styling will adapt to that of a code block. Otherwise default is used.\n- by severity: caution, important, info, note, tip, warning\n- by brand color: primary, secondary, accent\n- by color: blue, cyan, green, grey, magenta, orange, red\n- by special color: default, transparent, code\nYou can also define your own styles. color see notes The CSS color value to be used. If not set, the chosen color depends on the style. Any given value will overwrite the default.\n- for severity styles: a nice matching color for the severity\n- for all other styles: the corresponding color title see notes Arbitrary title for the tab. Depending on the style there may be a default title. Any given value will overwrite the default.\n- for severity styles: the matching title for the severity\n- for all other styles: \u003cempty\u003e\nIf you want no title for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) icon see notes Font Awesome icon name set to the left of the title. Depending on the style there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching icon for the severity\n- for all other styles: \u003cempty\u003e\nIf you want no icon for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) \u003ccontent\u003e \u003cempty\u003e Arbitrary text to be displayed in the tab. Examples Single Code Block with Collapsed Margins {{% tab title=\"Code\" %}} ```python printf(\"Hello World!\"); ``` {{% /tab %}} ​ Code printf(\"Hello World!\"); Mixed Markdown Content {{% tab title=\"_**Mixed**_\" %}} A tab can not only contain code but arbitrary text. In this case text **and** code will get a margin. ```python printf(\"Hello World!\"); ``` {{% /tab %}} ​ Mixed A tab can not only contain code but arbitrary text. In this case text and code will get a margin.\nprintf(\"Hello World!\"); Understanding style and color Behavior The style parameter affects how the color parameter is applied.\n{{\u003c tabs \u003e}} {{% tab title=\"just colored style\" style=\"blue\" %}} The `style` parameter is set to a color style. This will set the background to a lighter version of the chosen style color as configured in your theme variant. {{% /tab %}} {{% tab title=\"just color\" color=\"blue\" %}} Only the `color` parameter is set. This will set the background to a lighter version of the chosen CSS color value. {{% /tab %}} {{% tab title=\"default style and color\" style=\"default\" color=\"blue\" %}} The `style` parameter affects how the `color` parameter is applied. The `default` style will set the background to your `--MAIN-BG-color` as configured for your theme variant resembling the default style but with different color. {{% /tab %}} {{% tab title=\"just severity style\" style=\"info\" %}} The `style` parameter is set to a severity style. This will set the background to a lighter version of the chosen style color as configured in your theme variant and also affects the chosen icon. {{% /tab %}} {{% tab title=\"severity style and color\" style=\"info\" color=\"blue\" %}} The `style` parameter affects how the `color` parameter is applied. This will set the background to a lighter version of the chosen CSS color value and also affects the chosen icon. {{% /tab %}} {{\u003c /tabs \u003e}} ​ just colored style just color default style and color just severity style severity style and color The style parameter is set to a color style.\nThis will set the background to a lighter version of the chosen style color as configured in your theme variant.\nOnly the color parameter is set.\nThis will set the background to a lighter version of the chosen CSS color value.\nThe style parameter affects how the color parameter is applied.\nThe default style will set the background to your --MAIN-BG-color as configured for your theme variant resembling the default style but with different color.\nThe style parameter is set to a severity style.\nThis will set the background to a lighter version of the chosen style color as configured in your theme variant and also affects the chosen icon.\nThe style parameter affects how the color parameter is applied.\nThis will set the background to a lighter version of the chosen CSS color value and also affects the chosen icon.",
    "description": "Show content in a single tab",
    "tags": [],
    "title": "Tab",
    "uri": "/hugo-theme-relearn/shortcodes/tab/index.html"
  },
  {
    "breadcrumb": "Shortcodes",
    "content": "The tabs shortcode displays arbitrary content in an unlimited number of tabs.\nThis comes in handy eg. for providing code snippets for multiple languages.\nIf you just want a single tab you can instead call the tab shortcode standalone.\nhello. py sh c print(\"Hello World!\") echo \"Hello World!\" printf(\"Hello World!\"); Usage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\nSee the tab shortcode for a description of the parameter for nested tabs.\n​ shortcode partial {{\u003c tabs title=\"hello.\" \u003e}} {{% tab title=\"py\" %}} ```python print(\"Hello World!\") ``` {{% /tab %}} {{% tab title=\"sh\" %}} ```bash echo \"Hello World!\" ``` {{% /tab %}} {{% tab title=\"c\" %}} ```c printf\"Hello World!\"); ``` {{% /tab %}} {{\u003c /tabs \u003e}} {{ partial \"shortcodes/tabs.html\" (dict \"page\" . \"title\" \"hello.\" \"content\" (slice (dict \"title\" \"py\" \"content\" (\"```python\\nprint(\\\"Hello World!\\\")\\n```\" | .RenderString) ) (dict \"title\" \"sh\" \"content\" (\"```bash\\necho \\\"Hello World!\\\"\\n```\" | .RenderString) ) (dict \"title\" \"c\" \"content\" (\"```c\\nprintf(\\\"Hello World!\\\");\\n```\" | .RenderString) ) ) )}} Parameter Name Default Notes groupid \u003crandom\u003e Arbitrary name of the group the tab view belongs to.\nTab views with the same groupid sychronize their selected tab. The tab selection is restored automatically based on the groupid for tab view. If the selected tab can not be found in a tab group the first tab is selected instead.\nThis sychronization applies to the whole site! style \u003cempty\u003e Sets a default value for every contained tab. Can be overridden by each tab. See the tab shortcode for possible values. color \u003cempty\u003e Sets a default value for every contained tab. Can be overridden by each tab. See the tab shortcode for possible values. title \u003cempty\u003e Arbitrary title written in front of the tab view. icon \u003cempty\u003e Font Awesome icon name set to the left of the title. \u003ccontent\u003e \u003cempty\u003e Arbitrary number of tabs defined with the tab sub-shortcode. Examples Behavior of the groupid See what happens to the tab views while you select different tabs.\nWhile pressing a tab of Group A switches all tab views of Group A in sync (if the tab is available), the tabs of Group B are left untouched.\n​ Group A, Tab View 1 Group A, Tab View 2 Group B {{\u003c tabs groupid=\"a\" \u003e}} {{% tab title=\"json\" %}} {{\u003c highlight json \"linenos=true\" \u003e}} { \"Hello\": \"World\" } {{\u003c /highlight \u003e}} {{% /tab %}} {{% tab title=\"_**XML**_ stuff\" %}} ```xml \u003cHello\u003eWorld\u003c/Hello\u003e ``` {{% /tab %}} {{% tab title=\"text\" %}} Hello World {{% /tab %}} {{\u003c /tabs \u003e}} {{\u003c tabs groupid=\"a\" \u003e}} {{% tab title=\"json\" %}} {{\u003c highlight json \"linenos=true\" \u003e}} { \"Hello\": \"World\" } {{\u003c /highlight \u003e}} {{% /tab %}} {{% tab title=\"XML stuff\" %}} ```xml \u003cHello\u003eWorld\u003c/Hello\u003e ``` {{% /tab %}} {{\u003c /tabs \u003e}} {{\u003c tabs groupid=\"b\" \u003e}} {{% tab title=\"json\" %}} {{\u003c highlight json \"linenos=true\" \u003e}} { \"Hello\": \"World\" } {{\u003c /highlight \u003e}} {{% /tab %}} {{% tab title=\"XML stuff\" %}} ```xml \u003cHello\u003eWorld\u003c/Hello\u003e ``` {{% /tab %}} {{\u003c /tabs \u003e}} Group A, Tab View 1 ​ json XML stuff text 1{ \"Hello\": \"World\" } \u003cHello\u003eWorld\u003c/Hello\u003e Hello World Group A, Tab View 2 ​ json XML stuff 1{ \"Hello\": \"World\" } \u003cHello\u003eWorld\u003c/Hello\u003e Group B ​ json XML stuff 1{ \"Hello\": \"World\" } \u003cHello\u003eWorld\u003c/Hello\u003e Nested Tab Views and Color In case you want to nest tab views, the parent tab that contains nested tab views needs to be declared with {{\u003c tab \u003e}} instead of {{% tab %}}. Note, that in this case it is not possible to put markdown in the parent tab.\nYou can also set style and color parameter for all tabs and overwrite them on tab level. See the tab shortcode for possible values.\n{{\u003c tabs groupid=\"main\" style=\"primary\" title=\"Rationale\" icon=\"thumbtack\" \u003e}} {{\u003c tab title=\"Text\" \u003e}} Simple text is possible here... {{\u003c tabs groupid=\"tabs-example-language\" \u003e}} {{% tab title=\"python\" %}} Python is **super** easy. - most of the time. - if you don't want to output unicode {{% /tab %}} {{% tab title=\"bash\" %}} Bash is for **hackers**. {{% /tab %}} {{\u003c /tabs \u003e}} {{\u003c /tab \u003e}} {{\u003c tab title=\"Code\" style=\"default\" color=\"darkorchid\" \u003e}} ...but no markdown {{\u003c tabs groupid=\"tabs-example-language\" \u003e}} {{% tab title=\"python\" %}} ```python print(\"Hello World!\") ``` {{% /tab %}} {{% tab title=\"bash\" %}} ```bash echo \"Hello World!\" ``` {{% /tab %}} {{\u003c /tabs \u003e}} {{\u003c /tab \u003e}} {{\u003c /tabs \u003e}} Rationale Text Code Simple text is possible here... ​ python bash Python is super easy.\nmost of the time. if you don’t want to output unicode Bash is for hackers.\n...but no markdown ​ python bash print(\"Hello World!\") echo \"Hello World!\"",
    "description": "Show content in tabbed views",
    "tags": [],
    "title": "Tabs",
    "uri": "/hugo-theme-relearn/shortcodes/tabs/index.html"
  },
  {
    "breadcrumb": "Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category :: Taxonomy",
    "uri": "/hugo-theme-relearn/categories/taxonomy/index.html"
  },
  {
    "breadcrumb": "Categories",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Category :: Theming",
    "uri": "/hugo-theme-relearn/categories/theming/index.html"
  },
  {
    "breadcrumb": "Tags",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tag :: Tutorial",
    "uri": "/hugo-theme-relearn/tags/tutorial/index.html"
  }
]
